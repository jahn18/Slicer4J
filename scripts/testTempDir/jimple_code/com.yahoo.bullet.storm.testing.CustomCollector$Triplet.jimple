public class com.yahoo.bullet.storm.testing.CustomCollector$Triplet extends java.lang.Object
{
    private java.lang.String streamId;
    private java.util.Collection anchors;
    private java.util.List tuple;

    public void <init>(java.lang.String, java.util.Collection, java.util.List)
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.lang.String r1;
        java.util.Collection r2, $r10;
        java.util.List r3, $r11;
        java.lang.Object $r6, $r7;
        java.util.ArrayList $r8, $r9;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Collection;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.lang.String streamId> = r1;

        if r2 == null goto label1;

        $r6 = r2;

        goto label2;

     label1:
        $r8 = new java.util.ArrayList;

        $r6 = $r8;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label2:
        $r10 = (java.util.Collection) $r6;

        r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.Collection anchors> = $r10;

        if r3 == null goto label3;

        $r7 = r3;

        goto label4;

     label3:
        $r9 = new java.util.ArrayList;

        $r7 = $r9;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label4:
        $r11 = (java.util.List) $r7;

        r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List tuple> = $r11;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r14, $r15, $r21, $r22;
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r2;
        java.lang.String $r3, $r13, $r23;
        java.util.Collection $r6;
        java.util.stream.Stream $r7, $r9, $r17;
        java.util.function.Function $r8;
        java.util.function.BinaryOperator $r10, $r18;
        java.util.Optional $r11, $r19;
        java.lang.Object $r12, $r20;
        java.util.List $r16;

        r2 := @this: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Stream: ");

        $r3 = r2.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.lang.String streamId>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", <Anchors: ");

        $r6 = r2.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.Collection anchors>;

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.stream.Stream stream()>();

        $r8 = staticinvoke <com.yahoo.bullet.storm.testing.CustomCollector$Triplet$toString__77: java.util.function.Function bootstrap$()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.testing.CustomCollector$Triplet$lambda_toString_0__79: java.util.function.BinaryOperator bootstrap$()>();

        $r11 = interfaceinvoke $r9.<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>($r10);

        $r12 = virtualinvoke $r11.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("None");

        $r13 = (java.lang.String) $r12;

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, <");

        $r16 = r2.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List tuple>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.stream.Stream stream()>();

        $r18 = staticinvoke <com.yahoo.bullet.storm.testing.CustomCollector$Triplet$lambda_toString_1__80: java.util.function.BinaryOperator bootstrap$()>();

        $r19 = interfaceinvoke $r17.<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>($r18);

        $r20 = virtualinvoke $r19.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("None");

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public java.lang.String getStreamId()
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.lang.String $r1;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.lang.String streamId>;

        return $r1;
    }

    public java.util.Collection getAnchors()
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.util.Collection $r1;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.Collection anchors>;

        return $r1;
    }

    public java.util.List getTuple()
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.util.List $r1;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List tuple>;

        return $r1;
    }

    public static java.lang.Object lambda$toString$1(java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r7;
        java.lang.Object r1, r5;
        java.lang.String $r2, $r6, $r8;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String lambda$toString$0(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r5;
        java.lang.String r1, r4, $r6;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
