public class com.yahoo.bullet.storm.testing.TestHelpers extends java.lang.Object
{
    public static final double EPSILON;

    public void <init>()
    {
        com.yahoo.bullet.storm.testing.TestHelpers r0;

        r0 := @this: com.yahoo.bullet.storm.testing.TestHelpers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void assertContains(java.util.Collection, java.lang.Object)
    {
        java.util.Collection r0;
        java.lang.Object r2;

        r0 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers: void assertContains(java.util.Collection,java.lang.Object,long)>(r0, r2, 1L);

        return;
    }

    public static void assertContains(java.util.Collection, java.lang.Object, long)
    {
        java.util.Collection r0;
        java.util.stream.Stream $r2, $r6, $r8;
        java.lang.Object r3;
        java.util.function.Function $r5;
        java.util.function.Predicate $r7;
        long l0, l1;

        r0 := @parameter0: java.util.Collection;

        r3 := @parameter1: java.lang.Object;

        l1 := @parameter2: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.stream.Stream stream()>();

        virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers$equals__94: java.util.function.Function bootstrap$(java.lang.Object)>(r3);

        $r6 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r5);

        $r7 = staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers$lambda_assertContains_0__95: java.util.function.Predicate bootstrap$()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);

        l0 = interfaceinvoke $r8.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(l0, l1);

        return;
    }

    public static void assertJSONEquals(java.lang.String, java.lang.String)
    {
        com.google.gson.JsonParser $r0;
        java.lang.String r2, r4, $r11;
        com.google.gson.JsonElement r3, r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = new com.google.gson.JsonParser;

        specialinvoke $r0.<com.google.gson.JsonParser: void <init>()>();

        r3 = virtualinvoke $r0.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r2);

        r5 = virtualinvoke $r0.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actual: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Expected: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r11, r3, r5);

        return;
    }

    public static transient byte[] getListBytes(com.yahoo.bullet.record.BulletRecord[])
    {
        java.util.ArrayList $r0;
        com.yahoo.bullet.record.BulletRecord[] r2;
        byte[] $r3;

        r2 := @parameter0: com.yahoo.bullet.record.BulletRecord[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, r2);

        $r3 = staticinvoke <com.yahoo.bullet.common.SerializerDeserializer: byte[] toBytes(java.io.Serializable)>($r0);

        return $r3;
    }

    public static boolean lambda$assertContains$0(java.lang.Boolean)
    {
        java.lang.Boolean r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Boolean;

        $z0 = virtualinvoke r0.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <com.yahoo.bullet.storm.testing.TestHelpers: double EPSILON> = 1.0E-6;

        return;
    }
}
