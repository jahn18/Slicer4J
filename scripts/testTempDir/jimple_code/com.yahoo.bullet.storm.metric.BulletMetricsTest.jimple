public class com.yahoo.bullet.storm.metric.BulletMetricsTest extends java.lang.Object
{

    public void <init>()
    {
        com.yahoo.bullet.storm.metric.BulletMetricsTest r0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetricsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testRegisterMetric()
    {
        com.yahoo.bullet.storm.metric.BulletMetrics $r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r3;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric r5;
        org.apache.storm.metric.api.CountMetric r6;
        org.apache.storm.metric.api.ReducedMetric r7;
        com.yahoo.bullet.storm.metric.MapCountMetric r8;
        org.apache.storm.metric.api.IMetric $r9, $r10, $r11, $r12;
        com.yahoo.bullet.storm.metric.BulletMetricsTest r13;

        r13 := @this: com.yahoo.bullet.storm.metric.BulletMetricsTest;

        $r0 = new com.yahoo.bullet.storm.metric.BulletMetrics;

        $r1 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        specialinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r1);

        $r3 = new com.yahoo.bullet.storm.testing.CustomTopologyContext;

        specialinvoke $r3.<com.yahoo.bullet.storm.testing.CustomTopologyContext: void <init>()>();

        r5 = virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("A", $r3);

        r6 = virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.CountMetric registerCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("B", $r3);

        r7 = virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.ReducedMetric registerAveragingMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("C", $r3);

        r8 = virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.MapCountMetric registerMapCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("D", $r3);

        $r9 = virtualinvoke $r3.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>("A");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r5);

        $r10 = virtualinvoke $r3.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>("B");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, r6);

        $r11 = virtualinvoke $r3.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>("C");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, r7);

        $r12 = virtualinvoke $r3.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>("D");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, r8);

        return;
    }

    public void testEnabled()
    {
        com.yahoo.bullet.storm.BulletStormConfig $r0;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.metric.BulletMetrics $r4;
        boolean $z0;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric r7, $r9, $r11;
        org.apache.storm.metric.api.CountMetric r13, $r15;
        com.yahoo.bullet.storm.metric.MapCountMetric r17, $r19, $r21, $r23;
        com.yahoo.bullet.storm.metric.BulletMetricsTest r24;

        r24 := @this: com.yahoo.bullet.storm.metric.BulletMetricsTest;

        $r0 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r4 = new com.yahoo.bullet.storm.metric.BulletMetrics;

        specialinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r0);

        $z0 = virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean isEnabled()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r6 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/metric/AbsoluteCountMetric;");

        r7 = (com.yahoo.bullet.storm.metric.AbsoluteCountMetric) $r6;

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>(r7, 1L);

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void setCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>(r7, 1L);

        $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r7);

        $r9 = (com.yahoo.bullet.storm.metric.AbsoluteCountMetric) $r8;

        virtualinvoke $r9.<com.yahoo.bullet.storm.metric.AbsoluteCountMetric: void add(long)>(1L);

        $r10 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r7);

        $r11 = (com.yahoo.bullet.storm.metric.AbsoluteCountMetric) $r10;

        virtualinvoke $r11.<com.yahoo.bullet.storm.metric.AbsoluteCountMetric: void set(long)>(1L);

        $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/storm/metric/api/CountMetric;");

        r13 = (org.apache.storm.metric.api.CountMetric) $r12;

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(org.apache.storm.metric.api.CountMetric,long)>(r13, 1L);

        $r14 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r13);

        $r15 = (org.apache.storm.metric.api.CountMetric) $r14;

        virtualinvoke $r15.<org.apache.storm.metric.api.CountMetric: void incrBy(long)>(1L);

        $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/metric/MapCountMetric;");

        r17 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r16;

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.MapCountMetric,java.lang.String,long)>(r17, "", 1L);

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void setCount(com.yahoo.bullet.storm.metric.MapCountMetric,java.lang.String,long)>(r17, "", 1L);

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void clearCount(com.yahoo.bullet.storm.metric.MapCountMetric)>(r17);

        $r18 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r17);

        $r19 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r18;

        virtualinvoke $r19.<com.yahoo.bullet.storm.metric.MapCountMetric: void add(java.lang.String,long)>("", 1L);

        $r20 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r17);

        $r21 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r20;

        virtualinvoke $r21.<com.yahoo.bullet.storm.metric.MapCountMetric: void set(java.lang.String,long)>("", 1L);

        $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r17);

        $r23 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r22;

        virtualinvoke $r23.<com.yahoo.bullet.storm.metric.MapCountMetric: void clear()>();

        return;
    }

    public void testNotEnabled()
    {
        com.yahoo.bullet.storm.metric.BulletMetrics $r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1;
        boolean $z0;
        java.lang.Object $r3, $r6, $r9;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric r4;
        java.lang.Object[] $r5, $r8, $r11;
        org.apache.storm.metric.api.CountMetric r7;
        com.yahoo.bullet.storm.metric.MapCountMetric r10;
        com.yahoo.bullet.storm.metric.BulletMetricsTest r12;

        r12 := @this: com.yahoo.bullet.storm.metric.BulletMetricsTest;

        $r0 = new com.yahoo.bullet.storm.metric.BulletMetrics;

        $r1 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        specialinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r1);

        $z0 = virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean isEnabled()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $r3 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/metric/AbsoluteCountMetric;");

        r4 = (com.yahoo.bullet.storm.metric.AbsoluteCountMetric) $r3;

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>(r4, 1L);

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void setCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>(r4, 1L);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r4;

        staticinvoke <org.mockito.Mockito: void verifyNoInteractions(java.lang.Object[])>($r5);

        $r6 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/storm/metric/api/CountMetric;");

        r7 = (org.apache.storm.metric.api.CountMetric) $r6;

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(org.apache.storm.metric.api.CountMetric,long)>(r7, 1L);

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r7;

        staticinvoke <org.mockito.Mockito: void verifyNoInteractions(java.lang.Object[])>($r8);

        $r9 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/metric/MapCountMetric;");

        r10 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r9;

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.MapCountMetric,java.lang.String,long)>(r10, "", 1L);

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void setCount(com.yahoo.bullet.storm.metric.MapCountMetric,java.lang.String,long)>(r10, "", 1L);

        virtualinvoke $r0.<com.yahoo.bullet.storm.metric.BulletMetrics: void clearCount(com.yahoo.bullet.storm.metric.MapCountMetric)>(r10);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r10;

        staticinvoke <org.mockito.Mockito: void verifyNoInteractions(java.lang.Object[])>($r11);

        return;
    }
}
