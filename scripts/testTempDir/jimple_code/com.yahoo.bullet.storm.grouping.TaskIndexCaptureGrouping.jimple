public class com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping extends java.lang.Object implements org.apache.storm.grouping.CustomStreamGrouping
{
    public static final java.util.Map TASK_INDEX_MAP;

    public void <init>()
    {
        com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping r0;

        r0 := @this: com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void prepare(org.apache.storm.task.WorkerTopologyContext, org.apache.storm.generated.GlobalStreamId, java.util.List)
    {
        java.util.Map $r0, $r2, $r4;
        boolean $z0;
        java.util.List r3;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        java.lang.Throwable $r8;
        com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping r10;
        org.apache.storm.task.WorkerTopologyContext r11;
        org.apache.storm.generated.GlobalStreamId r12;

        r10 := @this: com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping;

        r11 := @parameter0: org.apache.storm.task.WorkerTopologyContext;

        r12 := @parameter1: org.apache.storm.generated.GlobalStreamId;

        r3 := @parameter2: java.util.List;

        $r0 = <com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping: java.util.Map TASK_INDEX_MAP>;

        entermonitor $r0;

     label1:
        $r2 = <com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping: java.util.Map TASK_INDEX_MAP>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = <com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping: java.util.Map TASK_INDEX_MAP>;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor $r0;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List chooseTasks(int, java.util.List)
    {
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int i0;
        java.lang.String $r4;
        com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping r5;
        java.util.List r6;

        r5 := @this: com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping;

        i0 := @parameter0: int;

        r6 := @parameter1: java.util.List;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to emit using TaskIndexCaptureGrouping from task id ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.yahoo.bullet.storm.grouping.TaskIndexCaptureGrouping: java.util.Map TASK_INDEX_MAP> = $r0;

        return;
    }
}
