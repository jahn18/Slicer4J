public class com.yahoo.bullet.storm.ReflectionUtilsTest extends java.lang.Object
{

    public void <init>()
    {
        com.yahoo.bullet.storm.ReflectionUtilsTest r0;

        r0 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testGettingNonExistentSpout() throws java.lang.Exception
    {
        com.yahoo.bullet.storm.ReflectionUtils $r0;
        com.yahoo.bullet.storm.ReflectionUtilsTest r3;

        r3 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        $r0 = new com.yahoo.bullet.storm.ReflectionUtils;

        specialinvoke $r0.<com.yahoo.bullet.storm.ReflectionUtils: void <init>()>();

        staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: org.apache.storm.topology.IRichSpout getSpout(java.lang.String,java.util.List)>("does.not.exist", null);

        return;
    }

    public void testGettingSpoutWithDefaultConstructor() throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        org.apache.storm.topology.IRichSpout r2;
        boolean $z0;
        com.yahoo.bullet.storm.ReflectionUtilsTest r3;

        r3 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        $r0 = class "Lcom/yahoo/bullet/storm/testing/CustomIRichSpout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        r2 = staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: org.apache.storm.topology.IRichSpout getSpout(java.lang.String,java.util.List)>($r1, null);

        $z0 = r2 instanceof com.yahoo.bullet.storm.testing.CustomIRichSpout;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    public void testGettingSpoutWithArguments() throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.List $r2, $r5, $r6;
        org.apache.storm.topology.IRichSpout r3;
        boolean $z0;
        com.yahoo.bullet.storm.testing.TestSpout $r4;
        com.yahoo.bullet.storm.ReflectionUtilsTest r7;

        r7 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        $r0 = class "Lcom/yahoo/bullet/storm/testing/TestSpout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("foo");

        r3 = staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: org.apache.storm.topology.IRichSpout getSpout(java.lang.String,java.util.List)>($r1, $r2);

        $z0 = r3 instanceof com.yahoo.bullet.storm.testing.TestSpout;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = (com.yahoo.bullet.storm.testing.TestSpout) r3;

        $r5 = virtualinvoke $r4.<com.yahoo.bullet.storm.testing.TestSpout: java.util.List getArgs()>();

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public void testIsIMetricsConsumer()
    {
        java.lang.Class $r0, $r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;
        com.yahoo.bullet.storm.ReflectionUtilsTest r4;

        r4 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        $r0 = class "Lorg/apache/storm/metric/LoggingMetricsConsumer;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: boolean isIMetricsConsumer(java.lang.String)>($r1);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $r2 = class "Lcom/yahoo/bullet/storm/testing/CustomIMetricsConsumer;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: boolean isIMetricsConsumer(java.lang.String)>($r3);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testRegisteringIMetricsConsumer()
    {
        org.apache.storm.Config $r0;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        java.lang.Object $r4, $r7, $r10, $r11;
        java.lang.Class $r5, $r8;
        java.lang.String $r6, $r9;
        java.lang.Boolean $r12;
        boolean $z0;
        com.yahoo.bullet.storm.ReflectionUtilsTest r13;

        r13 := @this: com.yahoo.bullet.storm.ReflectionUtilsTest;

        $r0 = new org.apache.storm.Config;

        specialinvoke $r0.<org.apache.storm.Config: void <init>()>();

        $r2 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object get(java.lang.String)>("bullet.topology.custom.metrics.consumer.was.registered");

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4);

        $r5 = class "Lorg/apache/storm/metric/LoggingMetricsConsumer;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: void registerMetricsConsumer(java.lang.String,org.apache.storm.Config,com.yahoo.bullet.storm.BulletStormConfig)>($r6, $r0, $r2);

        $r7 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.metrics.consumer.register");

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r7);

        $r8 = class "Lcom/yahoo/bullet/storm/testing/CustomIMetricsConsumer;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.ReflectionUtils: void registerMetricsConsumer(java.lang.String,org.apache.storm.Config,com.yahoo.bullet.storm.BulletStormConfig)>($r9, $r0, $r2);

        $r10 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.metrics.consumer.register");

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r10);

        $r11 = virtualinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object get(java.lang.String)>("bullet.topology.custom.metrics.consumer.was.registered");

        $r12 = (java.lang.Boolean) $r11;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }
}
