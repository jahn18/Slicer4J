public class com.yahoo.bullet.storm.BulletStormConfig extends com.yahoo.bullet.common.BulletConfig implements java.io.Serializable
{
    private static final org.slf4j.Logger log;
    private static final long serialVersionUID;
    public static final java.lang.String TOPOLOGY_NAME;
    public static final java.lang.String TOPOLOGY_METRICS_ENABLE;
    public static final java.lang.String TOPOLOGY_METRICS_BUILT_IN_ENABLE;
    public static final java.lang.String TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING;
    public static final java.lang.String TOPOLOGY_METRICS_CLASSES;
    public static final java.lang.String REPLAY_ENABLE;
    public static final java.lang.String REPLAY_REQUEST_INTERVAL;
    public static final java.lang.String REPLAY_BATCH_SIZE;
    public static final java.lang.String REPLAY_BATCH_COMPRESS_ENABLE;
    public static final java.lang.String DSL_SPOUT_ENABLE;
    public static final java.lang.String DSL_SPOUT_PARALLELISM;
    public static final java.lang.String DSL_SPOUT_CPU_LOAD;
    public static final java.lang.String DSL_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String DSL_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String DSL_SPOUT_CONNECTOR_CLASS_NAME;
    public static final java.lang.String DSL_SPOUT_CONNECTOR_SPOUT_ENABLE;
    public static final java.lang.String DSL_BOLT_ENABLE;
    public static final java.lang.String DSL_BOLT_PARALLELISM;
    public static final java.lang.String DSL_BOLT_CPU_LOAD;
    public static final java.lang.String DSL_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String DSL_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String DSL_DESERIALIZER_ENABLE;
    public static final java.lang.String BULLET_SPOUT_CLASS_NAME;
    public static final java.lang.String BULLET_SPOUT_ARGS;
    public static final java.lang.String BULLET_SPOUT_PARALLELISM;
    public static final java.lang.String BULLET_SPOUT_CPU_LOAD;
    public static final java.lang.String BULLET_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String BULLET_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String QUERY_SPOUT_PARALLELISM;
    public static final java.lang.String QUERY_SPOUT_CPU_LOAD;
    public static final java.lang.String QUERY_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String QUERY_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String TICK_SPOUT_CPU_LOAD;
    public static final java.lang.String TICK_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String TICK_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String FILTER_BOLT_PARALLELISM;
    public static final java.lang.String FILTER_BOLT_CPU_LOAD;
    public static final java.lang.String FILTER_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String FILTER_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String JOIN_BOLT_PARALLELISM;
    public static final java.lang.String JOIN_BOLT_CPU_LOAD;
    public static final java.lang.String JOIN_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String JOIN_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String RESULT_BOLT_PARALLELISM;
    public static final java.lang.String RESULT_BOLT_CPU_LOAD;
    public static final java.lang.String RESULT_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String RESULT_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String LOOP_BOLT_PARALLELISM;
    public static final java.lang.String LOOP_BOLT_CPU_LOAD;
    public static final java.lang.String LOOP_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String LOOP_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String REPLAY_BOLT_PARALLELISM;
    public static final java.lang.String REPLAY_BOLT_CPU_LOAD;
    public static final java.lang.String REPLAY_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final java.lang.String REPLAY_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.String TICK_SPOUT_INTERVAL;
    public static final java.lang.String FILTER_BOLT_STATS_REPORT_TICKS;
    public static final java.lang.String JOIN_BOLT_QUERY_POST_FINISH_BUFFER_TICKS;
    public static final java.lang.String JOIN_BOLT_WINDOW_PRE_START_DELAY_TICKS;
    public static final java.lang.String LOOP_BOLT_PUBSUB_OVERRIDES;
    public static final java.lang.String DEFAULT_TOPOLOGY_NAME;
    public static final boolean DEFAULT_TOPOLOGY_METRICS_ENABLE;
    public static final boolean DEFAULT_TOPOLOGY_METRICS_BUILT_IN_ENABLE;
    public static final java.util.Map DEFAULT_TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING;
    public static final java.lang.String DEFAULT_BUILT_IN_METRICS_INTERVAL_KEY;
    public static final java.util.List DEFAULT_TOPOLOGY_METRICS_CLASSES;
    public static final boolean DEFAULT_REPLAY_ENABLE;
    public static final long DEFAULT_REPLAY_REQUEST_INTERVAL;
    public static final int DEFAULT_REPLAY_BATCH_SIZE;
    public static final boolean DEFAULT_REPLAY_BATCH_COMPRESS_ENABLE;
    public static final boolean DEFAULT_DSL_SPOUT_ENABLE;
    public static final boolean DEFAULT_DSL_SPOUT_CONNECTOR_SPOUT_ENABLE;
    public static final int DEFAULT_DSL_SPOUT_PARALLELISM;
    public static final double DEFAULT_DSL_SPOUT_CPU_LOAD;
    public static final double DEFAULT_DSL_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_DSL_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final boolean DEFAULT_DSL_BOLT_ENABLE;
    public static final int DEFAULT_DSL_BOLT_PARALLELISM;
    public static final double DEFAULT_DSL_BOLT_CPU_LOAD;
    public static final double DEFAULT_DSL_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_DSL_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final boolean DEFAULT_DSL_DESERIALIZER_ENABLE;
    public static final int DEFAULT_BULLET_SPOUT_PARALLELISM;
    public static final double DEFAULT_BULLET_SPOUT_CPU_LOAD;
    public static final double DEFAULT_BULLET_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_BULLET_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_QUERY_SPOUT_PARALLELISM;
    public static final double DEFAULT_QUERY_SPOUT_CPU_LOAD;
    public static final double DEFAULT_QUERY_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_QUERY_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final double DEFAULT_TICK_SPOUT_CPU_LOAD;
    public static final double DEFAULT_TICK_SPOUT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_TICK_SPOUT_MEMORY_OFF_HEAP_LOAD;
    public static final java.lang.Number DEFAULT_FILTER_BOLT_PARALLELISM;
    public static final double DEFAULT_FILTER_BOLT_CPU_LOAD;
    public static final double DEFAULT_FILTER_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_FILTER_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_JOIN_BOLT_PARALLELISM;
    public static final double DEFAULT_JOIN_BOLT_CPU_LOAD;
    public static final double DEFAULT_JOIN_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_JOIN_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_RESULT_BOLT_PARALLELISM;
    public static final double DEFAULT_RESULT_BOLT_CPU_LOAD;
    public static final double DEFAULT_RESULT_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_RESULT_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_LOOP_BOLT_PARALLELISM;
    public static final double DEFAULT_LOOP_BOLT_CPU_LOAD;
    public static final double DEFAULT_LOOP_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_LOOP_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_REPLAY_BOLT_PARALLELISM;
    public static final double DEFAULT_REPLAY_BOLT_CPU_LOAD;
    public static final double DEFAULT_REPLAY_BOLT_MEMORY_ON_HEAP_LOAD;
    public static final double DEFAULT_REPLAY_BOLT_MEMORY_OFF_HEAP_LOAD;
    public static final int DEFAULT_TICK_SPOUT_INTERVAL;
    public static final int DEFAULT_FILTER_BOLT_STATS_REPORT_TICKS;
    public static final int DEFAULT_JOIN_BOLT_QUERY_POST_FINISH_BUFFER_TICKS;
    public static final int DEFAULT_JOIN_BOLT_QUERY_PRE_START_DELAY_TICKS;
    public static final java.util.Map DEFAULT_LOOP_BOLT_PUBSUB_OVERRIDES;
    public static final java.lang.String STORM_CONFIG;
    public static final java.lang.String STORM_CONTEXT;
    public static final java.lang.String CUSTOM_STORM_SETTING_PREFIX;
    public static final int TICK_SPOUT_PARALLELISM;
    public static final int TICK_INTERVAL_MINIMUM;
    public static final double SMALLEST_WINDOW_MIN_EMIT_EVERY_MULTIPLE;
    public static final int PRE_START_DELAY_BUFFER_TICKS;
    public static final java.lang.String DEFAULT_STORM_CONFIGURATION;
    private static final com.yahoo.bullet.common.Validator VALIDATOR;

    public void <init>()
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        com.yahoo.bullet.common.Validator $r1;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke r0.<com.yahoo.bullet.common.BulletConfig: void <init>(java.lang.String)>("bullet_storm_defaults.yaml");

        $r1 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        virtualinvoke $r1.<com.yahoo.bullet.common.Validator: void validate(com.yahoo.bullet.common.BulletConfig)>(r0);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        com.yahoo.bullet.common.Config $r1;
        java.lang.String r2;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        r2 := @parameter0: java.lang.String;

        $r1 = new com.yahoo.bullet.common.Config;

        specialinvoke $r1.<com.yahoo.bullet.common.Config: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: void <init>(com.yahoo.bullet.common.Config)>($r1);

        return;
    }

    public void <init>(com.yahoo.bullet.common.Config)
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        com.yahoo.bullet.common.Config r1;
        com.yahoo.bullet.common.Validator $r2;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        r1 := @parameter0: com.yahoo.bullet.common.Config;

        specialinvoke r0.<com.yahoo.bullet.common.BulletConfig: void <init>(java.lang.String)>("bullet_storm_defaults.yaml");

        virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: void merge(com.yahoo.bullet.common.Config)>(r1);

        $r2 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        virtualinvoke $r2.<com.yahoo.bullet.common.Validator: void validate(com.yahoo.bullet.common.BulletConfig)>(r0);

        return;
    }

    public com.yahoo.bullet.storm.BulletStormConfig validate()
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        com.yahoo.bullet.common.Validator $r1;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        $r1 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        virtualinvoke $r1.<com.yahoo.bullet.common.Validator: void validate(com.yahoo.bullet.common.BulletConfig)>(r0);

        return r0;
    }

    public static com.yahoo.bullet.common.Validator getValidator()
    {
        com.yahoo.bullet.common.Validator $r0, $r1;

        $r0 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r1 = virtualinvoke $r0.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator copy()>();

        return $r1;
    }

    public java.util.Map getCustomStormSettings()
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        java.util.Optional $r1;
        java.util.Map $r2;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        $r1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        $r2 = virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: java.util.Map getAllWithPrefix(java.util.Optional,java.lang.String,boolean)>($r1, "bullet.topology.custom.", 1);

        return $r2;
    }

    public static boolean isMetricMapping(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.Set $r1, $r5;
        java.util.stream.Stream $r2;
        java.util.function.Predicate $r3;
        boolean $z0;
        java.lang.ClassCastException $r4;
        org.slf4j.Logger $r6;
        java.util.Map r7;

        r0 := @parameter0: java.lang.Object;

     label1:
        r7 = (java.util.Map) r0;

        $r1 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r3 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isMetricInterval__108: java.util.function.Predicate bootstrap$()>();

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean allMatch(java.util.function.Predicate)>($r3);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r6 = <com.yahoo.bullet.storm.BulletStormConfig: org.slf4j.Logger log>;

        $r5 = <com.yahoo.bullet.storm.TopologyConstants: java.util.Set BUILT_IN_METRICS>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Interval mapping is not a map of metric string names: {} to numbers", $r5);

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public static boolean isMetricInterval(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1, $r3;
        java.lang.String r2;
        java.lang.Number r4;
        java.util.Set $r5, $r6;
        boolean $z0, $z1;
        org.slf4j.Logger $r7;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = (java.lang.String) $r1;

        $r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (java.lang.Number) $r3;

        $r5 = <com.yahoo.bullet.storm.TopologyConstants: java.util.Set BUILT_IN_METRICS>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.yahoo.bullet.common.Validator: boolean isPositiveInt(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

     label1:
        $r7 = <com.yahoo.bullet.storm.BulletStormConfig: org.slf4j.Logger log>;

        $r6 = <com.yahoo.bullet.storm.TopologyConstants: java.util.Set BUILT_IN_METRICS>;

        interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("{} is not a valid metric interval mapping. Supported metrics: {}", r0, $r6);

        return 0;

     label2:
        return 1;
    }

    public static boolean areMetricsConsumerClasses(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.stream.Stream $r1;
        java.util.function.Predicate $r2;
        boolean $z0;
        java.lang.ClassCastException $r3;
        org.slf4j.Logger $r4;
        java.util.List r5;

        r0 := @parameter0: java.lang.Object;

     label1:
        r5 = (java.util.List) r0;

        $r1 = interfaceinvoke r5.<java.util.List: java.util.stream.Stream stream()>();

        $r2 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isIMetricsConsumer__110: java.util.function.Predicate bootstrap$()>();

        $z0 = interfaceinvoke $r1.<java.util.stream.Stream: boolean allMatch(java.util.function.Predicate)>($r2);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = <com.yahoo.bullet.storm.BulletStormConfig: org.slf4j.Logger log>;

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Metrics classes is not provided as a list of strings: {}", r0);

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public static boolean isMapWithStringKeys(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.Set $r1;
        java.util.stream.Stream $r2;
        java.util.function.Predicate $r3;
        boolean $z0;
        java.lang.ClassCastException $r4;
        org.slf4j.Logger $r5;
        java.util.Map r6;

        r0 := @parameter0: java.lang.Object;

     label1:
        r6 = (java.util.Map) r0;

        $r1 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r3 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isEmpty__109: java.util.function.Predicate bootstrap$()>();

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean noneMatch(java.util.function.Predicate)>($r3);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = <com.yahoo.bullet.storm.BulletStormConfig: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} is not a valid map of non-empty strings to objects", r0);

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public static boolean areNeededIntervalsProvided(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        java.lang.Boolean $r1;
        boolean z0, $z1, $z2;
        java.util.Map $r3;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = (java.lang.Boolean) r0;

        z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        if z0 == 0 goto label1;

        $r3 = (java.util.Map) r2;

        $z1 = staticinvoke <com.yahoo.bullet.common.Utilities: boolean isEmpty(java.util.Map)>($r3);

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isStartDelayEnough(java.util.List)
    {
        java.util.List r0;
        java.lang.Object $r1, $r3, $r5;
        java.lang.Integer $r2, $r4, $r6;
        int i0, i1, i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (java.lang.Integer) $r1;

        i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = (java.lang.Integer) $r3;

        i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(2);

        $r6 = (java.lang.Integer) $r5;

        i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i3 = i1 + 2;

        $i4 = i0 * $i3;

        if i2 < $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile com.yahoo.bullet.common.BulletConfig validate()
    {
        com.yahoo.bullet.storm.BulletStormConfig r0, $r1;

        r0 := @this: com.yahoo.bullet.storm.BulletStormConfig;

        $r1 = virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r5, $r13, $r38, $r532;
        java.lang.Integer $r3, $r6, $r12, $r66, $r86, $r143, $r198, $r236, $r342, $r380, $r418, $r456, $r494, $r498, $r506, $r514, $r522;
        java.util.ArrayList $r8;
        java.lang.Class $r9;
        java.util.List $r10, $r46;
        java.lang.String $r11;
        com.yahoo.bullet.common.Validator $r14, $r15, $r20, $r26, $r32, $r40, $r48, $r54, $r62, $r70, $r76, $r82, $r90, $r100, $r110, $r120, $r127, $r133, $r139, $r147, $r157, $r167, $r177, $r183, $r190, $r194, $r202, $r212, $r222, $r232, $r240, $r250, $r260, $r270, $r280, $r290, $r300, $r308, $r318, $r328, $r338, $r346, $r356, $r366, $r376, $r384, $r394, $r404, $r414, $r422, $r432, $r442, $r452, $r460, $r470, $r480, $r490, $r502, $r510, $r518, $r526, $r534, $r539;
        com.yahoo.bullet.common.Validator$Entry $r16, $r17, $r21, $r23, $r27, $r29, $r33, $r35, $r37, $r41, $r43, $r45, $r49, $r51, $r55, $r57, $r59, $r63, $r65, $r67, $r71, $r73, $r77, $r79, $r83, $r85, $r87, $r91, $r93, $r95, $r97, $r101, $r103, $r105, $r107, $r111, $r113, $r115, $r117, $r121, $r123, $r124, $r128, $r130, $r134, $r136, $r140, $r142, $r144, $r148, $r150, $r152, $r154, $r158, $r160, $r162, $r164, $r168, $r170, $r172, $r174, $r178, $r180, $r184, $r186, $r187, $r191, $r195, $r197, $r199, $r203, $r205, $r207, $r209, $r213, $r215, $r217, $r219, $r223, $r225, $r227, $r229, $r233, $r235, $r237, $r241, $r243, $r245, $r247, $r251, $r253, $r255, $r257, $r261, $r263, $r265, $r267, $r271, $r273, $r275, $r277, $r281, $r283, $r285, $r287, $r291, $r293, $r295, $r297, $r301, $r303, $r305, $r309, $r311, $r313, $r315, $r319, $r321, $r323, $r325, $r329, $r331, $r333, $r335, $r339, $r341, $r343, $r347, $r349, $r351, $r353, $r357, $r359, $r361, $r363, $r367, $r369, $r371, $r373, $r377, $r379, $r381, $r385, $r387, $r389, $r391, $r395, $r397, $r399, $r401, $r405, $r407, $r409, $r411, $r415, $r417, $r419, $r423, $r425, $r427, $r429, $r433, $r435, $r437, $r439, $r443, $r445, $r447, $r449, $r453, $r455, $r457, $r461, $r463, $r465, $r467, $r471, $r473, $r475, $r477, $r481, $r483, $r485, $r487, $r491, $r493, $r497, $r499, $r503, $r505, $r507, $r511, $r513, $r515, $r519, $r521, $r523, $r527, $r529, $r531;
        java.util.function.Predicate $r18, $r24, $r30, $r34, $r36, $r42, $r44, $r52, $r56, $r64, $r74, $r80, $r84, $r92, $r94, $r102, $r104, $r112, $r114, $r122, $r125, $r131, $r137, $r141, $r149, $r151, $r159, $r161, $r169, $r171, $r179, $r185, $r188, $r192, $r196, $r204, $r206, $r214, $r216, $r224, $r226, $r234, $r242, $r244, $r252, $r254, $r262, $r264, $r272, $r274, $r282, $r284, $r292, $r294, $r302, $r310, $r312, $r320, $r322, $r330, $r332, $r340, $r348, $r350, $r358, $r360, $r368, $r370, $r378, $r386, $r388, $r396, $r398, $r406, $r408, $r416, $r424, $r426, $r434, $r436, $r444, $r446, $r454, $r462, $r464, $r472, $r474, $r482, $r484, $r492, $r496, $r504, $r512, $r520, $r528, $r530, $r541;
        java.lang.Boolean $r22, $r28, $r50, $r72, $r78, $r129, $r135, $r181;
        java.lang.Long $r58;
        java.util.function.Function $r60, $r68, $r88, $r98, $r108, $r118, $r145, $r155, $r165, $r175, $r200, $r210, $r220, $r230, $r238, $r248, $r258, $r268, $r278, $r288, $r298, $r306, $r316, $r326, $r336, $r344, $r354, $r364, $r374, $r382, $r392, $r402, $r412, $r420, $r430, $r440, $r450, $r458, $r468, $r478, $r488, $r500, $r508, $r516, $r524;
        java.lang.Double $r96, $r106, $r116, $r153, $r163, $r173, $r208, $r218, $r228, $r246, $r256, $r266, $r276, $r286, $r296, $r314, $r324, $r334, $r352, $r362, $r372, $r390, $r400, $r410, $r428, $r438, $r448, $r466, $r476, $r486, $r495;
        java.lang.Number $r304;
        com.yahoo.bullet.common.Validator$Relationship $r535;
        java.util.function.BiPredicate $r536;
        java.lang.String[] $r538;
        com.yahoo.bullet.common.Validator$State $r540, $r542;

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DEFAULT_STORM_CONFIGURATION> = "bullet_storm_defaults.yaml";

        <com.yahoo.bullet.storm.BulletStormConfig: int PRE_START_DELAY_BUFFER_TICKS> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double SMALLEST_WINDOW_MIN_EMIT_EVERY_MULTIPLE> = 2.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int TICK_INTERVAL_MINIMUM> = 10;

        <com.yahoo.bullet.storm.BulletStormConfig: int TICK_SPOUT_PARALLELISM> = 1;

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String CUSTOM_STORM_SETTING_PREFIX> = "bullet.topology.custom.";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String STORM_CONTEXT> = "bullet.topology.storm.context";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String STORM_CONFIG> = "bullet.topology.storm.config";

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_JOIN_BOLT_QUERY_PRE_START_DELAY_TICKS> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_JOIN_BOLT_QUERY_POST_FINISH_BUFFER_TICKS> = 3;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_FILTER_BOLT_STATS_REPORT_TICKS> = 3000;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_TICK_SPOUT_INTERVAL> = 100;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_REPLAY_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_REPLAY_BOLT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_REPLAY_BOLT_CPU_LOAD> = 100.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_REPLAY_BOLT_PARALLELISM> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_LOOP_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_LOOP_BOLT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_LOOP_BOLT_CPU_LOAD> = 20.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_LOOP_BOLT_PARALLELISM> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_RESULT_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_RESULT_BOLT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_RESULT_BOLT_CPU_LOAD> = 20.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_RESULT_BOLT_PARALLELISM> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_JOIN_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_JOIN_BOLT_MEMORY_ON_HEAP_LOAD> = 512.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_JOIN_BOLT_CPU_LOAD> = 100.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_JOIN_BOLT_PARALLELISM> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_FILTER_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_FILTER_BOLT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_FILTER_BOLT_CPU_LOAD> = 100.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_TICK_SPOUT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_TICK_SPOUT_MEMORY_ON_HEAP_LOAD> = 128.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_TICK_SPOUT_CPU_LOAD> = 20.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_QUERY_SPOUT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_QUERY_SPOUT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_QUERY_SPOUT_CPU_LOAD> = 20.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_QUERY_SPOUT_PARALLELISM> = 2;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_BULLET_SPOUT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_BULLET_SPOUT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_BULLET_SPOUT_CPU_LOAD> = 50.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_BULLET_SPOUT_PARALLELISM> = 10;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_DSL_DESERIALIZER_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_BOLT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_BOLT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_BOLT_CPU_LOAD> = 50.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_DSL_BOLT_PARALLELISM> = 10;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_DSL_BOLT_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_SPOUT_MEMORY_OFF_HEAP_LOAD> = 160.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_SPOUT_MEMORY_ON_HEAP_LOAD> = 256.0;

        <com.yahoo.bullet.storm.BulletStormConfig: double DEFAULT_DSL_SPOUT_CPU_LOAD> = 50.0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_DSL_SPOUT_PARALLELISM> = 10;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_DSL_SPOUT_CONNECTOR_SPOUT_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_DSL_SPOUT_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_REPLAY_BATCH_COMPRESS_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: int DEFAULT_REPLAY_BATCH_SIZE> = 10000;

        <com.yahoo.bullet.storm.BulletStormConfig: long DEFAULT_REPLAY_REQUEST_INTERVAL> = 30000L;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_REPLAY_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DEFAULT_BUILT_IN_METRICS_INTERVAL_KEY> = "default";

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_TOPOLOGY_METRICS_BUILT_IN_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: boolean DEFAULT_TOPOLOGY_METRICS_ENABLE> = 0;

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DEFAULT_TOPOLOGY_NAME> = "bullet-topology";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String LOOP_BOLT_PUBSUB_OVERRIDES> = "bullet.topology.loop.bolt.pubsub.overrides";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_WINDOW_PRE_START_DELAY_TICKS> = "bullet.topology.join.bolt.query.pre.start.delay.ticks";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_QUERY_POST_FINISH_BUFFER_TICKS> = "bullet.topology.join.bolt.query.post.finish.buffer.ticks";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String FILTER_BOLT_STATS_REPORT_TICKS> = "bullet.topology.filter.bolt.stats.report.ticks";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TICK_SPOUT_INTERVAL> = "bullet.topology.tick.spout.interval.ms";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.replay.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.replay.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BOLT_CPU_LOAD> = "bullet.topology.replay.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BOLT_PARALLELISM> = "bullet.topology.replay.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String LOOP_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.loop.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String LOOP_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.loop.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String LOOP_BOLT_CPU_LOAD> = "bullet.topology.loop.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String LOOP_BOLT_PARALLELISM> = "bullet.topology.loop.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String RESULT_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.result.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String RESULT_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.result.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String RESULT_BOLT_CPU_LOAD> = "bullet.topology.result.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String RESULT_BOLT_PARALLELISM> = "bullet.topology.result.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.join.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.join.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_CPU_LOAD> = "bullet.topology.join.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String JOIN_BOLT_PARALLELISM> = "bullet.topology.join.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String FILTER_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.filter.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String FILTER_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.filter.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String FILTER_BOLT_CPU_LOAD> = "bullet.topology.filter.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String FILTER_BOLT_PARALLELISM> = "bullet.topology.filter.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TICK_SPOUT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.tick.spout.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TICK_SPOUT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.tick.spout.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TICK_SPOUT_CPU_LOAD> = "bullet.topology.tick.spout.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String QUERY_SPOUT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.query.spout.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String QUERY_SPOUT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.query.spout.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String QUERY_SPOUT_CPU_LOAD> = "bullet.topology.query.spout.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String QUERY_SPOUT_PARALLELISM> = "bullet.topology.query.spout.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.bullet.spout.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.bullet.spout.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_CPU_LOAD> = "bullet.topology.bullet.spout.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_PARALLELISM> = "bullet.topology.bullet.spout.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_ARGS> = "bullet.topology.bullet.spout.args";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String BULLET_SPOUT_CLASS_NAME> = "bullet.topology.bullet.spout.class.name";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_DESERIALIZER_ENABLE> = "bullet.topology.dsl.deserializer.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_BOLT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.dsl.bolt.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_BOLT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.dsl.bolt.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_BOLT_CPU_LOAD> = "bullet.topology.dsl.bolt.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_BOLT_PARALLELISM> = "bullet.topology.dsl.bolt.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_BOLT_ENABLE> = "bullet.topology.dsl.bolt.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_CONNECTOR_SPOUT_ENABLE> = "bullet.topology.dsl.spout.connector.as.spout.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_CONNECTOR_CLASS_NAME> = "bullet.topology.dsl.spout.connector.class.name";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_MEMORY_OFF_HEAP_LOAD> = "bullet.topology.dsl.spout.memory.off.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_MEMORY_ON_HEAP_LOAD> = "bullet.topology.dsl.spout.memory.on.heap.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_CPU_LOAD> = "bullet.topology.dsl.spout.cpu.load";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_PARALLELISM> = "bullet.topology.dsl.spout.parallelism";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String DSL_SPOUT_ENABLE> = "bullet.topology.dsl.spout.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BATCH_COMPRESS_ENABLE> = "bullet.topology.replay.batch.compress.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_BATCH_SIZE> = "bullet.topology.replay.batch.size";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_REQUEST_INTERVAL> = "bullet.topology.replay.request.interval";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String REPLAY_ENABLE> = "bullet.topology.replay.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TOPOLOGY_METRICS_CLASSES> = "bullet.topology.metrics.classes";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING> = "bullet.topology.metrics.built.in.emit.interval.mapping";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TOPOLOGY_METRICS_BUILT_IN_ENABLE> = "bullet.topology.metrics.built.in.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TOPOLOGY_METRICS_ENABLE> = "bullet.topology.metrics.enable";

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.String TOPOLOGY_NAME> = "bullet.topology.name";

        <com.yahoo.bullet.storm.BulletStormConfig: long serialVersionUID> = -1778598395631221122L;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/BulletStormConfig;");

        <com.yahoo.bullet.storm.BulletStormConfig: org.slf4j.Logger log> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING> = $r1;

        $r2 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bullet_active_queries", $r3);

        $r5 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("default", $r6);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        <com.yahoo.bullet.storm.BulletStormConfig: java.util.List DEFAULT_TOPOLOGY_METRICS_CLASSES> = $r8;

        $r10 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.List DEFAULT_TOPOLOGY_METRICS_CLASSES>;

        $r9 = class "Lcom/yahoo/bullet/storm/SigarLoggingMetricsConsumer;";

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        <com.yahoo.bullet.storm.BulletStormConfig: java.lang.Number DEFAULT_FILTER_BOLT_PARALLELISM> = $r12;

        $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_LOOP_BOLT_PUBSUB_OVERRIDES> = $r13;

        $r14 = staticinvoke <com.yahoo.bullet.common.BulletConfig: com.yahoo.bullet.common.Validator getValidator()>();

        <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR> = $r14;

        $r15 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r16 = virtualinvoke $r15.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.name");

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>("bullet-topology");

        $r18 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isString__111: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r17.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r18);

        $r20 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r21 = virtualinvoke $r20.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.metrics.enable");

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r23 = virtualinvoke $r21.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r22);

        $r24 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__114: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r23.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r24);

        $r26 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.metrics.built.in.enable");

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r29 = virtualinvoke $r27.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r28);

        $r30 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__121: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r29.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r30);

        $r32 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r33 = virtualinvoke $r32.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.metrics.built.in.emit.interval.mapping");

        $r34 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isMap__127: java.util.function.Predicate bootstrap$()>();

        $r35 = virtualinvoke $r33.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r34);

        $r36 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isMetricMapping__130: java.util.function.Predicate bootstrap$()>();

        $r37 = virtualinvoke $r35.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r36);

        $r38 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_TOPOLOGY_METRICS_BUILT_IN_EMIT_INTERVAL_MAPPING>;

        virtualinvoke $r37.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r38);

        $r40 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r41 = virtualinvoke $r40.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.metrics.classes");

        $r42 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isList__133: java.util.function.Predicate bootstrap$()>();

        $r43 = virtualinvoke $r41.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r42);

        $r44 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$areMetricsConsumerClasses__136: java.util.function.Predicate bootstrap$()>();

        $r45 = virtualinvoke $r43.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r44);

        $r46 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.List DEFAULT_TOPOLOGY_METRICS_CLASSES>;

        virtualinvoke $r45.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r46);

        $r48 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r49 = virtualinvoke $r48.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.enable");

        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r51 = virtualinvoke $r49.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r50);

        $r52 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__139: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r51.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r52);

        $r54 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r55 = virtualinvoke $r54.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.request.interval");

        $r56 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__143: java.util.function.Predicate bootstrap$()>();

        $r57 = virtualinvoke $r55.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r56);

        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(30000L);

        $r59 = virtualinvoke $r57.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r58);

        $r60 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asLong__146: java.util.function.Function bootstrap$()>();

        virtualinvoke $r59.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r60);

        $r62 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r63 = virtualinvoke $r62.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.batch.size");

        $r64 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__149: java.util.function.Predicate bootstrap$()>();

        $r65 = virtualinvoke $r63.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r64);

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        $r67 = virtualinvoke $r65.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r66);

        $r68 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__153: java.util.function.Function bootstrap$()>();

        virtualinvoke $r67.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r68);

        $r70 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r71 = virtualinvoke $r70.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.batch.compress.enable");

        $r72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r73 = virtualinvoke $r71.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r72);

        $r74 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__156: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r73.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r74);

        $r76 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r77 = virtualinvoke $r76.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.enable");

        $r78 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r79 = virtualinvoke $r77.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r78);

        $r80 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__159: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r79.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r80);

        $r82 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r83 = virtualinvoke $r82.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.parallelism");

        $r84 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__161: java.util.function.Predicate bootstrap$()>();

        $r85 = virtualinvoke $r83.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r84);

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r87 = virtualinvoke $r85.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r86);

        $r88 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__162: java.util.function.Function bootstrap$()>();

        virtualinvoke $r87.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r88);

        $r90 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r91 = virtualinvoke $r90.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.cpu.load");

        $r92 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__164: java.util.function.Predicate bootstrap$()>();

        $r93 = virtualinvoke $r91.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r92);

        $r94 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__167: java.util.function.Predicate bootstrap$()>();

        $r95 = virtualinvoke $r93.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r94);

        $r96 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(50.0);

        $r97 = virtualinvoke $r95.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r96);

        $r98 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__168: java.util.function.Function bootstrap$()>();

        virtualinvoke $r97.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r98);

        $r100 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r101 = virtualinvoke $r100.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.memory.on.heap.load");

        $r102 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__169: java.util.function.Predicate bootstrap$()>();

        $r103 = virtualinvoke $r101.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r102);

        $r104 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__174: java.util.function.Predicate bootstrap$()>();

        $r105 = virtualinvoke $r103.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r104);

        $r106 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r107 = virtualinvoke $r105.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r106);

        $r108 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__176: java.util.function.Function bootstrap$()>();

        virtualinvoke $r107.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r108);

        $r110 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r111 = virtualinvoke $r110.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.memory.off.heap.load");

        $r112 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__177: java.util.function.Predicate bootstrap$()>();

        $r113 = virtualinvoke $r111.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r112);

        $r114 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__179: java.util.function.Predicate bootstrap$()>();

        $r115 = virtualinvoke $r113.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r114);

        $r116 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r117 = virtualinvoke $r115.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r116);

        $r118 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__181: java.util.function.Function bootstrap$()>();

        virtualinvoke $r117.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r118);

        $r120 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r121 = virtualinvoke $r120.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.connector.class.name");

        $r122 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isClassName__182: java.util.function.Predicate bootstrap$()>();

        $r123 = virtualinvoke $r121.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r122);

        $r124 = virtualinvoke $r123.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry orFail()>();

        $r125 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isNull__185: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r124.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry unless(java.util.function.Predicate)>($r125);

        $r127 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r128 = virtualinvoke $r127.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.spout.connector.as.spout.enable");

        $r129 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r130 = virtualinvoke $r128.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r129);

        $r131 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__187: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r130.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r131);

        $r133 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r134 = virtualinvoke $r133.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.bolt.enable");

        $r135 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r136 = virtualinvoke $r134.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r135);

        $r137 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__190: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r136.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r137);

        $r139 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r140 = virtualinvoke $r139.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.bolt.parallelism");

        $r141 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__191: java.util.function.Predicate bootstrap$()>();

        $r142 = virtualinvoke $r140.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r141);

        $r143 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r144 = virtualinvoke $r142.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r143);

        $r145 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__193: java.util.function.Function bootstrap$()>();

        virtualinvoke $r144.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r145);

        $r147 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r148 = virtualinvoke $r147.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.bolt.cpu.load");

        $r149 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__196: java.util.function.Predicate bootstrap$()>();

        $r150 = virtualinvoke $r148.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r149);

        $r151 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__198: java.util.function.Predicate bootstrap$()>();

        $r152 = virtualinvoke $r150.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r151);

        $r153 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(50.0);

        $r154 = virtualinvoke $r152.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r153);

        $r155 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__200: java.util.function.Function bootstrap$()>();

        virtualinvoke $r154.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r155);

        $r157 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r158 = virtualinvoke $r157.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.bolt.memory.on.heap.load");

        $r159 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__201: java.util.function.Predicate bootstrap$()>();

        $r160 = virtualinvoke $r158.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r159);

        $r161 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__203: java.util.function.Predicate bootstrap$()>();

        $r162 = virtualinvoke $r160.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r161);

        $r163 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r164 = virtualinvoke $r162.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r163);

        $r165 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__204: java.util.function.Function bootstrap$()>();

        virtualinvoke $r164.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r165);

        $r167 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r168 = virtualinvoke $r167.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.bolt.memory.off.heap.load");

        $r169 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__207: java.util.function.Predicate bootstrap$()>();

        $r170 = virtualinvoke $r168.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r169);

        $r171 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__208: java.util.function.Predicate bootstrap$()>();

        $r172 = virtualinvoke $r170.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r171);

        $r173 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r174 = virtualinvoke $r172.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r173);

        $r175 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__218: java.util.function.Function bootstrap$()>();

        virtualinvoke $r174.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r175);

        $r177 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r178 = virtualinvoke $r177.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.dsl.deserializer.enable");

        $r179 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isBoolean__222: java.util.function.Predicate bootstrap$()>();

        $r180 = virtualinvoke $r178.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r179);

        $r181 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r180.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r181);

        $r183 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r184 = virtualinvoke $r183.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.class.name");

        $r185 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isClassName__224: java.util.function.Predicate bootstrap$()>();

        $r186 = virtualinvoke $r184.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r185);

        $r187 = virtualinvoke $r186.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry orFail()>();

        $r188 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isNull__225: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r187.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry unless(java.util.function.Predicate)>($r188);

        $r190 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r191 = virtualinvoke $r190.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.args");

        $r192 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isList__226: java.util.function.Predicate bootstrap$()>();

        virtualinvoke $r191.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r192);

        $r194 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r195 = virtualinvoke $r194.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.parallelism");

        $r196 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__227: java.util.function.Predicate bootstrap$()>();

        $r197 = virtualinvoke $r195.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r196);

        $r198 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r199 = virtualinvoke $r197.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r198);

        $r200 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__228: java.util.function.Function bootstrap$()>();

        virtualinvoke $r199.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r200);

        $r202 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r203 = virtualinvoke $r202.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.cpu.load");

        $r204 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__229: java.util.function.Predicate bootstrap$()>();

        $r205 = virtualinvoke $r203.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r204);

        $r206 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__230: java.util.function.Predicate bootstrap$()>();

        $r207 = virtualinvoke $r205.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r206);

        $r208 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(50.0);

        $r209 = virtualinvoke $r207.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r208);

        $r210 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__231: java.util.function.Function bootstrap$()>();

        virtualinvoke $r209.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r210);

        $r212 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r213 = virtualinvoke $r212.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.memory.on.heap.load");

        $r214 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__232: java.util.function.Predicate bootstrap$()>();

        $r215 = virtualinvoke $r213.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r214);

        $r216 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__233: java.util.function.Predicate bootstrap$()>();

        $r217 = virtualinvoke $r215.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r216);

        $r218 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r219 = virtualinvoke $r217.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r218);

        $r220 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__234: java.util.function.Function bootstrap$()>();

        virtualinvoke $r219.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r220);

        $r222 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r223 = virtualinvoke $r222.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.bullet.spout.memory.off.heap.load");

        $r224 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__235: java.util.function.Predicate bootstrap$()>();

        $r225 = virtualinvoke $r223.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r224);

        $r226 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__236: java.util.function.Predicate bootstrap$()>();

        $r227 = virtualinvoke $r225.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r226);

        $r228 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r229 = virtualinvoke $r227.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r228);

        $r230 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__237: java.util.function.Function bootstrap$()>();

        virtualinvoke $r229.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r230);

        $r232 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r233 = virtualinvoke $r232.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.query.spout.parallelism");

        $r234 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__238: java.util.function.Predicate bootstrap$()>();

        $r235 = virtualinvoke $r233.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r234);

        $r236 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r237 = virtualinvoke $r235.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r236);

        $r238 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__239: java.util.function.Function bootstrap$()>();

        virtualinvoke $r237.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r238);

        $r240 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r241 = virtualinvoke $r240.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.query.spout.cpu.load");

        $r242 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__240: java.util.function.Predicate bootstrap$()>();

        $r243 = virtualinvoke $r241.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r242);

        $r244 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__241: java.util.function.Predicate bootstrap$()>();

        $r245 = virtualinvoke $r243.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r244);

        $r246 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        $r247 = virtualinvoke $r245.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r246);

        $r248 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__242: java.util.function.Function bootstrap$()>();

        virtualinvoke $r247.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r248);

        $r250 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r251 = virtualinvoke $r250.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.query.spout.memory.on.heap.load");

        $r252 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__243: java.util.function.Predicate bootstrap$()>();

        $r253 = virtualinvoke $r251.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r252);

        $r254 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__244: java.util.function.Predicate bootstrap$()>();

        $r255 = virtualinvoke $r253.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r254);

        $r256 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r257 = virtualinvoke $r255.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r256);

        $r258 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__245: java.util.function.Function bootstrap$()>();

        virtualinvoke $r257.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r258);

        $r260 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r261 = virtualinvoke $r260.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.query.spout.memory.off.heap.load");

        $r262 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__246: java.util.function.Predicate bootstrap$()>();

        $r263 = virtualinvoke $r261.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r262);

        $r264 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__247: java.util.function.Predicate bootstrap$()>();

        $r265 = virtualinvoke $r263.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r264);

        $r266 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r267 = virtualinvoke $r265.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r266);

        $r268 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__248: java.util.function.Function bootstrap$()>();

        virtualinvoke $r267.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r268);

        $r270 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r271 = virtualinvoke $r270.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.tick.spout.cpu.load");

        $r272 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__249: java.util.function.Predicate bootstrap$()>();

        $r273 = virtualinvoke $r271.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r272);

        $r274 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__250: java.util.function.Predicate bootstrap$()>();

        $r275 = virtualinvoke $r273.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r274);

        $r276 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        $r277 = virtualinvoke $r275.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r276);

        $r278 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__251: java.util.function.Function bootstrap$()>();

        virtualinvoke $r277.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r278);

        $r280 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r281 = virtualinvoke $r280.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.tick.spout.memory.on.heap.load");

        $r282 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__252: java.util.function.Predicate bootstrap$()>();

        $r283 = virtualinvoke $r281.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r282);

        $r284 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__253: java.util.function.Predicate bootstrap$()>();

        $r285 = virtualinvoke $r283.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r284);

        $r286 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(128.0);

        $r287 = virtualinvoke $r285.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r286);

        $r288 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__254: java.util.function.Function bootstrap$()>();

        virtualinvoke $r287.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r288);

        $r290 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r291 = virtualinvoke $r290.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.tick.spout.memory.off.heap.load");

        $r292 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__255: java.util.function.Predicate bootstrap$()>();

        $r293 = virtualinvoke $r291.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r292);

        $r294 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__256: java.util.function.Predicate bootstrap$()>();

        $r295 = virtualinvoke $r293.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r294);

        $r296 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r297 = virtualinvoke $r295.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r296);

        $r298 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__257: java.util.function.Function bootstrap$()>();

        virtualinvoke $r297.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r298);

        $r300 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r301 = virtualinvoke $r300.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.filter.bolt.parallelism");

        $r302 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__258: java.util.function.Predicate bootstrap$()>();

        $r303 = virtualinvoke $r301.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r302);

        $r304 = <com.yahoo.bullet.storm.BulletStormConfig: java.lang.Number DEFAULT_FILTER_BOLT_PARALLELISM>;

        $r305 = virtualinvoke $r303.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r304);

        $r306 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__259: java.util.function.Function bootstrap$()>();

        virtualinvoke $r305.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r306);

        $r308 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r309 = virtualinvoke $r308.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.filter.bolt.cpu.load");

        $r310 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__260: java.util.function.Predicate bootstrap$()>();

        $r311 = virtualinvoke $r309.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r310);

        $r312 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__261: java.util.function.Predicate bootstrap$()>();

        $r313 = virtualinvoke $r311.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r312);

        $r314 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(100.0);

        $r315 = virtualinvoke $r313.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r314);

        $r316 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__262: java.util.function.Function bootstrap$()>();

        virtualinvoke $r315.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r316);

        $r318 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r319 = virtualinvoke $r318.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.filter.bolt.memory.on.heap.load");

        $r320 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__263: java.util.function.Predicate bootstrap$()>();

        $r321 = virtualinvoke $r319.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r320);

        $r322 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__264: java.util.function.Predicate bootstrap$()>();

        $r323 = virtualinvoke $r321.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r322);

        $r324 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r325 = virtualinvoke $r323.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r324);

        $r326 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__265: java.util.function.Function bootstrap$()>();

        virtualinvoke $r325.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r326);

        $r328 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r329 = virtualinvoke $r328.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.filter.bolt.memory.off.heap.load");

        $r330 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__266: java.util.function.Predicate bootstrap$()>();

        $r331 = virtualinvoke $r329.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r330);

        $r332 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__267: java.util.function.Predicate bootstrap$()>();

        $r333 = virtualinvoke $r331.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r332);

        $r334 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r335 = virtualinvoke $r333.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r334);

        $r336 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__268: java.util.function.Function bootstrap$()>();

        virtualinvoke $r335.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r336);

        $r338 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r339 = virtualinvoke $r338.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.parallelism");

        $r340 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__269: java.util.function.Predicate bootstrap$()>();

        $r341 = virtualinvoke $r339.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r340);

        $r342 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r343 = virtualinvoke $r341.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r342);

        $r344 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__270: java.util.function.Function bootstrap$()>();

        virtualinvoke $r343.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r344);

        $r346 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r347 = virtualinvoke $r346.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.cpu.load");

        $r348 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__271: java.util.function.Predicate bootstrap$()>();

        $r349 = virtualinvoke $r347.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r348);

        $r350 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__272: java.util.function.Predicate bootstrap$()>();

        $r351 = virtualinvoke $r349.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r350);

        $r352 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(100.0);

        $r353 = virtualinvoke $r351.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r352);

        $r354 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__273: java.util.function.Function bootstrap$()>();

        virtualinvoke $r353.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r354);

        $r356 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r357 = virtualinvoke $r356.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.memory.on.heap.load");

        $r358 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__274: java.util.function.Predicate bootstrap$()>();

        $r359 = virtualinvoke $r357.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r358);

        $r360 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__275: java.util.function.Predicate bootstrap$()>();

        $r361 = virtualinvoke $r359.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r360);

        $r362 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(512.0);

        $r363 = virtualinvoke $r361.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r362);

        $r364 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__276: java.util.function.Function bootstrap$()>();

        virtualinvoke $r363.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r364);

        $r366 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r367 = virtualinvoke $r366.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.memory.off.heap.load");

        $r368 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__277: java.util.function.Predicate bootstrap$()>();

        $r369 = virtualinvoke $r367.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r368);

        $r370 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__278: java.util.function.Predicate bootstrap$()>();

        $r371 = virtualinvoke $r369.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r370);

        $r372 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r373 = virtualinvoke $r371.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r372);

        $r374 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__279: java.util.function.Function bootstrap$()>();

        virtualinvoke $r373.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r374);

        $r376 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r377 = virtualinvoke $r376.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.result.bolt.parallelism");

        $r378 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__280: java.util.function.Predicate bootstrap$()>();

        $r379 = virtualinvoke $r377.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r378);

        $r380 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r381 = virtualinvoke $r379.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r380);

        $r382 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__281: java.util.function.Function bootstrap$()>();

        virtualinvoke $r381.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r382);

        $r384 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r385 = virtualinvoke $r384.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.result.bolt.cpu.load");

        $r386 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__282: java.util.function.Predicate bootstrap$()>();

        $r387 = virtualinvoke $r385.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r386);

        $r388 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__283: java.util.function.Predicate bootstrap$()>();

        $r389 = virtualinvoke $r387.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r388);

        $r390 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        $r391 = virtualinvoke $r389.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r390);

        $r392 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__284: java.util.function.Function bootstrap$()>();

        virtualinvoke $r391.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r392);

        $r394 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r395 = virtualinvoke $r394.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.result.bolt.memory.on.heap.load");

        $r396 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__285: java.util.function.Predicate bootstrap$()>();

        $r397 = virtualinvoke $r395.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r396);

        $r398 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__286: java.util.function.Predicate bootstrap$()>();

        $r399 = virtualinvoke $r397.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r398);

        $r400 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r401 = virtualinvoke $r399.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r400);

        $r402 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__287: java.util.function.Function bootstrap$()>();

        virtualinvoke $r401.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r402);

        $r404 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r405 = virtualinvoke $r404.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.result.bolt.memory.off.heap.load");

        $r406 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__288: java.util.function.Predicate bootstrap$()>();

        $r407 = virtualinvoke $r405.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r406);

        $r408 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__289: java.util.function.Predicate bootstrap$()>();

        $r409 = virtualinvoke $r407.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r408);

        $r410 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r411 = virtualinvoke $r409.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r410);

        $r412 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__290: java.util.function.Function bootstrap$()>();

        virtualinvoke $r411.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r412);

        $r414 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r415 = virtualinvoke $r414.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.loop.bolt.parallelism");

        $r416 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__291: java.util.function.Predicate bootstrap$()>();

        $r417 = virtualinvoke $r415.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r416);

        $r418 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r419 = virtualinvoke $r417.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r418);

        $r420 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__292: java.util.function.Function bootstrap$()>();

        virtualinvoke $r419.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r420);

        $r422 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r423 = virtualinvoke $r422.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.loop.bolt.cpu.load");

        $r424 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__293: java.util.function.Predicate bootstrap$()>();

        $r425 = virtualinvoke $r423.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r424);

        $r426 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__294: java.util.function.Predicate bootstrap$()>();

        $r427 = virtualinvoke $r425.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r426);

        $r428 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        $r429 = virtualinvoke $r427.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r428);

        $r430 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__295: java.util.function.Function bootstrap$()>();

        virtualinvoke $r429.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r430);

        $r432 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r433 = virtualinvoke $r432.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.loop.bolt.memory.on.heap.load");

        $r434 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__296: java.util.function.Predicate bootstrap$()>();

        $r435 = virtualinvoke $r433.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r434);

        $r436 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__297: java.util.function.Predicate bootstrap$()>();

        $r437 = virtualinvoke $r435.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r436);

        $r438 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r439 = virtualinvoke $r437.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r438);

        $r440 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__298: java.util.function.Function bootstrap$()>();

        virtualinvoke $r439.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r440);

        $r442 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r443 = virtualinvoke $r442.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.loop.bolt.memory.off.heap.load");

        $r444 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__299: java.util.function.Predicate bootstrap$()>();

        $r445 = virtualinvoke $r443.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r444);

        $r446 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__300: java.util.function.Predicate bootstrap$()>();

        $r447 = virtualinvoke $r445.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r446);

        $r448 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r449 = virtualinvoke $r447.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r448);

        $r450 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__301: java.util.function.Function bootstrap$()>();

        virtualinvoke $r449.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r450);

        $r452 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r453 = virtualinvoke $r452.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.bolt.parallelism");

        $r454 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__302: java.util.function.Predicate bootstrap$()>();

        $r455 = virtualinvoke $r453.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r454);

        $r456 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r457 = virtualinvoke $r455.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r456);

        $r458 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__303: java.util.function.Function bootstrap$()>();

        virtualinvoke $r457.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r458);

        $r460 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r461 = virtualinvoke $r460.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.bolt.cpu.load");

        $r462 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__304: java.util.function.Predicate bootstrap$()>();

        $r463 = virtualinvoke $r461.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r462);

        $r464 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__305: java.util.function.Predicate bootstrap$()>();

        $r465 = virtualinvoke $r463.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r464);

        $r466 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(100.0);

        $r467 = virtualinvoke $r465.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r466);

        $r468 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__306: java.util.function.Function bootstrap$()>();

        virtualinvoke $r467.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r468);

        $r470 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r471 = virtualinvoke $r470.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.bolt.memory.on.heap.load");

        $r472 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__307: java.util.function.Predicate bootstrap$()>();

        $r473 = virtualinvoke $r471.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r472);

        $r474 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__308: java.util.function.Predicate bootstrap$()>();

        $r475 = virtualinvoke $r473.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r474);

        $r476 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(256.0);

        $r477 = virtualinvoke $r475.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r476);

        $r478 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__309: java.util.function.Function bootstrap$()>();

        virtualinvoke $r477.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r478);

        $r480 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r481 = virtualinvoke $r480.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.replay.bolt.memory.off.heap.load");

        $r482 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositive__310: java.util.function.Predicate bootstrap$()>();

        $r483 = virtualinvoke $r481.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r482);

        $r484 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isFloat__311: java.util.function.Predicate bootstrap$()>();

        $r485 = virtualinvoke $r483.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r484);

        $r486 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(160.0);

        $r487 = virtualinvoke $r485.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r486);

        $r488 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asDouble__312: java.util.function.Function bootstrap$()>();

        virtualinvoke $r487.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r488);

        $r490 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r491 = virtualinvoke $r490.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.tick.spout.interval.ms");

        $r492 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__313: java.util.function.Predicate bootstrap$()>();

        $r493 = virtualinvoke $r491.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r492);

        $r494 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r495 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);

        $r496 = staticinvoke <com.yahoo.bullet.common.Validator: java.util.function.Predicate isInRange(java.lang.Number,java.lang.Number)>($r494, $r495);

        $r497 = virtualinvoke $r493.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r496);

        $r498 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);

        $r499 = virtualinvoke $r497.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r498);

        $r500 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__314: java.util.function.Function bootstrap$()>();

        virtualinvoke $r499.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r500);

        $r502 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r503 = virtualinvoke $r502.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.filter.bolt.stats.report.ticks");

        $r504 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__315: java.util.function.Predicate bootstrap$()>();

        $r505 = virtualinvoke $r503.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r504);

        $r506 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000);

        $r507 = virtualinvoke $r505.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r506);

        $r508 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__316: java.util.function.Function bootstrap$()>();

        virtualinvoke $r507.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r508);

        $r510 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r511 = virtualinvoke $r510.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.query.post.finish.buffer.ticks");

        $r512 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__317: java.util.function.Predicate bootstrap$()>();

        $r513 = virtualinvoke $r511.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r512);

        $r514 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r515 = virtualinvoke $r513.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r514);

        $r516 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__318: java.util.function.Function bootstrap$()>();

        virtualinvoke $r515.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r516);

        $r518 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r519 = virtualinvoke $r518.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.join.bolt.query.pre.start.delay.ticks");

        $r520 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isPositiveInt__319: java.util.function.Predicate bootstrap$()>();

        $r521 = virtualinvoke $r519.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r520);

        $r522 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r523 = virtualinvoke $r521.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r522);

        $r524 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$asInt__320: java.util.function.Function bootstrap$()>();

        virtualinvoke $r523.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry castTo(java.util.function.Function)>($r524);

        $r526 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r527 = virtualinvoke $r526.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Entry define(java.lang.String)>("bullet.topology.loop.bolt.pubsub.overrides");

        $r528 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isMap__321: java.util.function.Predicate bootstrap$()>();

        $r529 = virtualinvoke $r527.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r528);

        $r530 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isMapWithStringKeys__322: java.util.function.Predicate bootstrap$()>();

        $r531 = virtualinvoke $r529.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry checkIf(java.util.function.Predicate)>($r530);

        $r532 = <com.yahoo.bullet.storm.BulletStormConfig: java.util.Map DEFAULT_LOOP_BOLT_PUBSUB_OVERRIDES>;

        virtualinvoke $r531.<com.yahoo.bullet.common.Validator$Entry: com.yahoo.bullet.common.Validator$Entry defaultTo(java.lang.Object)>($r532);

        $r534 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r535 = virtualinvoke $r534.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$Relationship relate(java.lang.String,java.lang.String,java.lang.String)>("Built-in metrics enabled but no intervals provided", "bullet.topology.metrics.built.in.enable", "bullet.topology.metrics.built.in.emit.interval.mapping");

        $r536 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$areNeededIntervalsProvided__323: java.util.function.BiPredicate bootstrap$()>();

        virtualinvoke $r535.<com.yahoo.bullet.common.Validator$Relationship: com.yahoo.bullet.common.Validator$Relationship checkIf(java.util.function.BiPredicate)>($r536);

        $r539 = <com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.common.Validator VALIDATOR>;

        $r538 = newarray (java.lang.String)[3];

        $r538[0] = "bullet.topology.tick.spout.interval.ms";

        $r538[1] = "bullet.topology.join.bolt.query.pre.start.delay.ticks";

        $r538[2] = "bullet.query.window.min.emit.every.ms";

        $r540 = virtualinvoke $r539.<com.yahoo.bullet.common.Validator: com.yahoo.bullet.common.Validator$State evaluate(java.lang.String,java.lang.String[])>("Minimum window emit every should be >= pre-start buffer delay + 2 ticks", $r538);

        $r541 = staticinvoke <com.yahoo.bullet.storm.BulletStormConfig$isStartDelayEnough__324: java.util.function.Predicate bootstrap$()>();

        $r542 = virtualinvoke $r540.<com.yahoo.bullet.common.Validator$State: com.yahoo.bullet.common.Validator$State checkIf(java.util.function.Predicate)>($r541);

        virtualinvoke $r542.<com.yahoo.bullet.common.Validator$State: void orFail()>();

        return;
    }
}
