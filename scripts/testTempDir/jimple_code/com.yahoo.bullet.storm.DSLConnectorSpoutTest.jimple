public class com.yahoo.bullet.storm.DSLConnectorSpoutTest extends java.lang.Object
{
    private com.yahoo.bullet.storm.DSLConnectorSpout spout;
    private com.yahoo.bullet.storm.testing.CallCountingSpoutConnector connector;

    public void <init>()
    {
        com.yahoo.bullet.storm.DSLConnectorSpoutTest r0;

        r0 := @this: com.yahoo.bullet.storm.DSLConnectorSpoutTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setup()
    {
        com.yahoo.bullet.storm.BulletStormConfig $r0;
        java.lang.Class $r2, $r4;
        java.lang.String $r3, $r5;
        com.yahoo.bullet.storm.DSLConnectorSpoutTest r6;
        com.yahoo.bullet.storm.DSLConnectorSpout $r7, $r8;
        com.yahoo.bullet.dsl.connector.BulletConnector $r9;
        com.yahoo.bullet.storm.testing.CallCountingSpoutConnector $r10;

        r6 := @this: com.yahoo.bullet.storm.DSLConnectorSpoutTest;

        $r0 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void <init>(java.lang.String)>("test_dsl_config.yaml");

        $r2 = class "Lcom/yahoo/bullet/storm/testing/CallCountingSpoutConnector;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.dsl.connector.class.name", $r3);

        $r4 = class "Lcom/yahoo/bullet/storm/testing/CallCountingCredentialsSpout;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.dsl.spout.connector.class.name", $r5);

        $r7 = new com.yahoo.bullet.storm.DSLConnectorSpout;

        specialinvoke $r7.<com.yahoo.bullet.storm.DSLConnectorSpout: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r0);

        r6.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout> = $r7;

        $r8 = r6.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        $r9 = $r8.<com.yahoo.bullet.storm.DSLConnectorSpout: com.yahoo.bullet.dsl.connector.BulletConnector connector>;

        $r10 = (com.yahoo.bullet.storm.testing.CallCountingSpoutConnector) $r9;

        r6.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.testing.CallCountingSpoutConnector connector> = $r10;

        return;
    }

    public void testCreation()
    {
        com.yahoo.bullet.storm.DSLConnectorSpoutTest r0;
        com.yahoo.bullet.storm.testing.CallCountingSpoutConnector $r1;
        com.yahoo.bullet.storm.testing.CallCountingSpout r2;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17;

        r0 := @this: com.yahoo.bullet.storm.DSLConnectorSpoutTest;

        $r1 = r0.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.testing.CallCountingSpoutConnector connector>;

        r2 = virtualinvoke $r1.<com.yahoo.bullet.storm.testing.CallCountingSpoutConnector: com.yahoo.bullet.storm.testing.CallCountingSpout getProxy()>();

        $i0 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getConfigurationCalls()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $i2 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getDeclareCalls()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $i4 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getCredentialCalls()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 0L);

        $i6 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getOpenCalls()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, 0L);

        $i8 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getActivateCalls()>();

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l9, 0L);

        $i10 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getNextTupleCalls()>();

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l11, 0L);

        $i12 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getAckCalls()>();

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l13, 0L);

        $i14 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getFailCalls()>();

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l15, 0L);

        $i16 = virtualinvoke r2.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getDeactivateCalls()>();

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l17, 0L);

        return;
    }

    public void testProxyingOnlyCertainSpoutMethods()
    {
        com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer $r0;
        com.yahoo.bullet.storm.testing.CustomEmitter $r2;
        com.yahoo.bullet.storm.DSLConnectorSpoutTest r4;
        org.apache.storm.spout.SpoutOutputCollector $r5;
        com.yahoo.bullet.storm.DSLConnectorSpout $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        com.yahoo.bullet.storm.testing.CallCountingSpoutConnector $r16;
        com.yahoo.bullet.storm.testing.CallCountingSpout r17;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19;
        java.util.List $r18;

        r4 := @this: com.yahoo.bullet.storm.DSLConnectorSpoutTest;

        $r0 = new com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer;

        specialinvoke $r0.<com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer: void <init>()>();

        $r2 = new com.yahoo.bullet.storm.testing.CustomEmitter;

        specialinvoke $r2.<com.yahoo.bullet.storm.testing.CustomEmitter: void <init>()>();

        $r6 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        $r5 = new org.apache.storm.spout.SpoutOutputCollector;

        specialinvoke $r5.<org.apache.storm.spout.SpoutOutputCollector: void <init>(org.apache.storm.spout.ISpoutOutputCollector)>($r2);

        virtualinvoke $r6.<com.yahoo.bullet.storm.DSLConnectorSpout: void open(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.spout.SpoutOutputCollector)>(null, null, $r5);

        $r7 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.DSLConnectorSpout: java.util.Map getComponentConfiguration()>();

        $r9 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r9.<com.yahoo.bullet.storm.DSLConnectorSpout: void declareOutputFields(org.apache.storm.topology.OutputFieldsDeclarer)>($r0);

        $r10 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.DSLConnectorSpout: void setCredentials(java.util.Map)>(null);

        $r11 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r11.<com.yahoo.bullet.storm.DSLConnectorSpout: void activate()>();

        $r12 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.DSLConnectorSpout: void nextTuple()>();

        $r13 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r13.<com.yahoo.bullet.storm.DSLConnectorSpout: void ack(java.lang.Object)>(null);

        $r14 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r14.<com.yahoo.bullet.storm.DSLConnectorSpout: void fail(java.lang.Object)>(null);

        $r15 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.DSLConnectorSpout spout>;

        virtualinvoke $r15.<com.yahoo.bullet.storm.DSLConnectorSpout: void deactivate()>();

        $r16 = r4.<com.yahoo.bullet.storm.DSLConnectorSpoutTest: com.yahoo.bullet.storm.testing.CallCountingSpoutConnector connector>;

        r17 = virtualinvoke $r16.<com.yahoo.bullet.storm.testing.CallCountingSpoutConnector: com.yahoo.bullet.storm.testing.CallCountingSpout getProxy()>();

        $i0 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getConfigurationCalls()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $i2 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getDeclareCalls()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $i4 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getCredentialCalls()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 1L);

        $i6 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getOpenCalls()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, 1L);

        $i8 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getActivateCalls()>();

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l9, 1L);

        $i10 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getNextTupleCalls()>();

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l11, 0L);

        $i12 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getAckCalls()>();

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l13, 1L);

        $i14 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getFailCalls()>();

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l15, 1L);

        $i16 = virtualinvoke r17.<com.yahoo.bullet.storm.testing.CallCountingSpout: int getDeactivateCalls()>();

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l17, 1L);

        $r18 = virtualinvoke $r2.<com.yahoo.bullet.storm.testing.CustomEmitter: java.util.List getEmitted()>();

        $i18 = interfaceinvoke $r18.<java.util.List: int size()>();

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l19, 0L);

        return;
    }
}
