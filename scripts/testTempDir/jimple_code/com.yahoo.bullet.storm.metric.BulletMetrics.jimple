public class com.yahoo.bullet.storm.metric.BulletMetrics extends java.lang.Object
{
    private static final org.slf4j.Logger log;
    private boolean enabled;
    private java.util.Map metricsIntervalMapping;

    public void <init>(com.yahoo.bullet.storm.BulletStormConfig)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        com.yahoo.bullet.storm.BulletStormConfig r1;
        java.lang.Object $r2, $r4;
        java.lang.Boolean $r3;
        boolean $z0;
        java.util.Map $r5;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object getAs(java.lang.String,java.lang.Class)>("bullet.topology.metrics.built.in.enable", class "Ljava/lang/Boolean;");

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled> = $z0;

        $r4 = virtualinvoke r1.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object getAs(java.lang.String,java.lang.Class)>("bullet.topology.metrics.built.in.emit.interval.mapping", class "Ljava/util/Map;");

        $r5 = (java.util.Map) $r4;

        r0.<com.yahoo.bullet.storm.metric.BulletMetrics: java.util.Map metricsIntervalMapping> = $r5;

        return;
    }

    public org.apache.storm.metric.api.ReducedMetric registerAveragingMetric(java.lang.String, org.apache.storm.task.TopologyContext)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        java.lang.String r3;
        org.apache.storm.task.TopologyContext r4;
        org.apache.storm.metric.api.IMetric $r5, $r10;
        org.apache.storm.metric.api.ReducedMetric $r6, $r8;
        org.apache.storm.metric.api.MeanReducer $r7;
        org.apache.storm.metric.api.IReducer $r9;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.storm.task.TopologyContext;

        $r8 = new org.apache.storm.metric.api.ReducedMetric;

        $r7 = new org.apache.storm.metric.api.MeanReducer;

        specialinvoke $r7.<org.apache.storm.metric.api.MeanReducer: void <init>()>();

        $r9 = (org.apache.storm.metric.api.IReducer) $r7;

        specialinvoke $r8.<org.apache.storm.metric.api.ReducedMetric: void <init>(org.apache.storm.metric.api.IReducer)>($r9);

        $r10 = (org.apache.storm.metric.api.IMetric) $r8;

        $r5 = specialinvoke r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.IMetric registerMetric(org.apache.storm.metric.api.IMetric,java.lang.String,org.apache.storm.task.TopologyContext)>($r10, r3, r4);

        $r6 = (org.apache.storm.metric.api.ReducedMetric) $r5;

        return $r6;
    }

    public com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String, org.apache.storm.task.TopologyContext)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r1, $r5;
        java.lang.String r2;
        org.apache.storm.task.TopologyContext r3;
        org.apache.storm.metric.api.IMetric $r4;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.storm.task.TopologyContext;

        $r1 = new com.yahoo.bullet.storm.metric.AbsoluteCountMetric;

        specialinvoke $r1.<com.yahoo.bullet.storm.metric.AbsoluteCountMetric: void <init>()>();

        $r4 = specialinvoke r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.IMetric registerMetric(org.apache.storm.metric.api.IMetric,java.lang.String,org.apache.storm.task.TopologyContext)>($r1, r2, r3);

        $r5 = (com.yahoo.bullet.storm.metric.AbsoluteCountMetric) $r4;

        return $r5;
    }

    public org.apache.storm.metric.api.CountMetric registerCountMetric(java.lang.String, org.apache.storm.task.TopologyContext)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        java.lang.String r2;
        org.apache.storm.task.TopologyContext r3;
        org.apache.storm.metric.api.IMetric $r4, $r7;
        org.apache.storm.metric.api.CountMetric $r5, $r6;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.storm.task.TopologyContext;

        $r6 = new org.apache.storm.metric.api.CountMetric;

        specialinvoke $r6.<org.apache.storm.metric.api.CountMetric: void <init>()>();

        $r7 = (org.apache.storm.metric.api.IMetric) $r6;

        $r4 = specialinvoke r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.IMetric registerMetric(org.apache.storm.metric.api.IMetric,java.lang.String,org.apache.storm.task.TopologyContext)>($r7, r2, r3);

        $r5 = (org.apache.storm.metric.api.CountMetric) $r4;

        return $r5;
    }

    public com.yahoo.bullet.storm.metric.MapCountMetric registerMapCountMetric(java.lang.String, org.apache.storm.task.TopologyContext)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        com.yahoo.bullet.storm.metric.MapCountMetric $r1, $r5;
        java.lang.String r2;
        org.apache.storm.task.TopologyContext r3;
        org.apache.storm.metric.api.IMetric $r4;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.storm.task.TopologyContext;

        $r1 = new com.yahoo.bullet.storm.metric.MapCountMetric;

        specialinvoke $r1.<com.yahoo.bullet.storm.metric.MapCountMetric: void <init>()>();

        $r4 = specialinvoke r0.<com.yahoo.bullet.storm.metric.BulletMetrics: org.apache.storm.metric.api.IMetric registerMetric(org.apache.storm.metric.api.IMetric,java.lang.String,org.apache.storm.task.TopologyContext)>($r1, r2, r3);

        $r5 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r4;

        return $r5;
    }

    public void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric, long)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric r1;
        long l0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.metric.AbsoluteCountMetric;

        l0 := @parameter1: long;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.yahoo.bullet.storm.metric.AbsoluteCountMetric: void add(long)>(l0);

     label1:
        return;
    }

    public void setCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric, long)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric r1;
        long l0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.metric.AbsoluteCountMetric;

        l0 := @parameter1: long;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.yahoo.bullet.storm.metric.AbsoluteCountMetric: void set(long)>(l0);

     label1:
        return;
    }

    public void updateCount(org.apache.storm.metric.api.CountMetric, long)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        org.apache.storm.metric.api.CountMetric r1;
        long l0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: org.apache.storm.metric.api.CountMetric;

        l0 := @parameter1: long;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.storm.metric.api.CountMetric: void incrBy(long)>(l0);

     label1:
        return;
    }

    public void updateCount(com.yahoo.bullet.storm.metric.MapCountMetric, java.lang.String, long)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        com.yahoo.bullet.storm.metric.MapCountMetric r1;
        java.lang.String r2;
        long l0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.metric.MapCountMetric;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.yahoo.bullet.storm.metric.MapCountMetric: void add(java.lang.String,long)>(r2, l0);

     label1:
        return;
    }

    public void setCount(com.yahoo.bullet.storm.metric.MapCountMetric, java.lang.String, long)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        com.yahoo.bullet.storm.metric.MapCountMetric r1;
        java.lang.String r2;
        long l0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.metric.MapCountMetric;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.yahoo.bullet.storm.metric.MapCountMetric: void set(java.lang.String,long)>(r2, l0);

     label1:
        return;
    }

    public void clearCount(com.yahoo.bullet.storm.metric.MapCountMetric)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;
        com.yahoo.bullet.storm.metric.MapCountMetric r1;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r1 := @parameter0: com.yahoo.bullet.storm.metric.MapCountMetric;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.yahoo.bullet.storm.metric.MapCountMetric: void clear()>();

     label1:
        return;
    }

    private org.apache.storm.metric.api.IMetric registerMetric(org.apache.storm.metric.api.IMetric, java.lang.String, org.apache.storm.task.TopologyContext)
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        java.lang.String r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4, $r5;
        java.lang.Number r6;
        org.slf4j.Logger $r7;
        org.apache.storm.task.TopologyContext r8;
        org.apache.storm.metric.api.IMetric r9, $r10;
        int $i0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        r9 := @parameter0: org.apache.storm.metric.api.IMetric;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: org.apache.storm.task.TopologyContext;

        $r3 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: java.util.Map metricsIntervalMapping>;

        $r2 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: java.util.Map metricsIntervalMapping>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("default");

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r1, $r4);

        r6 = (java.lang.Number) $r5;

        $r7 = <com.yahoo.bullet.storm.metric.BulletMetrics: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Registered metric: {} with interval {}", r1, r6);

        $i0 = virtualinvoke r6.<java.lang.Number: int intValue()>();

        $r10 = virtualinvoke r8.<org.apache.storm.task.TopologyContext: org.apache.storm.metric.api.IMetric registerMetric(java.lang.String,org.apache.storm.metric.api.IMetric,int)>(r1, r9, $i0);

        return $r10;
    }

    public boolean isEnabled()
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        boolean $z0;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        $z0 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean enabled>;

        return $z0;
    }

    public java.util.Map getMetricsIntervalMapping()
    {
        com.yahoo.bullet.storm.metric.BulletMetrics r0;
        java.util.Map $r1;

        r0 := @this: com.yahoo.bullet.storm.metric.BulletMetrics;

        $r1 = r0.<com.yahoo.bullet.storm.metric.BulletMetrics: java.util.Map metricsIntervalMapping>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/metric/BulletMetrics;");

        <com.yahoo.bullet.storm.metric.BulletMetrics: org.slf4j.Logger log> = $r0;

        return;
    }
}
