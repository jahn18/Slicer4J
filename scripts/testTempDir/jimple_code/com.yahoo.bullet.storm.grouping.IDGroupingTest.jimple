public class com.yahoo.bullet.storm.grouping.IDGroupingTest extends java.lang.Object
{
    private static final int HASH_COUNT;

    public void <init>()
    {
        com.yahoo.bullet.storm.grouping.IDGroupingTest r0;

        r0 := @this: com.yahoo.bullet.storm.grouping.IDGroupingTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testChooseTasks()
    {
        com.yahoo.bullet.storm.grouping.IDGrouping $r0;
        java.lang.Integer[] $r2;
        java.lang.Integer $r3, $r4, $r5, $r6, $r9, $r14, $r16, $r20, $r22, $r26;
        java.util.List r7, $r11, $r12, $r17, $r18, $r23, $r24;
        int $i0, i1, $i2, $i5, $i8;
        java.lang.Object $r8, $r13, $r19, $r25;
        java.lang.Object[] $r10, $r15, $r21;
        long $l3, $l4, $l6, $l7, $l9, $l10;
        com.yahoo.bullet.storm.grouping.IDGroupingTest r27;

        r27 := @this: com.yahoo.bullet.storm.grouping.IDGroupingTest;

        $r0 = new com.yahoo.bullet.storm.grouping.IDGrouping;

        specialinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: void <init>()>();

        $r2 = newarray (java.lang.Integer)[4];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(22);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23);

        $r2[3] = $r6;

        r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        virtualinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: void prepare(org.apache.storm.task.WorkerTopologyContext,org.apache.storm.generated.GlobalStreamId,java.util.List)>(null, null, r7);

        $i0 = staticinvoke <com.yahoo.bullet.storm.StormUtils: int getHashIndex(java.lang.Object,int)>("42", 4);

        $r8 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (java.lang.Integer) $r8;

        i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "42";

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        $r12 = virtualinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: java.util.List chooseTasks(int,java.util.List)>(0, $r11);

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (java.lang.Integer) $r13;

        $i2 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $l4 = (long) $i2;

        $l3 = (long) i1;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, $l3);

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "42";

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(123);

        $r15[1] = $r16;

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        $r18 = virtualinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: java.util.List chooseTasks(int,java.util.List)>(0, $r17);

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (java.lang.Integer) $r19;

        $i5 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $l7 = (long) $i5;

        $l6 = (long) i1;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, $l6);

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = "42";

        $r21[1] = null;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(456);

        $r21[2] = $r22;

        $r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21);

        $r24 = virtualinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: java.util.List chooseTasks(int,java.util.List)>(0, $r23);

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        $r26 = (java.lang.Integer) $r25;

        $i8 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        $l10 = (long) $i8;

        $l9 = (long) i1;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l9);

        return;
    }

    public void testChooseTasksThrowsOnEmptyTuple()
    {
        com.yahoo.bullet.storm.grouping.IDGrouping $r0;
        java.util.List $r1;
        com.yahoo.bullet.storm.grouping.IDGroupingTest r3;

        r3 := @this: com.yahoo.bullet.storm.grouping.IDGroupingTest;

        $r0 = new com.yahoo.bullet.storm.grouping.IDGrouping;

        specialinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        virtualinvoke $r0.<com.yahoo.bullet.storm.grouping.IDGrouping: java.util.List chooseTasks(int,java.util.List)>(0, $r1);

        return;
    }

    public static void <clinit>()
    {
        <com.yahoo.bullet.storm.grouping.IDGroupingTest: int HASH_COUNT> = 4;

        return;
    }
}
