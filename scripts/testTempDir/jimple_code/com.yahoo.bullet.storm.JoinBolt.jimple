public class com.yahoo.bullet.storm.JoinBolt extends com.yahoo.bullet.storm.QueryBolt
{
    private static final org.slf4j.Logger log;
    private static final long serialVersionUID;
    private transient java.util.Map bufferedMetadata;
    private transient java.util.Map queries;
    private transient org.apache.storm.utils.RotatingMap postFinishBuffer;
    private transient org.apache.storm.utils.RotatingMap preStartBuffer;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric createdQueriesCount;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric improperQueriesCount;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric rateExceededQueries;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric duplicatedQueriesCount;

    public void <init>(com.yahoo.bullet.storm.BulletStormConfig)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        com.yahoo.bullet.storm.BulletStormConfig r1;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke r0.<com.yahoo.bullet.storm.QueryBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>(r1);

        return;
    }

    public void prepare(java.util.Map, org.apache.storm.task.TopologyContext, org.apache.storm.task.OutputCollector)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.util.Map r1;
        org.apache.storm.task.TopologyContext r2;
        org.apache.storm.task.OutputCollector r3;
        java.util.HashMap $r4, $r5;
        com.yahoo.bullet.storm.BulletStormConfig $r6, $r10;
        java.lang.Object $r7, $r11;
        java.lang.Integer $r8, $r12;
        int i0, i1;
        org.apache.storm.utils.RotatingMap $r9, $r13;
        com.yahoo.bullet.storm.metric.BulletMetrics $r14, $r15, $r17, $r19, $r21, $r23;
        boolean $z0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r16, $r18, $r20, $r22, $r24;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.storm.task.TopologyContext;

        r3 := @parameter2: org.apache.storm.task.OutputCollector;

        specialinvoke r0.<com.yahoo.bullet.storm.QueryBolt: void prepare(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.task.OutputCollector)>(r1, r2, r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries> = $r5;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r7 = virtualinvoke $r6.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object getAs(java.lang.String,java.lang.Class)>("bullet.topology.join.bolt.query.pre.start.delay.ticks", class "Ljava/lang/Integer;");

        $r8 = (java.lang.Integer) $r7;

        i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = new org.apache.storm.utils.RotatingMap;

        specialinvoke $r9.<org.apache.storm.utils.RotatingMap: void <init>(int)>(i0);

        r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer> = $r9;

        $r10 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r11 = virtualinvoke $r10.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object getAs(java.lang.String,java.lang.Class)>("bullet.topology.join.bolt.query.post.finish.buffer.ticks", class "Ljava/lang/Integer;");

        $r12 = (java.lang.Integer) $r11;

        i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = new org.apache.storm.utils.RotatingMap;

        specialinvoke $r13.<org.apache.storm.utils.RotatingMap: void <init>(int)>(i1);

        r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer> = $r13;

        $r14 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $z0 = virtualinvoke $r14.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r16 = virtualinvoke $r15.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_active_queries", r2);

        r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount> = $r16;

        $r17 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r18 = virtualinvoke $r17.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_created_queries", r2);

        r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric createdQueriesCount> = $r18;

        $r19 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r20 = virtualinvoke $r19.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_improper_queries", r2);

        r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric improperQueriesCount> = $r20;

        $r21 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r22 = virtualinvoke $r21.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_rate_exceeded_queries", r2);

        r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric rateExceededQueries> = $r22;

        $r23 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r24 = virtualinvoke $r23.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_duplicated_queries", r2);

        r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric duplicatedQueriesCount> = $r24;

     label1:
        return;
    }

    public void execute(org.apache.storm.tuple.Tuple)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        org.apache.storm.tuple.Tuple r1;
        com.yahoo.bullet.storm.TupleClassifier $r2;
        java.util.Optional $r3;
        com.yahoo.bullet.storm.TupleClassifier$Type $r4, r6;
        java.lang.Object $r5;
        int[] $r7;
        int $i0, $i1;
        org.slf4j.Logger $r9;
        org.apache.storm.task.OutputCollector $r10;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: org.apache.storm.tuple.Tuple;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.TupleClassifier classifier>;

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.storm.TupleClassifier: java.util.Optional classifyInternalTypes(org.apache.storm.tuple.Tuple)>(r1);

        $r4 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type UNKNOWN_TUPLE>;

        $r5 = virtualinvoke $r3.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r4);

        r6 = (com.yahoo.bullet.storm.TupleClassifier$Type) $r5;

        $r7 = <com.yahoo.bullet.storm.JoinBolt$1: int[] $SwitchMap$com$yahoo$bullet$storm$TupleClassifier$Type>;

        $i0 = virtualinvoke r6.<com.yahoo.bullet.storm.TupleClassifier$Type: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void onTick()>();

        goto label8;

     label2:
        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.pubsub.Metadata onMeta(org.apache.storm.tuple.Tuple)>(r1);

        goto label8;

     label3:
        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void onQuery(org.apache.storm.tuple.Tuple)>(r1);

        goto label8;

     label4:
        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void onBatch(org.apache.storm.tuple.Tuple)>(r1);

        goto label8;

     label5:
        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void onError(org.apache.storm.tuple.Tuple)>(r1);

        goto label8;

     label6:
        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void onData(org.apache.storm.tuple.Tuple)>(r1);

        goto label8;

     label7:
        $r9 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Unknown tuple encountered in join: {}", r6);

        return;

     label8:
        $r10 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.task.OutputCollector collector>;

        virtualinvoke $r10.<org.apache.storm.task.OutputCollector: void ack(org.apache.storm.tuple.Tuple)>(r1);

        return;
    }

    public void declareOutputFields(org.apache.storm.topology.OutputFieldsDeclarer)
    {
        org.apache.storm.topology.OutputFieldsDeclarer r0;
        org.apache.storm.tuple.Fields $r1, $r3;
        java.lang.String[] $r2, $r4;
        com.yahoo.bullet.storm.JoinBolt r5;

        r5 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: org.apache.storm.topology.OutputFieldsDeclarer;

        $r1 = new org.apache.storm.tuple.Fields;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "id";

        $r2[1] = "result";

        $r2[2] = "metadata";

        specialinvoke $r1.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r2);

        interfaceinvoke r0.<org.apache.storm.topology.OutputFieldsDeclarer: void declareStream(java.lang.String,org.apache.storm.tuple.Fields)>("default", $r1);

        $r3 = new org.apache.storm.tuple.Fields;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "id";

        $r4[1] = "metadata";

        specialinvoke $r3.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r4);

        interfaceinvoke r0.<org.apache.storm.topology.OutputFieldsDeclarer: void declareStream(java.lang.String,org.apache.storm.tuple.Fields)>("feedback", $r3);

        return;
    }

    private void onTick()
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        org.apache.storm.utils.RotatingMap $r1, $r7;
        java.util.Map r2, r8, $r12;
        java.util.Set $r3, $r9;
        java.util.function.Consumer $r4, $r10;
        com.yahoo.bullet.storm.metric.BulletMetrics $r5;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r6;
        int $i0, $i1;
        long $l2;
        com.yahoo.bullet.querying.QueryCategorizer $r11, $r13;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        r2 = virtualinvoke $r1.<org.apache.storm.utils.RotatingMap: java.util.Map rotate()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBolt$emitFinished__2: java.util.function.Consumer bootstrap$(com.yahoo.bullet.storm.JoinBolt)>(r0);

        interfaceinvoke $r3.<java.util.Set: void forEach(java.util.function.Consumer)>($r4);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount>;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i1 = neg $i0;

        $l2 = (long) $i1;

        virtualinvoke $r5.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r6, $l2);

        $r7 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        r8 = virtualinvoke $r7.<org.apache.storm.utils.RotatingMap: java.util.Map rotate()>();

        $r9 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBolt$startDelayed__4: java.util.function.Consumer bootstrap$(com.yahoo.bullet.storm.JoinBolt)>(r0);

        interfaceinvoke $r9.<java.util.Set: void forEach(java.util.function.Consumer)>($r10);

        $r11 = new com.yahoo.bullet.querying.QueryCategorizer;

        specialinvoke $r11.<com.yahoo.bullet.querying.QueryCategorizer: void <init>()>();

        $r12 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        $r13 = virtualinvoke $r11.<com.yahoo.bullet.querying.QueryCategorizer: com.yahoo.bullet.querying.QueryCategorizer categorize(java.util.Map)>($r12);

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void handleCategorizedQueries(com.yahoo.bullet.querying.QueryCategorizer)>($r13);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitReplayRequestIfNecessary()>();

        return;
    }

    private void onData(org.apache.storm.tuple.Tuple)
    {
        org.apache.storm.tuple.Tuple r0;
        java.lang.String r1;
        com.yahoo.bullet.storm.JoinBolt r2;
        com.yahoo.bullet.querying.Querier r3;
        java.lang.Object $r4;
        byte[] $r5, r6;
        boolean $z0, $z1, $z2;
        com.yahoo.bullet.querying.RateLimitError $r7;
        org.slf4j.Logger $r8;

        r2 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: org.apache.storm.tuple.Tuple;

        r1 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.lang.String getString(int)>(0);

        r3 = specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.querying.Querier getQuery(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r8 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received data for query {} before query. Ignoring...", r1);

        return;

     label1:
        $r4 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.lang.Object getValue(int)>(1);

        $r5 = (byte[]) $r4;

        r6 = (byte[]) $r5;

        virtualinvoke r3.<com.yahoo.bullet.querying.Querier: void combine(byte[])>(r6);

        $z0 = virtualinvoke r3.<com.yahoo.bullet.querying.Querier: boolean isDone()>();

        if $z0 == 0 goto label2;

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitOrBufferFinished(java.lang.String,com.yahoo.bullet.querying.Querier)>(r1, r3);

        goto label4;

     label2:
        $z1 = virtualinvoke r3.<com.yahoo.bullet.querying.Querier: boolean isExceedingRateLimit()>();

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r3.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.querying.RateLimitError getRateLimitError()>();

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitRateLimitError(java.lang.String,com.yahoo.bullet.querying.Querier,com.yahoo.bullet.querying.RateLimitError)>(r1, r3, $r7);

        goto label4;

     label3:
        $z2 = virtualinvoke r3.<com.yahoo.bullet.querying.Querier: boolean isClosed()>();

        if $z2 == 0 goto label4;

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitWindow(java.lang.String,com.yahoo.bullet.querying.Querier)>(r1, r3);

     label4:
        return;
    }

    private void onError(org.apache.storm.tuple.Tuple)
    {
        org.apache.storm.tuple.Tuple r0;
        java.lang.String r1;
        com.yahoo.bullet.storm.JoinBolt r2;
        com.yahoo.bullet.querying.Querier r3;
        java.lang.Object $r4;
        com.yahoo.bullet.querying.RateLimitError r5;
        org.slf4j.Logger $r6;

        r2 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: org.apache.storm.tuple.Tuple;

        r1 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.lang.String getString(int)>(0);

        r3 = specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.querying.Querier getQuery(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r6 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received error for {} without the query existing", r1);

        return;

     label1:
        $r4 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.lang.Object getValue(int)>(1);

        r5 = (com.yahoo.bullet.querying.RateLimitError) $r4;

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitRateLimitError(java.lang.String,com.yahoo.bullet.querying.Querier,com.yahoo.bullet.querying.RateLimitError)>(r1, r3, r5);

        return;
    }

    private void handleCategorizedQueries(com.yahoo.bullet.querying.QueryCategorizer)
    {
        com.yahoo.bullet.querying.QueryCategorizer r0;
        java.util.Map r1, r5, r8, $r20;
        java.util.Set $r2, $r6, $r9;
        com.yahoo.bullet.storm.JoinBolt r3;
        java.util.function.Consumer $r4, $r7, $r10;
        java.lang.Object[] $r11;
        org.slf4j.Logger $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r13, $r14, $r15, $r17, $r19, $r21;
        org.apache.storm.utils.RotatingMap $r16, $r18;

        r3 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: com.yahoo.bullet.querying.QueryCategorizer;

        r1 = virtualinvoke r0.<com.yahoo.bullet.querying.QueryCategorizer: java.util.Map getDone()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBolt$emitOrBufferFinished__1: java.util.function.Consumer bootstrap$(com.yahoo.bullet.storm.JoinBolt)>(r3);

        interfaceinvoke $r2.<java.util.Set: void forEach(java.util.function.Consumer)>($r4);

        r5 = virtualinvoke r0.<com.yahoo.bullet.querying.QueryCategorizer: java.util.Map getRateLimited()>();

        $r6 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = staticinvoke <com.yahoo.bullet.storm.JoinBolt$emitRateLimitError__3: java.util.function.Consumer bootstrap$(com.yahoo.bullet.storm.JoinBolt)>(r3);

        interfaceinvoke $r6.<java.util.Set: void forEach(java.util.function.Consumer)>($r7);

        r8 = virtualinvoke r0.<com.yahoo.bullet.querying.QueryCategorizer: java.util.Map getClosed()>();

        $r9 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBolt$emitWindow__5: java.util.function.Consumer bootstrap$(com.yahoo.bullet.storm.JoinBolt)>(r3);

        interfaceinvoke $r9.<java.util.Set: void forEach(java.util.function.Consumer)>($r10);

        $r12 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[6];

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[0] = $r13;

        $i1 = interfaceinvoke r5.<java.util.Map: int size()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[1] = $r14;

        $i2 = interfaceinvoke r8.<java.util.Map: int size()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11[2] = $r15;

        $r16 = r3.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        $i3 = virtualinvoke $r16.<org.apache.storm.utils.RotatingMap: int size()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r11[3] = $r17;

        $r18 = r3.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        $i4 = virtualinvoke $r18.<org.apache.storm.utils.RotatingMap: int size()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r11[4] = $r19;

        $r20 = r3.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        $i5 = interfaceinvoke $r20.<java.util.Map: int size()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r11[5] = $r21;

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Done: {}, Rate limited: {}, Closed: {}, Starting delayed: {}, Buffered finished: {}, Active: {}", $r11);

        return;
    }

    public void emitRateLimitError(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1, $r4;
        com.yahoo.bullet.querying.Querier r2;
        com.yahoo.bullet.storm.JoinBolt r3;
        java.lang.String $r5;
        com.yahoo.bullet.querying.RateLimitError $r6;

        r3 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2 = (com.yahoo.bullet.querying.Querier) $r1;

        $r4 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r2.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.querying.RateLimitError getRateLimitError()>();

        specialinvoke r3.<com.yahoo.bullet.storm.JoinBolt: void emitRateLimitError(java.lang.String,com.yahoo.bullet.querying.Querier,com.yahoo.bullet.querying.RateLimitError)>($r5, r2, $r6);

        return;
    }

    private void emitRateLimitError(java.lang.String, com.yahoo.bullet.querying.Querier, com.yahoo.bullet.querying.RateLimitError)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.yahoo.bullet.pubsub.Metadata r4, $r12;
        com.yahoo.bullet.querying.RateLimitError r5;
        com.yahoo.bullet.result.Meta r6, $r9;
        com.yahoo.bullet.querying.Querier r7;
        com.yahoo.bullet.result.Clip r8;
        com.yahoo.bullet.pubsub.Metadata$Signal $r11, $r13;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r14;
        com.yahoo.bullet.storm.metric.BulletMetrics $r15;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: com.yahoo.bullet.querying.Querier;

        r5 := @parameter2: com.yahoo.bullet.querying.RateLimitError;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.yahoo.bullet.pubsub.Metadata) $r3;

        r6 = virtualinvoke r5.<com.yahoo.bullet.querying.RateLimitError: com.yahoo.bullet.result.Meta makeMeta()>();

        r8 = virtualinvoke r7.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.result.Clip finish()>();

        $r9 = virtualinvoke r8.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Meta getMeta()>();

        virtualinvoke $r9.<com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta merge(com.yahoo.bullet.result.Meta)>(r6);

        $r11 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        $r12 = specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.pubsub.Metadata withSignal(com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.pubsub.Metadata$Signal)>(r4, $r11);

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.result.Clip)>(r1, $r12, r8);

        $r13 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal KILL>;

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitMetaSignal(java.lang.String,com.yahoo.bullet.pubsub.Metadata$Signal)>(r1, $r13);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r14 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric rateExceededQueries>;

        virtualinvoke $r15.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r14, 1L);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void removeQuery(java.lang.String)>(r1);

        return;
    }

    public void emitOrBufferFinished(java.util.Map$Entry)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        com.yahoo.bullet.querying.Querier $r5;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (com.yahoo.bullet.querying.Querier) $r4;

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitOrBufferFinished(java.lang.String,com.yahoo.bullet.querying.Querier)>($r3, $r5);

        return;
    }

    private void emitOrBufferFinished(java.lang.String, com.yahoo.bullet.querying.Querier)
    {
        com.yahoo.bullet.querying.Querier r0;
        boolean $z0, $z1, $z2;
        com.yahoo.bullet.storm.JoinBolt r1;
        java.lang.String r2;
        java.util.Map $r3, $r5;
        org.slf4j.Logger $r4, $r8, $r9;
        org.apache.storm.utils.RotatingMap $r7;

        r1 := @this: com.yahoo.bullet.storm.JoinBolt;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.yahoo.bullet.querying.Querier;

        $z0 = virtualinvoke r0.<com.yahoo.bullet.querying.Querier: boolean shouldBuffer()>();

        if $z0 != 0 goto label1;

        $r9 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Emitting query since it shouldn\'t be buffered {}", r2);

        specialinvoke r1.<com.yahoo.bullet.storm.JoinBolt: void emitFinished(java.lang.String,com.yahoo.bullet.querying.Querier)>(r2, r0);

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<com.yahoo.bullet.querying.Querier: boolean isClosed()>();

        if $z1 == 0 goto label2;

        $r8 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Emitting query since it finished but this is the last window for it {}", r2);

        specialinvoke r1.<com.yahoo.bullet.storm.JoinBolt: void emitFinished(java.lang.String,com.yahoo.bullet.querying.Querier)>(r2, r0);

        goto label3;

     label2:
        $r3 = r1.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        $z2 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        $r4 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Starting to buffer while waiting for more final results for query {}", r2);

        $r5 = r1.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r7 = r1.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        virtualinvoke $r7.<org.apache.storm.utils.RotatingMap: void put(java.lang.Object,java.lang.Object)>(r2, r0);

     label3:
        return;
    }

    public void emitFinished(java.util.Map$Entry)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        com.yahoo.bullet.querying.Querier $r5;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (com.yahoo.bullet.querying.Querier) $r4;

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitFinished(java.lang.String,com.yahoo.bullet.querying.Querier)>($r3, $r5);

        return;
    }

    private void emitFinished(java.lang.String, com.yahoo.bullet.querying.Querier)
    {
        java.lang.String r0;
        org.slf4j.Logger $r1;
        com.yahoo.bullet.storm.JoinBolt r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.yahoo.bullet.pubsub.Metadata$Signal $r5, $r10;
        com.yahoo.bullet.pubsub.Metadata $r6, $r7;
        com.yahoo.bullet.querying.Querier r8;
        com.yahoo.bullet.result.Clip $r9;

        r2 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: com.yahoo.bullet.querying.Querier;

        $r1 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Query is done {}...", r0);

        $r3 = r2.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (com.yahoo.bullet.pubsub.Metadata) $r4;

        $r5 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        $r7 = specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.pubsub.Metadata withSignal(com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.pubsub.Metadata$Signal)>($r6, $r5);

        $r9 = virtualinvoke r8.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.result.Clip finish()>();

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.result.Clip)>(r0, $r7, $r9);

        $r10 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitMetaSignal(java.lang.String,com.yahoo.bullet.pubsub.Metadata$Signal)>(r0, $r10);

        virtualinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void removeQuery(java.lang.String)>(r0);

        return;
    }

    public void emitWindow(java.util.Map$Entry)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        com.yahoo.bullet.querying.Querier $r5;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (com.yahoo.bullet.querying.Querier) $r4;

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitWindow(java.lang.String,com.yahoo.bullet.querying.Querier)>($r3, $r5);

        return;
    }

    private void emitWindow(java.lang.String, com.yahoo.bullet.querying.Querier)
    {
        java.lang.String r0;
        org.slf4j.Logger $r1;
        com.yahoo.bullet.storm.JoinBolt r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.yahoo.bullet.querying.Querier r5;
        com.yahoo.bullet.pubsub.Metadata $r6;
        com.yahoo.bullet.result.Clip $r7;

        r2 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: com.yahoo.bullet.querying.Querier;

        $r1 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Emitting window for {} and resetting...", r0);

        $r3 = r2.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (com.yahoo.bullet.pubsub.Metadata) $r4;

        $r7 = virtualinvoke r5.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.result.Clip getResult()>();

        specialinvoke r2.<com.yahoo.bullet.storm.JoinBolt: void emitResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.result.Clip)>(r0, $r6, $r7);

        virtualinvoke r5.<com.yahoo.bullet.querying.Querier: void reset()>();

        return;
    }

    private transient void emitErrorsAsResult(java.lang.String, com.yahoo.bullet.pubsub.Metadata, com.yahoo.bullet.common.BulletError[])
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.String r1;
        com.yahoo.bullet.pubsub.Metadata r2;
        com.yahoo.bullet.common.BulletError[] r3;
        java.util.List $r4;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.yahoo.bullet.pubsub.Metadata;

        r3 := @parameter2: com.yahoo.bullet.common.BulletError[];

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitErrorsAsResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,java.util.List)>(r1, r2, $r4);

        return;
    }

    private void emitErrorsAsResult(java.lang.String, com.yahoo.bullet.pubsub.Metadata, java.util.List)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r1;
        com.yahoo.bullet.storm.metric.BulletMetrics $r2;
        java.lang.String r3;
        com.yahoo.bullet.pubsub.Metadata r4, $r6;
        com.yahoo.bullet.pubsub.Metadata$Signal $r5;
        java.util.List r7;
        com.yahoo.bullet.result.Meta $r8;
        com.yahoo.bullet.result.Clip $r9;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: com.yahoo.bullet.pubsub.Metadata;

        r7 := @parameter2: java.util.List;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric improperQueriesCount>;

        virtualinvoke $r2.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r1, 1L);

        $r5 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        $r6 = specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.pubsub.Metadata withSignal(com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.pubsub.Metadata$Signal)>(r4, $r5);

        $r8 = staticinvoke <com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta of(java.util.List)>(r7);

        $r9 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(com.yahoo.bullet.result.Meta)>($r8);

        specialinvoke r0.<com.yahoo.bullet.storm.JoinBolt: void emitResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.result.Clip)>(r3, $r6, $r9);

        return;
    }

    private void emitResult(java.lang.String, com.yahoo.bullet.pubsub.Metadata, com.yahoo.bullet.result.Clip)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.Object[] $r2;
        java.lang.String r3, $r6;
        com.yahoo.bullet.result.Clip r4;
        org.apache.storm.task.OutputCollector $r5;
        com.yahoo.bullet.pubsub.Metadata r7;
        org.apache.storm.tuple.Values $r9;
        java.util.List $r10;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: com.yahoo.bullet.pubsub.Metadata;

        r4 := @parameter2: com.yahoo.bullet.result.Clip;

        $r5 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.task.OutputCollector collector>;

        $r9 = new org.apache.storm.tuple.Values;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r3;

        $r6 = virtualinvoke r4.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r2[1] = $r6;

        $r2[2] = r7;

        specialinvoke $r9.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r2);

        $r10 = (java.util.List) $r9;

        virtualinvoke $r5.<org.apache.storm.task.OutputCollector: java.util.List emit(java.lang.String,java.util.List)>("default", $r10);

        return;
    }

    private void emitMetaSignal(java.lang.String, com.yahoo.bullet.pubsub.Metadata$Signal)
    {
        com.yahoo.bullet.pubsub.Metadata$Signal r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;
        com.yahoo.bullet.storm.JoinBolt r3;
        java.lang.Object[] $r5;
        org.apache.storm.task.OutputCollector $r7;
        com.yahoo.bullet.pubsub.Metadata $r9;
        org.apache.storm.tuple.Values $r10;
        java.util.List $r11;

        r3 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: com.yahoo.bullet.pubsub.Metadata$Signal;

        $r2 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Emitting {} signal to the feedback stream for {}", r0, r1);

        $r7 = r3.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.task.OutputCollector collector>;

        $r10 = new org.apache.storm.tuple.Values;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r9 = new com.yahoo.bullet.pubsub.Metadata;

        specialinvoke $r9.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>(r0, null);

        $r5[1] = $r9;

        specialinvoke $r10.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r5);

        $r11 = (java.util.List) $r10;

        virtualinvoke $r7.<org.apache.storm.task.OutputCollector: java.util.List emit(java.lang.String,java.util.List)>("feedback", $r11);

        return;
    }

    protected boolean hasQuery(java.lang.String)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.String r1;
        java.util.Map $r2;
        boolean $z0;
        org.slf4j.Logger $r3;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r4;
        com.yahoo.bullet.storm.metric.BulletMetrics $r5;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Duplicate for request {}", r1);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r4 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric duplicatedQueriesCount>;

        virtualinvoke $r5.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r4, 1L);

        return 1;

     label1:
        return 0;
    }

    protected void initializeQuery(com.yahoo.bullet.pubsub.PubSubMessage)
    {
        java.lang.String r0, $r11;
        com.yahoo.bullet.storm.JoinBolt r1;
        com.yahoo.bullet.pubsub.PubSubMessageSerDe $r2;
        com.yahoo.bullet.querying.Querier$Mode $r3;
        com.yahoo.bullet.query.Query $r4;
        com.yahoo.bullet.pubsub.Metadata $r5, $r7, $r9;
        com.yahoo.bullet.storm.BulletStormConfig $r6;
        java.lang.RuntimeException $r8;
        com.yahoo.bullet.common.BulletError[] $r10;
        com.yahoo.bullet.common.BulletError $r12;
        org.slf4j.Logger $r13;
        com.yahoo.bullet.pubsub.PubSubMessage r14;
        com.yahoo.bullet.querying.Querier r15;

        r1 := @this: com.yahoo.bullet.storm.JoinBolt;

        r14 := @parameter0: com.yahoo.bullet.pubsub.PubSubMessage;

        r0 = virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: java.lang.String getId()>();

     label1:
        $r2 = r1.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.pubsub.PubSubMessageSerDe querySerDe>;

        r14 = virtualinvoke $r2.<com.yahoo.bullet.pubsub.PubSubMessageSerDe: com.yahoo.bullet.pubsub.PubSubMessage fromMessage(com.yahoo.bullet.pubsub.PubSubMessage)>(r14);

        $r3 = <com.yahoo.bullet.querying.Querier$Mode: com.yahoo.bullet.querying.Querier$Mode ALL>;

        $r4 = virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: com.yahoo.bullet.query.Query getContentAsQuery()>();

        $r5 = virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: com.yahoo.bullet.pubsub.Metadata getMetadata()>();

        $r6 = r1.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.BulletStormConfig config>;

        r15 = virtualinvoke r1.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.querying.Querier createQuerier(com.yahoo.bullet.querying.Querier$Mode,java.lang.String,com.yahoo.bullet.query.Query,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.common.BulletConfig)>($r3, r0, $r4, $r5, $r6);

        $r7 = virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: com.yahoo.bullet.pubsub.Metadata getMetadata()>();

        specialinvoke r1.<com.yahoo.bullet.storm.JoinBolt: void setupQuery(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.querying.Querier)>(r0, $r7, r15);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: com.yahoo.bullet.pubsub.Metadata getMetadata()>();

        $r10 = newarray (com.yahoo.bullet.common.BulletError)[1];

        $r11 = virtualinvoke $r8.<java.lang.RuntimeException: java.lang.String toString()>();

        $r12 = staticinvoke <com.yahoo.bullet.common.BulletError: com.yahoo.bullet.common.BulletError makeError(java.lang.String,java.lang.String)>($r11, "Error initializing query");

        $r10[0] = $r12;

        specialinvoke r1.<com.yahoo.bullet.storm.JoinBolt: void emitErrorsAsResult(java.lang.String,com.yahoo.bullet.pubsub.Metadata,com.yahoo.bullet.common.BulletError[])>(r0, $r9, $r10);

        $r13 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize query for request {}", r0);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void removeQuery(java.lang.String)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.String r1;
        java.util.Map $r2, $r10, $r12;
        boolean $z0, $z1;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r3;
        com.yahoo.bullet.storm.metric.BulletMetrics $r4;
        org.apache.storm.utils.RotatingMap $r9, $r11, $r13;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.yahoo.bullet.storm.QueryBolt: void removeQuery(java.lang.String)>(r1);

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r9 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        $z1 = virtualinvoke $r9.<org.apache.storm.utils.RotatingMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r4 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount>;

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r3, -1L);

     label2:
        $r10 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        virtualinvoke $r11.<org.apache.storm.utils.RotatingMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r12 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        virtualinvoke $r13.<org.apache.storm.utils.RotatingMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    private void setupQuery(java.lang.String, com.yahoo.bullet.pubsub.Metadata, com.yahoo.bullet.querying.Querier)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r1, $r12;
        com.yahoo.bullet.storm.metric.BulletMetrics $r2, $r13;
        java.lang.String r3, $r16, $r18;
        com.yahoo.bullet.pubsub.Metadata r4;
        java.util.Map $r5, $r10;
        com.yahoo.bullet.querying.Querier r7;
        boolean $z0;
        org.apache.storm.utils.RotatingMap $r8;
        org.slf4j.Logger $r9, $r14, $r19;
        com.yahoo.bullet.querying.RunningQuery $r15, $r17;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: com.yahoo.bullet.pubsub.Metadata;

        r7 := @parameter2: com.yahoo.bullet.querying.Querier;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric createdQueriesCount>;

        virtualinvoke $r2.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r1, 1L);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map bufferedMetadata>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $z0 = virtualinvoke r7.<com.yahoo.bullet.querying.Querier: boolean shouldBuffer()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r7);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r12 = r0.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount>;

        virtualinvoke $r13.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r12, 1L);

        $r14 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        $r15 = virtualinvoke r7.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.querying.RunningQuery getRunningQuery()>();

        $r16 = virtualinvoke $r15.<com.yahoo.bullet.querying.RunningQuery: java.lang.String getId()>();

        $r17 = virtualinvoke r7.<com.yahoo.bullet.querying.Querier: com.yahoo.bullet.querying.RunningQuery getRunningQuery()>();

        $r18 = virtualinvoke $r17.<com.yahoo.bullet.querying.RunningQuery: java.lang.String getQueryString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Received and started query {} : {}", $r16, $r18);

        $r19 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received and started query {}", r7);

        goto label2;

     label1:
        $r8 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        virtualinvoke $r8.<org.apache.storm.utils.RotatingMap: void put(java.lang.Object,java.lang.Object)>(r3, r7);

        $r9 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received but delaying starting query {}", r3);

     label2:
        return;
    }

    public void startDelayed(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1, $r3;
        java.lang.String r2;
        com.yahoo.bullet.querying.Querier r4;
        com.yahoo.bullet.storm.JoinBolt r5;
        org.apache.storm.utils.RotatingMap $r6;
        java.util.Map $r8;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r10;
        com.yahoo.bullet.storm.metric.BulletMetrics $r11;
        org.slf4j.Logger $r12;

        r5 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = (java.lang.String) $r1;

        $r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.yahoo.bullet.querying.Querier) $r3;

        $r6 = r5.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        virtualinvoke $r6.<org.apache.storm.utils.RotatingMap: java.lang.Object remove(java.lang.Object)>(r2);

        virtualinvoke r4.<com.yahoo.bullet.querying.Querier: void restart()>();

        $r8 = r5.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

        $r11 = r5.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r10 = r5.<com.yahoo.bullet.storm.JoinBolt: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeQueriesCount>;

        virtualinvoke $r11.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r10, 1L);

        $r12 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Started delayed query {}", r2);

        return;
    }

    private com.yahoo.bullet.pubsub.Metadata withSignal(com.yahoo.bullet.pubsub.Metadata, com.yahoo.bullet.pubsub.Metadata$Signal)
    {
        com.yahoo.bullet.pubsub.Metadata r0, r1, $r3;
        com.yahoo.bullet.pubsub.Metadata$Signal r2;
        com.yahoo.bullet.storm.JoinBolt r4;

        r4 := @this: com.yahoo.bullet.storm.JoinBolt;

        r0 := @parameter0: com.yahoo.bullet.pubsub.Metadata;

        r2 := @parameter1: com.yahoo.bullet.pubsub.Metadata$Signal;

        if r0 != null goto label1;

        $r3 = new com.yahoo.bullet.pubsub.Metadata;

        specialinvoke $r3.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>(r2, null);

        return $r3;

     label1:
        r1 = virtualinvoke r0.<com.yahoo.bullet.pubsub.Metadata: com.yahoo.bullet.pubsub.Metadata copy()>();

        virtualinvoke r1.<com.yahoo.bullet.pubsub.Metadata: void setSignal(com.yahoo.bullet.pubsub.Metadata$Signal)>(r2);

        return r1;
    }

    private com.yahoo.bullet.querying.Querier getQuery(java.lang.String)
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3, $r6, $r9;
        org.slf4j.Logger $r4, $r7;
        org.apache.storm.utils.RotatingMap $r5, $r8;
        com.yahoo.bullet.querying.Querier r10;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.yahoo.bullet.querying.Querier) $r3;

        if r10 != null goto label1;

        $r7 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Query might be done: {}", r1);

        $r8 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap postFinishBuffer>;

        $r9 = virtualinvoke $r8.<org.apache.storm.utils.RotatingMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.yahoo.bullet.querying.Querier) $r9;

     label1:
        if r10 != null goto label2;

        $r4 = <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log>;

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Fetching delayed query {}", r1);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBolt: org.apache.storm.utils.RotatingMap preStartBuffer>;

        $r6 = virtualinvoke $r5.<org.apache.storm.utils.RotatingMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.yahoo.bullet.querying.Querier) $r6;

     label2:
        return r10;
    }

    java.util.Map getQueries()
    {
        com.yahoo.bullet.storm.JoinBolt r0;
        java.util.Map $r1;

        r0 := @this: com.yahoo.bullet.storm.JoinBolt;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBolt: java.util.Map queries>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.yahoo.bullet.storm.JoinBolt: long serialVersionUID> = 3312434064971532267L;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/JoinBolt;");

        <com.yahoo.bullet.storm.JoinBolt: org.slf4j.Logger log> = $r0;

        return;
    }
}
