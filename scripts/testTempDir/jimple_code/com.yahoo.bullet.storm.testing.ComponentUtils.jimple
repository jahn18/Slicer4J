public class com.yahoo.bullet.storm.testing.ComponentUtils extends java.lang.Object
{

    public void <init>()
    {
        com.yahoo.bullet.storm.testing.ComponentUtils r0;

        r0 := @this: com.yahoo.bullet.storm.testing.ComponentUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.storm.topology.IRichBolt prepare(java.util.Map, org.apache.storm.topology.IRichBolt, org.apache.storm.task.TopologyContext, org.apache.storm.task.IOutputCollector)
    {
        org.apache.storm.topology.IRichBolt r0;
        java.util.Map r1;
        org.apache.storm.task.TopologyContext r2;
        org.apache.storm.task.OutputCollector $r3;
        org.apache.storm.task.IOutputCollector r4;

        r1 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.storm.topology.IRichBolt;

        r2 := @parameter2: org.apache.storm.task.TopologyContext;

        r4 := @parameter3: org.apache.storm.task.IOutputCollector;

        $r3 = new org.apache.storm.task.OutputCollector;

        specialinvoke $r3.<org.apache.storm.task.OutputCollector: void <init>(org.apache.storm.task.IOutputCollector)>(r4);

        interfaceinvoke r0.<org.apache.storm.topology.IRichBolt: void prepare(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.task.OutputCollector)>(r1, r2, $r3);

        return r0;
    }

    public static org.apache.storm.topology.IRichSpout open(java.util.Map, org.apache.storm.topology.IRichSpout, org.apache.storm.task.TopologyContext, org.apache.storm.spout.ISpoutOutputCollector)
    {
        org.apache.storm.topology.IRichSpout r0;
        java.util.Map r1;
        org.apache.storm.task.TopologyContext r2;
        org.apache.storm.spout.SpoutOutputCollector $r3;
        org.apache.storm.spout.ISpoutOutputCollector r4;

        r1 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.storm.topology.IRichSpout;

        r2 := @parameter2: org.apache.storm.task.TopologyContext;

        r4 := @parameter3: org.apache.storm.spout.ISpoutOutputCollector;

        $r3 = new org.apache.storm.spout.SpoutOutputCollector;

        specialinvoke $r3.<org.apache.storm.spout.SpoutOutputCollector: void <init>(org.apache.storm.spout.ISpoutOutputCollector)>(r4);

        interfaceinvoke r0.<org.apache.storm.topology.IRichSpout: void open(java.util.Map,org.apache.storm.task.TopologyContext,org.apache.storm.spout.SpoutOutputCollector)>(r1, r2, $r3);

        return r0;
    }

    public static org.apache.storm.topology.IRichBolt prepare(java.util.Map, org.apache.storm.topology.IRichBolt, com.yahoo.bullet.storm.testing.CustomCollector)
    {
        java.util.Map r0;
        org.apache.storm.topology.IRichBolt r1, $r5;
        java.lang.Object $r2;
        com.yahoo.bullet.storm.testing.CustomCollector r3;
        org.apache.storm.task.TopologyContext $r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.storm.topology.IRichBolt;

        r3 := @parameter2: com.yahoo.bullet.storm.testing.CustomCollector;

        $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/storm/task/TopologyContext;");

        $r4 = (org.apache.storm.task.TopologyContext) $r2;

        $r5 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(java.util.Map,org.apache.storm.topology.IRichBolt,org.apache.storm.task.TopologyContext,org.apache.storm.task.IOutputCollector)>(r0, r1, $r4, r3);

        return $r5;
    }

    public static org.apache.storm.topology.IRichBolt prepare(org.apache.storm.topology.IRichBolt, com.yahoo.bullet.storm.testing.CustomCollector)
    {
        java.util.HashMap $r0;
        org.apache.storm.topology.IRichBolt r1, $r5;
        java.lang.Object $r2;
        com.yahoo.bullet.storm.testing.CustomCollector r3;
        org.apache.storm.task.TopologyContext $r4;

        r1 := @parameter0: org.apache.storm.topology.IRichBolt;

        r3 := @parameter1: com.yahoo.bullet.storm.testing.CustomCollector;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/storm/task/TopologyContext;");

        $r4 = (org.apache.storm.task.TopologyContext) $r2;

        $r5 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(java.util.Map,org.apache.storm.topology.IRichBolt,org.apache.storm.task.TopologyContext,org.apache.storm.task.IOutputCollector)>($r0, r1, $r4, r3);

        return $r5;
    }

    public static org.apache.storm.topology.IRichSpout open(java.util.Map, org.apache.storm.topology.IRichSpout, com.yahoo.bullet.storm.testing.CustomEmitter)
    {
        java.util.Map r0;
        org.apache.storm.topology.IRichSpout r1, $r5;
        java.lang.Object $r2;
        com.yahoo.bullet.storm.testing.CustomEmitter r3;
        org.apache.storm.task.TopologyContext $r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.storm.topology.IRichSpout;

        r3 := @parameter2: com.yahoo.bullet.storm.testing.CustomEmitter;

        $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/storm/task/TopologyContext;");

        $r4 = (org.apache.storm.task.TopologyContext) $r2;

        $r5 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichSpout open(java.util.Map,org.apache.storm.topology.IRichSpout,org.apache.storm.task.TopologyContext,org.apache.storm.spout.ISpoutOutputCollector)>(r0, r1, $r4, r3);

        return $r5;
    }

    public static org.apache.storm.topology.IRichSpout open(org.apache.storm.topology.IRichSpout, com.yahoo.bullet.storm.testing.CustomEmitter)
    {
        java.util.HashMap $r0;
        org.apache.storm.topology.IRichSpout r1, $r3;
        com.yahoo.bullet.storm.testing.CustomEmitter r2;

        r1 := @parameter0: org.apache.storm.topology.IRichSpout;

        r2 := @parameter1: com.yahoo.bullet.storm.testing.CustomEmitter;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichSpout open(java.util.Map,org.apache.storm.topology.IRichSpout,com.yahoo.bullet.storm.testing.CustomEmitter)>($r0, r1, r2);

        return $r3;
    }
}
