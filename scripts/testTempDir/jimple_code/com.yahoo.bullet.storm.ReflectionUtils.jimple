public class com.yahoo.bullet.storm.ReflectionUtils extends java.lang.Object
{
    private static final org.slf4j.Logger log;
    public static final java.lang.String REGISTER_METHOD;

    public void <init>()
    {
        com.yahoo.bullet.storm.ReflectionUtils r0;

        r0 := @this: com.yahoo.bullet.storm.ReflectionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.storm.topology.IRichSpout getSpout(java.lang.String, java.util.List) throws java.lang.Exception
    {
        java.lang.String r0, $r4;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        org.slf4j.Logger $r3, $r8, $r10;
        java.util.List r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7, $r11;
        java.lang.Exception $r9;
        java.lang.reflect.Constructor r12;
        org.apache.storm.topology.IRichSpout r13;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.List;

        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label1:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/util/List;";

        r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r3 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        $r4 = virtualinvoke r12.<java.lang.reflect.Constructor: java.lang.String toGenericString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Initializing spout using constructor {} with args {}", $r4, r5);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r5;

        $r7 = virtualinvoke r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        r13 = (org.apache.storm.topology.IRichSpout) $r7;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Could not find or initialize a constructor taking a List. Trying default constructor...", $r9);

        $r11 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        r13 = (org.apache.storm.topology.IRichSpout) $r11;

     label4:
        $r8 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initialized spout class {}", r0);

        return r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void registerMetricsConsumer(java.lang.String, org.apache.storm.Config, com.yahoo.bullet.storm.BulletStormConfig)
    {
        java.lang.String r0, $r4, $r15;
        java.lang.Class[] $r1;
        java.lang.reflect.Method r2;
        org.slf4j.Logger $r3, $r9, $r12;
        java.lang.Object[] $r5;
        org.apache.storm.Config r6;
        com.yahoo.bullet.storm.BulletStormConfig r7;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.lang.Class r16;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.storm.Config;

        r7 := @parameter2: com.yahoo.bullet.storm.BulletStormConfig;

     label1:
        r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Lorg/apache/storm/Config;";

        $r1[1] = class "Lcom/yahoo/bullet/storm/BulletStormConfig;";

        r2 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("register", $r1);

        $r3 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        $r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String toGenericString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Calling the IMetricsConsumer register method for class {} using method {}", r0, $r4);

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r6;

        $r5[1] = r7;

        virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

        $r9 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Registered the IMetricsConsumer class {}", r0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r12 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not call the register method for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>($r15, $r10);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isIMetricsConsumer(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class[] $r1;
        java.lang.Exception $r3;
        org.slf4j.Logger $r4, $r5;
        java.lang.Class r6;

        r0 := @parameter0: java.lang.String;

     label1:
        r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Lorg/apache/storm/Config;";

        $r1[1] = class "Lcom/yahoo/bullet/storm/BulletStormConfig;";

        virtualinvoke r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("register", $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("The given class: {} was not a proper IMetricsConsumer with a {} method", r0, "register");

        $r5 = <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception: {}", $r3);

        return 0;

     label4:
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.yahoo.bullet.storm.ReflectionUtils: java.lang.String REGISTER_METHOD> = "register";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/ReflectionUtils;");

        <com.yahoo.bullet.storm.ReflectionUtils: org.slf4j.Logger log> = $r0;

        return;
    }
}
