public class com.yahoo.bullet.storm.DSLBoltTest extends java.lang.Object
{
    private com.yahoo.bullet.storm.testing.CustomCollector collector;
    private com.yahoo.bullet.storm.DSLBolt dslBolt;
    private com.yahoo.bullet.storm.BulletStormConfig config;

    public void <init>()
    {
        com.yahoo.bullet.storm.DSLBoltTest r0;

        r0 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setup()
    {
        com.yahoo.bullet.storm.DSLBoltTest r0;
        com.yahoo.bullet.storm.testing.CustomCollector $r1, $r5;
        com.yahoo.bullet.storm.BulletStormConfig $r2, $r4;
        com.yahoo.bullet.storm.DSLBolt $r3, $r7;
        org.apache.storm.topology.IRichBolt $r6;

        r0 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        $r1 = new com.yahoo.bullet.storm.testing.CustomCollector;

        specialinvoke $r1.<com.yahoo.bullet.storm.testing.CustomCollector: void <init>()>();

        r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector> = $r1;

        $r2 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: void <init>(java.lang.String)>("test_dsl_config.yaml");

        r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.BulletStormConfig config> = $r2;

        $r3 = new com.yahoo.bullet.storm.DSLBolt;

        $r4 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r3.<com.yahoo.bullet.storm.DSLBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r4);

        $r5 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r6 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(org.apache.storm.topology.IRichBolt,com.yahoo.bullet.storm.testing.CustomCollector)>($r3, $r5);

        $r7 = (com.yahoo.bullet.storm.DSLBolt) $r6;

        r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt> = $r7;

        return;
    }

    public void testExecute()
    {
        java.lang.Object[] $r0;
        java.util.Map[] $r1;
        java.util.Map $r2, $r4;
        java.lang.Integer $r3;
        java.util.List $r5, $r11, $r14;
        org.apache.storm.tuple.Tuple r6;
        com.yahoo.bullet.storm.DSLBoltTest r7;
        com.yahoo.bullet.storm.DSLBolt $r8;
        com.yahoo.bullet.storm.testing.CustomCollector $r9, $r10, $r19;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r12, $r15;
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet $r13;
        com.yahoo.bullet.record.BulletRecord r16;
        com.yahoo.bullet.typesystem.TypedObject $r17;
        java.io.Serializable $r18;

        r7 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = newarray (java.util.Map)[2];

        $r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("foo", "bar");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r4 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("foo", $r3);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r0[0] = $r5;

        r6 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(java.lang.Object[])>($r0);

        $r8 = r7.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt>;

        virtualinvoke $r8.<com.yahoo.bullet.storm.DSLBolt: void execute(org.apache.storm.tuple.Tuple)>(r6);

        $r9 = r7.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r9.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r10 = r7.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r11 = virtualinvoke $r10.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.List getEmitted()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (com.yahoo.bullet.storm.testing.CustomCollector$Triplet) $r12;

        $r14 = virtualinvoke $r13.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List getTuple()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        r16 = (com.yahoo.bullet.record.BulletRecord) $r15;

        $r17 = virtualinvoke r16.<com.yahoo.bullet.record.BulletRecord: com.yahoo.bullet.typesystem.TypedObject typedGet(java.lang.String)>("foo");

        $r18 = virtualinvoke $r17.<com.yahoo.bullet.typesystem.TypedObject: java.io.Serializable getValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, "bar");

        $r19 = r7.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r19.<com.yahoo.bullet.storm.testing.CustomCollector: int getAckedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 1L);

        return;
    }

    public void testExecuteWithDeserialize()
    {
        com.yahoo.bullet.storm.DSLBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r4;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.DSLBolt $r3, $r7, $r15;
        com.yahoo.bullet.storm.testing.CustomCollector $r5, $r16, $r18, $r29;
        org.apache.storm.topology.IRichBolt $r6;
        java.lang.Object[] $r8;
        java.util.Map[] $r9;
        java.util.Map $r10, $r12;
        java.lang.Integer $r11;
        java.util.List $r13, $r17, $r19, $r22;
        org.apache.storm.tuple.Tuple r14;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r20, $r23;
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet $r21;
        com.yahoo.bullet.record.BulletRecord r24;
        com.yahoo.bullet.typesystem.TypedObject $r25, $r27;
        java.io.Serializable $r26, $r28;

        r0 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.dsl.deserializer.enable", $r2);

        $r3 = new com.yahoo.bullet.storm.DSLBolt;

        $r4 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r3.<com.yahoo.bullet.storm.DSLBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r4);

        $r5 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r6 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(org.apache.storm.topology.IRichBolt,com.yahoo.bullet.storm.testing.CustomCollector)>($r3, $r5);

        $r7 = (com.yahoo.bullet.storm.DSLBolt) $r6;

        r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt> = $r7;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = newarray (java.util.Map)[2];

        $r10 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("foo", "bar");

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("foo", $r11);

        $r9[1] = $r12;

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $r8[0] = $r13;

        r14 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(java.lang.Object[])>($r8);

        $r15 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt>;

        virtualinvoke $r15.<com.yahoo.bullet.storm.DSLBolt: void execute(org.apache.storm.tuple.Tuple)>(r14);

        $r16 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.List getEmitted()>();

        $i0 = interfaceinvoke $r17.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r18 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r19 = virtualinvoke $r18.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.List getEmitted()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (com.yahoo.bullet.storm.testing.CustomCollector$Triplet) $r20;

        $r22 = virtualinvoke $r21.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List getTuple()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0);

        r24 = (com.yahoo.bullet.record.BulletRecord) $r23;

        $r25 = virtualinvoke r24.<com.yahoo.bullet.record.BulletRecord: com.yahoo.bullet.typesystem.TypedObject typedGet(java.lang.String)>("foo");

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.typesystem.TypedObject: java.io.Serializable getValue()>();

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r26);

        $r27 = virtualinvoke r24.<com.yahoo.bullet.record.BulletRecord: com.yahoo.bullet.typesystem.TypedObject typedGet(java.lang.String)>("bar");

        $r28 = virtualinvoke $r27.<com.yahoo.bullet.typesystem.TypedObject: java.io.Serializable getValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, "bar");

        $r29 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r29.<com.yahoo.bullet.storm.testing.CustomCollector: int getAckedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 1L);

        return;
    }

    public void testOutputFields()
    {
        com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer $r0;
        com.yahoo.bullet.storm.DSLBoltTest r2;
        com.yahoo.bullet.storm.DSLBolt $r3;
        org.apache.storm.tuple.Fields $r4;
        java.lang.String[] $r5;
        boolean $z0;

        r2 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        $r0 = new com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer;

        specialinvoke $r0.<com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer: void <init>()>();

        $r3 = r2.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.DSLBolt: void declareOutputFields(org.apache.storm.topology.OutputFieldsDeclarer)>($r0);

        $r4 = new org.apache.storm.tuple.Fields;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "record";

        $r5[1] = "timestamp";

        specialinvoke $r4.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r5);

        $z0 = virtualinvoke $r0.<com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer: boolean areFieldsPresent(org.apache.storm.tuple.Fields)>($r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    public void testCleanup()
    {
        com.yahoo.bullet.storm.DSLBoltTest r0;
        com.yahoo.bullet.storm.DSLBolt $r1;

        r0 := @this: com.yahoo.bullet.storm.DSLBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.DSLBoltTest: com.yahoo.bullet.storm.DSLBolt dslBolt>;

        virtualinvoke $r1.<com.yahoo.bullet.storm.DSLBolt: void cleanup()>();

        return;
    }
}
