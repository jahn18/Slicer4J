public class com.yahoo.bullet.storm.JoinBoltTest extends java.lang.Object
{
    private static final com.yahoo.bullet.pubsub.Metadata EMPTY;
    private static final com.yahoo.bullet.pubsub.Metadata COMPLETED;
    private static final com.yahoo.bullet.pubsub.Metadata FAILED;
    private static final int RAW_MAX_SIZE;
    private static final com.yahoo.bullet.pubsub.PubSubMessageSerDe querySerDe;
    private com.yahoo.bullet.storm.BulletStormConfig config;
    private com.yahoo.bullet.storm.testing.CustomCollector collector;
    private com.yahoo.bullet.storm.testing.CustomTopologyContext context;
    private com.yahoo.bullet.storm.JoinBolt bolt;

    public void <init>()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt, java.lang.String, int, int)
    {
        java.util.ArrayList $r0;
        int i0, i1, $i2, i3, i4;
        com.yahoo.bullet.record.BulletRecord[] r2;
        java.lang.Object[] $r3;
        java.lang.String r4, $r10;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5;
        byte[] $r6;
        org.apache.storm.topology.IRichBolt r7;
        java.util.List $r8;
        com.yahoo.bullet.result.RecordBox $r9, $r11;
        com.yahoo.bullet.record.BulletRecord $r12;
        org.apache.storm.tuple.Tuple r13;

        r7 := @parameter0: org.apache.storm.topology.IRichBolt;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r2 = newarray (com.yahoo.bullet.record.BulletRecord)[i1];

        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        $r9 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $i2 = i3 + i4;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r11 = virtualinvoke $r9.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r10);

        $r12 = virtualinvoke $r11.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r2[i4] = $r12;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r4;

        $r6 = staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers: byte[] getListBytes(com.yahoo.bullet.record.BulletRecord[])>(r2);

        $r3[1] = $r6;

        r13 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r3);

        interfaceinvoke r7.<org.apache.storm.topology.IRichBolt: void execute(org.apache.storm.tuple.Tuple)>(r13);

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        i3 = i3 + i1;

        goto label1;

     label4:
        return $r0;
    }

    private static java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt, java.lang.String, int)
    {
        org.apache.storm.topology.IRichBolt r0;
        java.lang.String r1;
        int i0;
        java.util.List $r2;

        r0 := @parameter0: org.apache.storm.topology.IRichBolt;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int,int)>(r0, r1, i0, 1);

        return $r2;
    }

    private static java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt, java.lang.String)
    {
        org.apache.storm.topology.IRichBolt r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @parameter0: org.apache.storm.topology.IRichBolt;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>(r0, r1, 5);

        return $r2;
    }

    private static void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt, java.lang.String, java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        byte[] r3;
        java.lang.Object[] $r4;
        java.lang.String r5;
        com.yahoo.bullet.storm.TupleClassifier$Type $r6;
        org.apache.storm.tuple.Tuple r7;
        org.apache.storm.topology.IRichBolt r8;

        r8 := @parameter0: org.apache.storm.topology.IRichBolt;

        r5 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.List;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (byte[]) $r2;

        $r6 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r3;

        r7 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r6, $r4);

        interfaceinvoke r8.<org.apache.storm.topology.IRichBolt: void execute(org.apache.storm.tuple.Tuple)>(r7);

        goto label1;

     label2:
        return;
    }

    private static java.util.List sendSlidingWindowWithRawRecordTuplesTo(org.apache.storm.topology.IRichBolt, java.lang.String, int)
    {
        int i0, $i1, i3;
        com.yahoo.bullet.record.BulletRecord[] r0;
        long $l2;
        byte[] r2, r13;
        java.lang.Object[] $r3;
        java.lang.String r4, $r10;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5;
        org.apache.storm.tuple.Tuple r6;
        org.apache.storm.topology.IRichBolt r7;
        java.util.List $r8;
        com.yahoo.bullet.result.RecordBox $r9, $r11;
        com.yahoo.bullet.record.BulletRecord $r12;
        com.yahoo.bullet.windowing.SlidingRecord$Data $r14;
        java.io.Serializable $r15;

        r7 := @parameter0: org.apache.storm.topology.IRichBolt;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0 = newarray (com.yahoo.bullet.record.BulletRecord)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r9 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i3);

        $r11 = virtualinvoke $r9.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r10);

        $r12 = virtualinvoke $r11.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r0[i3] = $r12;

        i3 = i3 + 1;

        goto label1;

     label2:
        r13 = staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers: byte[] getListBytes(com.yahoo.bullet.record.BulletRecord[])>(r0);

        $r14 = new com.yahoo.bullet.windowing.SlidingRecord$Data;

        $i1 = lengthof r0;

        $l2 = (long) $i1;

        specialinvoke $r14.<com.yahoo.bullet.windowing.SlidingRecord$Data: void <init>(long,byte[])>($l2, r13);

        $r15 = (java.io.Serializable) $r14;

        r2 = staticinvoke <com.yahoo.bullet.common.SerializerDeserializer: byte[] toBytes(java.io.Serializable)>($r15);

        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r4;

        $r3[1] = r2;

        r6 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r3);

        interfaceinvoke r7.<org.apache.storm.topology.IRichBolt: void execute(org.apache.storm.tuple.Tuple)>(r6);

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        return $r8;
    }

    private static byte[] getGroupDataWithCount(java.lang.String, int)
    {
        java.lang.String r3;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType $r4;
        java.util.List $r5;
        int i0;
        java.util.stream.IntStream $r7;
        java.util.function.IntConsumer $r8;
        byte[] $r9;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation $r10;
        java.util.HashSet $r11;
        com.yahoo.bullet.querying.aggregations.grouping.GroupData $r12;
        java.io.Serializable $r13;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r12 = new com.yahoo.bullet.querying.aggregations.grouping.GroupData;

        $r11 = new java.util.HashSet;

        $r10 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r4 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r10.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r4, null, r3);

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        specialinvoke $r12.<com.yahoo.bullet.querying.aggregations.grouping.GroupData: void <init>(java.util.Set)>($r11);

        $r7 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_getGroupDataWithCount_0__49: java.util.function.IntConsumer bootstrap$(com.yahoo.bullet.querying.aggregations.grouping.GroupData)>($r12);

        interfaceinvoke $r7.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r8);

        $r13 = (java.io.Serializable) $r12;

        $r9 = staticinvoke <com.yahoo.bullet.common.SerializerDeserializer: byte[] toBytes(java.io.Serializable)>($r13);

        return $r9;
    }

    private static void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig, java.lang.String, java.lang.String)
    {
        com.yahoo.bullet.storm.BulletStormConfig r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.util.Map r3;
        java.lang.String r4, r5;
        java.lang.Boolean $r7;

        r0 := @parameter0: com.yahoo.bullet.storm.BulletStormConfig;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: java.lang.Object getOrDefault(java.lang.String,java.lang.Object)>("bullet.result.metadata.metrics", $r1);

        r3 = (java.util.Map) $r2;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.result.metadata.enable", $r7);

        virtualinvoke r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.result.metadata.metrics", r3);

        return;
    }

    private static com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndNoMeta()
    {
        com.yahoo.bullet.storm.BulletStormConfig $r0;
        java.lang.Integer $r2;
        java.lang.Boolean $r3;

        $r0 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.query.aggregation.raw.max.size", $r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.result.metadata.enable", $r3);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        return $r0;
    }

    private static com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndEmptyMeta()
    {
        com.yahoo.bullet.storm.BulletStormConfig $r0;
        java.lang.Integer $r2;
        java.lang.Boolean $r3;
        java.util.HashMap $r5;

        $r0 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.query.aggregation.raw.max.size", $r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.result.metadata.enable", $r3);

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        virtualinvoke $r0.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.result.metadata.metrics", $r5);

        return $r0;
    }

    private static boolean isSameResult(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z3, z4, $z5, z6, z7, z8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 3 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != $i2 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z6 = z4 & $z5;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        z7 = z6 & $z0;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        z8 = z7 & $z1;

        return z8;
    }

    private static boolean isSameMetadata(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        com.yahoo.bullet.pubsub.Metadata r1, r3;
        com.yahoo.bullet.pubsub.Metadata$Signal $r4, $r5;
        java.io.Serializable r6, r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r1 = (com.yahoo.bullet.pubsub.Metadata) r0;

        r3 = (com.yahoo.bullet.pubsub.Metadata) r2;

        $r4 = virtualinvoke r1.<com.yahoo.bullet.pubsub.Metadata: com.yahoo.bullet.pubsub.Metadata$Signal getSignal()>();

        $r5 = virtualinvoke r3.<com.yahoo.bullet.pubsub.Metadata: com.yahoo.bullet.pubsub.Metadata$Signal getSignal()>();

        if $r4 == $r5 goto label1;

        return 0;

     label1:
        r6 = virtualinvoke r1.<com.yahoo.bullet.pubsub.Metadata: java.io.Serializable getContent()>();

        r7 = virtualinvoke r3.<com.yahoo.bullet.pubsub.Metadata: java.io.Serializable getContent()>();

        if r6 == r7 goto label2;

        $z0 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    private static boolean resultTupleEquals(java.util.List, org.apache.storm.tuple.Tuple)
    {
        org.apache.storm.tuple.Tuple r0;
        java.util.List r1, r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r4;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.storm.tuple.Tuple;

        r1 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.util.List getValues()>();

        $z0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: boolean isSameResult(java.util.List,java.util.List)>(r2, r1);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        $z1 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: boolean isSameMetadata(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean metadataTupleEquals(java.util.List, org.apache.storm.tuple.Tuple)
    {
        org.apache.storm.tuple.Tuple r0;
        java.util.List r1, r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3, $r4;
        boolean $z0, $z2, z3, $z4, z5, z6;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.storm.tuple.Tuple;

        r1 = interfaceinvoke r0.<org.apache.storm.tuple.Tuple: java.util.List getValues()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != $i2 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z5 = z3 & $z4;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        z6 = z5 & $z0;

        return z6;
    }

    private boolean wasResultEmittedTo(java.lang.String, org.apache.storm.tuple.Tuple)
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        java.lang.String r1;
        com.yahoo.bullet.storm.testing.CustomCollector $r2;
        java.util.stream.Stream $r3;
        org.apache.storm.tuple.Tuple r4;
        java.util.function.Predicate $r5;
        boolean $z0;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.storm.tuple.Tuple;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>(r1);

        $r5 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_wasResultEmittedTo_1__50: java.util.function.Predicate bootstrap$(org.apache.storm.tuple.Tuple)>(r4);

        $z0 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r5);

        return $z0;
    }

    private boolean wasResultEmitted(org.apache.storm.tuple.Tuple)
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.testing.CustomCollector $r1;
        java.util.stream.Stream $r2;
        org.apache.storm.tuple.Tuple r3;
        java.util.function.Predicate $r4;
        boolean $z0;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r3 := @parameter0: org.apache.storm.tuple.Tuple;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r2 = virtualinvoke $r1.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getTuplesEmittedTo(java.lang.String)>("default");

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_wasResultEmitted_2__51: java.util.function.Predicate bootstrap$(org.apache.storm.tuple.Tuple)>(r3);

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4);

        return $z0;
    }

    private boolean wasMetadataEmittedTo(java.lang.String, org.apache.storm.tuple.Tuple)
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        java.lang.String r1;
        com.yahoo.bullet.storm.testing.CustomCollector $r2;
        java.util.stream.Stream $r3;
        org.apache.storm.tuple.Tuple r4;
        java.util.function.Predicate $r5;
        boolean $z0;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.storm.tuple.Tuple;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>(r1);

        $r5 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_wasMetadataEmittedTo_3__52: java.util.function.Predicate bootstrap$(org.apache.storm.tuple.Tuple)>(r4);

        $z0 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r5);

        return $z0;
    }

    private static com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String, com.yahoo.bullet.query.Query)
    {
        java.lang.String r0;
        com.yahoo.bullet.query.Query r1;
        com.yahoo.bullet.pubsub.PubSubMessageSerDe $r2;
        com.yahoo.bullet.pubsub.PubSubMessage $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.yahoo.bullet.query.Query;

        $r2 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessageSerDe querySerDe>;

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.pubsub.PubSubMessageSerDe: com.yahoo.bullet.pubsub.PubSubMessage toMessage(java.lang.String,com.yahoo.bullet.query.Query,java.lang.String)>(r0, r1, null);

        return $r3;
    }

    private static com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String, com.yahoo.bullet.query.Query, com.yahoo.bullet.pubsub.Metadata)
    {
        java.lang.String r0;
        com.yahoo.bullet.query.Query r1;
        com.yahoo.bullet.pubsub.PubSubMessageSerDe $r2;
        com.yahoo.bullet.pubsub.PubSubMessage r3;
        com.yahoo.bullet.pubsub.Metadata r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.yahoo.bullet.query.Query;

        r4 := @parameter2: com.yahoo.bullet.pubsub.Metadata;

        $r2 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessageSerDe querySerDe>;

        r3 = virtualinvoke $r2.<com.yahoo.bullet.pubsub.PubSubMessageSerDe: com.yahoo.bullet.pubsub.PubSubMessage toMessage(java.lang.String,com.yahoo.bullet.query.Query,java.lang.String)>(r0, r1, null);

        virtualinvoke r3.<com.yahoo.bullet.pubsub.PubSubMessage: void setMetadata(com.yahoo.bullet.pubsub.Metadata)>(r4);

        return r3;
    }

    public void setup()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3;
        com.yahoo.bullet.storm.JoinBolt $r2;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndNoMeta()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config> = $r1;

        $r2 = new com.yahoo.bullet.storm.JoinBolt;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r2.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r3);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r2);

        return;
    }

    public void setup(com.yahoo.bullet.storm.JoinBolt)
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.testing.CustomCollector $r1, $r5;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r2, $r6;
        java.util.HashMap $r3;
        com.yahoo.bullet.storm.JoinBolt r4, $r8;
        org.apache.storm.topology.IRichBolt $r7;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r4 := @parameter0: com.yahoo.bullet.storm.JoinBolt;

        $r1 = new com.yahoo.bullet.storm.testing.CustomCollector;

        specialinvoke $r1.<com.yahoo.bullet.storm.testing.CustomCollector: void <init>()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector> = $r1;

        $r2 = new com.yahoo.bullet.storm.testing.CustomTopologyContext;

        specialinvoke $r2.<com.yahoo.bullet.storm.testing.CustomTopologyContext: void <init>()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r7 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(java.util.Map,org.apache.storm.topology.IRichBolt,org.apache.storm.task.TopologyContext,org.apache.storm.task.IOutputCollector)>($r3, r4, $r6, $r5);

        $r8 = (com.yahoo.bullet.storm.JoinBolt) $r7;

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r8;

        return;
    }

    public void testOutputFields()
    {
        com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer $r0;
        com.yahoo.bullet.storm.JoinBoltTest r2;
        com.yahoo.bullet.storm.JoinBolt $r3;
        org.apache.storm.tuple.Fields $r4, $r7;
        java.lang.String[] $r5, $r8;

        r2 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer;

        specialinvoke $r0.<com.yahoo.bullet.storm.testing.CustomOutputFieldsDeclarer: void <init>()>();

        $r3 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.JoinBolt: void declareOutputFields(org.apache.storm.topology.OutputFieldsDeclarer)>($r0);

        $r4 = new org.apache.storm.tuple.Fields;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "id";

        $r5[1] = "result";

        $r5[2] = "metadata";

        specialinvoke $r4.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r5);

        $r7 = new org.apache.storm.tuple.Fields;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "id";

        $r8[1] = "metadata";

        specialinvoke $r7.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r8);

        return;
    }

    public void testUnknownTuple()
    {
        java.lang.Object[] $r0;
        com.yahoo.bullet.result.RecordBox $r1, $r2;
        com.yahoo.bullet.record.BulletRecord $r3;
        org.apache.storm.tuple.Tuple r4;
        com.yahoo.bullet.storm.JoinBoltTest r5;
        com.yahoo.bullet.storm.JoinBolt $r6;
        com.yahoo.bullet.storm.testing.CustomCollector $r7;
        boolean $z0;

        r5 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r2 = virtualinvoke $r1.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("a", "b");

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r0[0] = $r3;

        r4 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeRawTuple(java.lang.String,java.lang.String,java.lang.Object[])>("DataSource", "default", $r0);

        $r6 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r6.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r4);

        $r7 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $z0 = virtualinvoke $r7.<com.yahoo.bullet.storm.testing.CustomCollector: boolean wasAcked(org.apache.storm.tuple.Tuple)>(r4);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        return;
    }

    public void testJoining()
    {
        java.lang.Object[] $r0, $r10, $r16;
        com.yahoo.bullet.storm.TupleClassifier$Type $r1, $r11, $r19;
        java.lang.Integer $r2;
        com.yahoo.bullet.query.Query $r3;
        com.yahoo.bullet.pubsub.PubSubMessage $r4;
        org.apache.storm.tuple.Tuple r5;
        com.yahoo.bullet.storm.JoinBoltTest r6;
        com.yahoo.bullet.storm.JoinBolt $r7, $r8;
        java.util.List r9;
        com.yahoo.bullet.result.Clip $r12;
        java.lang.String $r13;
        com.yahoo.bullet.pubsub.Metadata $r14, $r17;
        com.yahoo.bullet.pubsub.Metadata$Signal $r18;
        com.yahoo.bullet.storm.testing.CustomCollector $r21, $r23;
        java.util.stream.Stream $r22, $r24;
        long $l0, $l1;

        r6 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = "42";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r3 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r2);

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r3);

        $r0[1] = $r4;

        r5 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r1, $r0);

        $r7 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r5);

        $r8 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r9 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String)>($r8, "42");

        $r11 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "42";

        $r12 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r9);

        $r13 = virtualinvoke $r12.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r10[1] = $r13;

        $r14 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r10[2] = $r14;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r11, $r10);

        $r19 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "42";

        $r17 = new com.yahoo.bullet.pubsub.Metadata;

        $r18 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r17.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r18, null);

        $r16[1] = $r17;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r19, $r16);

        $r21 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r22 = virtualinvoke $r21.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r22.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r23 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r24 = virtualinvoke $r23.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r24.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testFailJoiningForNoQuery()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBolt $r1;
        java.util.List r2;
        java.lang.Object[] $r3;
        com.yahoo.bullet.storm.TupleClassifier$Type $r4;
        com.yahoo.bullet.result.Clip $r5;
        java.lang.String $r6;
        com.yahoo.bullet.pubsub.Metadata $r7;
        org.apache.storm.tuple.Tuple r8;
        boolean $z0;
        com.yahoo.bullet.storm.testing.CustomCollector $r9;
        int $i0;
        long $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r2 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String)>($r1, "42");

        $r4 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "42";

        $r5 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r2);

        $r6 = virtualinvoke $r5.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r3[1] = $r6;

        $r7 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r3[2] = $r7;

        r8 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r4, $r3);

        $z0 = specialinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: boolean wasResultEmitted(org.apache.storm.tuple.Tuple)>(r8);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $r9 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r9.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        return;
    }

    public void testQueryNotDoneButIsDurationBased()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.JoinBolt $r3, $r10, $r11, $r16, $r23;
        java.lang.Object[] $r4, $r13, $r17, $r24;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5, $r14, $r18, $r27;
        java.lang.Integer $r6;
        com.yahoo.bullet.query.Query $r7;
        com.yahoo.bullet.pubsub.PubSubMessage $r8;
        org.apache.storm.tuple.Tuple r9, r15;
        java.util.List r12;
        com.yahoo.bullet.result.Clip $r19;
        java.lang.String $r20;
        com.yahoo.bullet.pubsub.Metadata $r21, $r25;
        com.yahoo.bullet.pubsub.Metadata$Signal $r26;
        com.yahoo.bullet.storm.testing.CustomCollector $r29, $r31;
        java.util.stream.Stream $r30, $r32;
        long $l0, $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r2, 4, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r3);

        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "42";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r7 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r6);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r7);

        $r4[1] = $r8;

        r9 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r4);

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r9);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r11, "42", 4);

        $r14 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r13 = newarray (java.lang.Object)[0];

        r15 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r14, $r13);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r16.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r18 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = "42";

        $r19 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r12);

        $r20 = virtualinvoke $r19.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r17[1] = $r20;

        $r21 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r17[2] = $r21;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r18, $r17);

        $r23 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r23.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r27 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = "42";

        $r25 = new com.yahoo.bullet.pubsub.Metadata;

        $r26 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r25.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r26, null);

        $r24[1] = $r25;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r27, $r24);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r30 = virtualinvoke $r29.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r30.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r31 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r32 = virtualinvoke $r31.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r32.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testJoiningAfterLateArrivalMakingQueryFinishBeforeTickout()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.JoinBolt $r3, $r10, $r11, $r21, $r22;
        java.lang.Object[] $r4, $r13, $r18, $r24, $r29;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5, $r14, $r19, $r25, $r32;
        java.lang.Integer $r6;
        com.yahoo.bullet.query.Query $r7;
        com.yahoo.bullet.pubsub.PubSubMessage $r8;
        org.apache.storm.tuple.Tuple r9, r20;
        java.util.List r12, r23;
        com.yahoo.bullet.result.Clip $r15, $r26;
        java.lang.String $r16, $r27;
        com.yahoo.bullet.pubsub.Metadata $r17, $r28, $r30;
        com.yahoo.bullet.pubsub.Metadata$Signal $r31;
        com.yahoo.bullet.storm.testing.CustomCollector $r34, $r36;
        java.util.stream.Stream $r35, $r37;
        long $l0, $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r2, 2, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r3);

        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "42";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r7 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r6);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r7);

        $r4[1] = $r8;

        r9 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r4);

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r9);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r11, "42", 2);

        $r14 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = "42";

        $r15 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r12);

        $r16 = virtualinvoke $r15.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r13[1] = $r16;

        $r17 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r13[2] = $r17;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r14, $r13);

        $r19 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r18 = newarray (java.lang.Object)[0];

        r20 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r19, $r18);

        $r21 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r21.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r20);

        $r22 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r23 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r22, "42", 1);

        interfaceinvoke r12.<java.util.List: boolean addAll(java.util.Collection)>(r23);

        $r25 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r24 = newarray (java.lang.Object)[3];

        $r24[0] = "42";

        $r26 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r12);

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r24[1] = $r27;

        $r28 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r24[2] = $r28;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r25, $r24);

        $r32 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r29 = newarray (java.lang.Object)[2];

        $r29[0] = "42";

        $r30 = new com.yahoo.bullet.pubsub.Metadata;

        $r31 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r30.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r31, null);

        $r29[1] = $r30;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r32, $r29);

        $r34 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r35 = virtualinvoke $r34.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r35.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r36 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r37 = virtualinvoke $r36.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r37.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testJoiningAfterLateArrivalWithoutFinishingQueryBeforeTickout()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.JoinBolt $r3, $r10, $r11, $r16, $r17, $r19, $r34;
        java.lang.Object[] $r4, $r13, $r20, $r25;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5, $r14, $r21, $r28;
        java.lang.Integer $r6;
        com.yahoo.bullet.query.Query $r7;
        com.yahoo.bullet.pubsub.PubSubMessage $r8;
        org.apache.storm.tuple.Tuple r9, r15;
        java.util.List r12, r18;
        com.yahoo.bullet.result.Clip $r22;
        java.lang.String $r23;
        com.yahoo.bullet.pubsub.Metadata $r24, $r26;
        com.yahoo.bullet.pubsub.Metadata$Signal $r27;
        com.yahoo.bullet.storm.testing.CustomCollector $r30, $r32, $r35;
        java.util.stream.Stream $r31, $r33;
        long $l0, $l1, $l3;
        int $i2, i4;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r2, 2, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r3);

        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "42";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r7 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r6);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r7);

        $r4[1] = $r8;

        r9 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r4);

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r9);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r11, "42", 2);

        $r14 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r13 = newarray (java.lang.Object)[0];

        r15 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r14, $r13);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r16.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r17 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r18 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r17, "42", 2);

        interfaceinvoke r12.<java.util.List: boolean addAll(java.util.Collection)>(r18);

        i4 = 0;

     label1:
        if i4 >= 2 goto label2;

        $r34 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r34.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r35 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r35.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r19 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r19.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r21 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r20 = newarray (java.lang.Object)[3];

        $r20[0] = "42";

        $r22 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r12);

        $r23 = virtualinvoke $r22.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r20[1] = $r23;

        $r24 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r20[2] = $r24;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r21, $r20);

        $r28 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = "42";

        $r26 = new com.yahoo.bullet.pubsub.Metadata;

        $r27 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r26.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r27, null);

        $r25[1] = $r26;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r28, $r25);

        $r30 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r31 = virtualinvoke $r30.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r31.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r33 = virtualinvoke $r32.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r33.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testMultiJoining()
    {
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r0;
        com.yahoo.bullet.storm.JoinBoltTest r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.JoinBolt $r4, $r11, $r18, $r19, $r21, $r38, $r39, $r52;
        java.lang.Object[] $r5, $r12, $r23, $r29, $r35, $r40, $r44;
        com.yahoo.bullet.storm.TupleClassifier$Type $r6, $r13, $r24, $r30, $r36, $r43, $r47;
        java.lang.Integer $r7, $r14;
        com.yahoo.bullet.query.Query $r8, $r15;
        com.yahoo.bullet.pubsub.PubSubMessage $r9, $r16;
        org.apache.storm.tuple.Tuple r10, r17, r28, r34, r37;
        java.util.List r20, r22;
        com.yahoo.bullet.result.Clip $r25, $r31;
        java.lang.String $r26, $r32;
        com.yahoo.bullet.pubsub.Metadata $r27, $r33, $r41, $r45;
        boolean $z1, $z2, $z3, $z4;
        com.yahoo.bullet.pubsub.Metadata$Signal $r42, $r46;
        com.yahoo.bullet.storm.testing.CustomCollector $r48, $r50;
        java.util.stream.Stream $r49, $r51;
        long $l0, $l1;
        int i2;

        r1 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r2 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r0.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r2, 2, 1);

        r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r0;

        $r4 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r1.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r4);

        $r6 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "42";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r8 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r7);

        $r9 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r8);

        $r5[1] = $r9;

        r10 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r6, $r5);

        $r11 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r11.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r10);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: boolean access$002(com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt,boolean)>($r0, 0);

        $r13 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "43";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r15 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r14);

        $r16 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("43", $r15);

        $r12[1] = $r16;

        r17 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r13, $r12);

        $r18 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r18.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r17);

        $r19 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r20 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r19, "42", 2);

        $r21 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r22 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r21, "43", 3);

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = "43";

        $r25 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r22);

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r23[1] = $r26;

        $r27 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r23[2] = $r27;

        r28 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r24, $r23);

        $r30 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r29 = newarray (java.lang.Object)[3];

        $r29[0] = "42";

        $r31 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r20);

        $r32 = virtualinvoke $r31.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r29[1] = $r32;

        $r33 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r29[2] = $r33;

        r34 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r30, $r29);

        $z1 = specialinvoke r1.<com.yahoo.bullet.storm.JoinBoltTest: boolean wasResultEmitted(org.apache.storm.tuple.Tuple)>(r28);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z2 = specialinvoke r1.<com.yahoo.bullet.storm.JoinBoltTest: boolean wasResultEmitted(org.apache.storm.tuple.Tuple)>(r34);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $r36 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r35 = newarray (java.lang.Object)[0];

        r37 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r36, $r35);

        $r38 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r38.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r37);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r52 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r52.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r37);

        $z4 = specialinvoke r1.<com.yahoo.bullet.storm.JoinBoltTest: boolean wasResultEmitted(org.apache.storm.tuple.Tuple)>(r34);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r39 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r39.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r37);

        $z3 = specialinvoke r1.<com.yahoo.bullet.storm.JoinBoltTest: boolean wasResultEmitted(org.apache.storm.tuple.Tuple)>(r34);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r43 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r40 = newarray (java.lang.Object)[2];

        $r40[0] = "42";

        $r41 = new com.yahoo.bullet.pubsub.Metadata;

        $r42 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r41.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r42, null);

        $r40[1] = $r41;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r43, $r40);

        $r47 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = "43";

        $r45 = new com.yahoo.bullet.pubsub.Metadata;

        $r46 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r45.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r46, null);

        $r44[1] = $r45;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r47, $r44);

        $r48 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r49 = virtualinvoke $r48.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r49.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 2L);

        $r50 = r1.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r51 = virtualinvoke $r50.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r51.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        return;
    }

    public void testErrorEmittedProperly()
    {
        com.yahoo.bullet.pubsub.PubSubMessage r0;
        byte[] $r1;
        java.lang.Object[] $r2, $r11;
        com.yahoo.bullet.storm.TupleClassifier$Type $r3;
        org.apache.storm.tuple.Tuple r4, $r15;
        com.yahoo.bullet.storm.JoinBoltTest r5;
        com.yahoo.bullet.storm.JoinBolt $r6;
        com.yahoo.bullet.storm.testing.CustomCollector $r7, $r17;
        int $i0;
        long $l1;
        com.yahoo.bullet.common.BulletError r8;
        com.yahoo.bullet.common.BulletError[] $r9;
        com.yahoo.bullet.result.Meta r10;
        com.yahoo.bullet.result.Clip $r12;
        java.lang.String $r13;
        com.yahoo.bullet.pubsub.Metadata $r14;
        java.util.Optional $r18;
        java.lang.Object $r19;
        java.util.List r20;

        r5 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", null);

        $r1 = newarray (byte)[0];

        virtualinvoke r0.<com.yahoo.bullet.pubsub.PubSubMessage: void setContent(java.io.Serializable)>($r1);

        $r3 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "42";

        $r2[1] = r0;

        r4 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r3, $r2);

        $r6 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r6.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r4);

        $r7 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r7.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        r8 = staticinvoke <com.yahoo.bullet.common.BulletError: com.yahoo.bullet.common.BulletError makeError(java.lang.String,java.lang.String)>("java.lang.NullPointerException", "Error initializing query");

        $r9 = newarray (com.yahoo.bullet.common.BulletError)[1];

        $r9[0] = r8;

        r10 = staticinvoke <com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta of(com.yahoo.bullet.common.BulletError[])>($r9);

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "42";

        $r12 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(com.yahoo.bullet.result.Meta)>(r10);

        $r13 = virtualinvoke $r12.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r11[1] = $r13;

        $r14 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata FAILED>;

        $r11[2] = $r14;

        $r15 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(java.lang.Object[])>($r11);

        interfaceinvoke $r15.<org.apache.storm.tuple.Tuple: java.util.List getValues()>();

        $r17 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r18 = virtualinvoke $r17.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.Optional getNthTupleEmittedTo(java.lang.String,int)>("default", 1);

        $r19 = virtualinvoke $r18.<java.util.Optional: java.lang.Object get()>();

        r20 = (java.util.List) $r19;

        return;
    }

    public void testQueryIdentifierMetadata()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6, $r9;
        com.yahoo.bullet.result.Meta$Concept $r2, $r5;
        java.lang.String $r4, $r7, $r27;
        com.yahoo.bullet.storm.JoinBolt $r8, $r16, $r17;
        java.lang.Object[] $r10, $r23, $r30;
        com.yahoo.bullet.storm.TupleClassifier$Type $r11, $r24, $r33;
        java.lang.Integer $r12;
        com.yahoo.bullet.query.Query $r13;
        com.yahoo.bullet.pubsub.PubSubMessage $r14;
        org.apache.storm.tuple.Tuple r15;
        java.util.List r18;
        com.yahoo.bullet.result.Meta $r19;
        java.util.Map $r21;
        com.yahoo.bullet.result.Clip $r25, $r26;
        com.yahoo.bullet.pubsub.Metadata $r28, $r31;
        com.yahoo.bullet.pubsub.Metadata$Signal $r32;
        com.yahoo.bullet.storm.testing.CustomCollector $r35, $r37;
        java.util.stream.Stream $r36, $r38;
        long $l0, $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndEmptyMeta()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_METADATA>;

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r3, $r4, "meta");

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r5 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_ID>;

        $r7 = virtualinvoke $r5.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r6, $r7, "id");

        $r8 = new com.yahoo.bullet.storm.JoinBolt;

        $r9 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r8.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r9);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r8);

        $r11 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = "42";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r13 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r12);

        $r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r13);

        $r10[1] = $r14;

        r15 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r11, $r10);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r16.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r17 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r18 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String)>($r17, "42");

        $r19 = new com.yahoo.bullet.result.Meta;

        specialinvoke $r19.<com.yahoo.bullet.result.Meta: void <init>()>();

        $r21 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("id", "42");

        virtualinvoke $r19.<com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta add(java.lang.String,java.lang.Object)>("meta", $r21);

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = "42";

        $r25 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r18);

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip add(com.yahoo.bullet.result.Meta)>($r19);

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r23[1] = $r27;

        $r28 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r23[2] = $r28;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r24, $r23);

        $r33 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = "42";

        $r31 = new com.yahoo.bullet.pubsub.Metadata;

        $r32 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r31.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r32, null);

        $r30[1] = $r31;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r33, $r30);

        $r35 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r36 = virtualinvoke $r35.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r36.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r37 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r38 = virtualinvoke $r37.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r38.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testUnknownConceptMetadata()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6, $r8, $r10;
        com.yahoo.bullet.result.Meta$Concept $r2, $r5;
        java.lang.String $r4, $r7, $r28;
        com.yahoo.bullet.storm.JoinBolt $r9, $r17, $r18;
        java.lang.Object[] $r11, $r24, $r31;
        com.yahoo.bullet.storm.TupleClassifier$Type $r12, $r25, $r34;
        java.lang.Integer $r13;
        com.yahoo.bullet.query.Query $r14;
        com.yahoo.bullet.pubsub.PubSubMessage $r15;
        org.apache.storm.tuple.Tuple r16;
        java.util.List r19;
        com.yahoo.bullet.result.Meta $r20;
        java.util.Map $r22;
        com.yahoo.bullet.result.Clip $r26, $r27;
        com.yahoo.bullet.pubsub.Metadata $r29, $r32;
        com.yahoo.bullet.pubsub.Metadata$Signal $r33;
        com.yahoo.bullet.storm.testing.CustomCollector $r36, $r38;
        java.util.stream.Stream $r37, $r39;
        long $l0, $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndEmptyMeta()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_METADATA>;

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r3, $r4, "meta");

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r5 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_ID>;

        $r7 = virtualinvoke $r5.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r6, $r7, "id");

        $r8 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r8, "foo", "bar");

        $r9 = new com.yahoo.bullet.storm.JoinBolt;

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r9.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r10);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r9);

        $r12 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "42";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r14 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r13);

        $r15 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r14);

        $r11[1] = $r15;

        r16 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r12, $r11);

        $r17 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r17.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r16);

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r19 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String)>($r18, "42");

        $r20 = new com.yahoo.bullet.result.Meta;

        specialinvoke $r20.<com.yahoo.bullet.result.Meta: void <init>()>();

        $r22 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("id", "42");

        virtualinvoke $r20.<com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta add(java.lang.String,java.lang.Object)>("meta", $r22);

        $r25 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r24 = newarray (java.lang.Object)[3];

        $r24[0] = "42";

        $r26 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r19);

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip add(com.yahoo.bullet.result.Meta)>($r20);

        $r28 = virtualinvoke $r27.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r24[1] = $r28;

        $r29 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r24[2] = $r29;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r25, $r24);

        $r34 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r31 = newarray (java.lang.Object)[2];

        $r31[0] = "42";

        $r32 = new com.yahoo.bullet.pubsub.Metadata;

        $r33 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r32.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r33, null);

        $r31[1] = $r32;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r34, $r31);

        $r36 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r37 = virtualinvoke $r36.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r37.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r38 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r39 = virtualinvoke $r38.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r39.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testMultipleMeta()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6, $r9, $r12, $r15, $r18, $r21;
        com.yahoo.bullet.result.Meta$Concept $r2, $r5, $r8, $r11, $r14, $r17;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r19, r40, $r46, r50, r52, r58, r60, r62, $r65;
        com.yahoo.bullet.storm.JoinBolt $r20, $r30, $r31;
        long l0, l1, $l2, $l3, l4, l5;
        java.lang.Integer $r22;
        com.yahoo.bullet.query.Query r23;
        java.lang.Object[] $r24;
        com.yahoo.bullet.pubsub.Metadata $r25;
        com.yahoo.bullet.pubsub.Metadata$Signal $r26;
        com.yahoo.bullet.storm.TupleClassifier$Type $r27;
        com.yahoo.bullet.pubsub.PubSubMessage $r28;
        org.apache.storm.tuple.Tuple r29;
        java.util.List r32;
        com.yahoo.bullet.storm.testing.CustomCollector $r33, $r35, $r37;
        java.util.stream.Stream $r34, $r36;
        java.util.Optional $r38;
        java.lang.Object $r39;
        com.google.gson.JsonParser $r41;
        com.google.gson.JsonElement $r43, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r64;
        com.google.gson.JsonObject r44, r48, r54, r56;
        com.yahoo.bullet.result.Clip $r45;
        byte $b6, $b7, $b8;
        boolean $z0, $z1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig configWithRawMaxAndEmptyMeta()>();

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_METADATA>;

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r3, $r4, "meta");

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r5 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_ID>;

        $r7 = virtualinvoke $r5.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r6, $r7, "id");

        $r9 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r8 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_OBJECT>;

        $r10 = virtualinvoke $r8.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r9, $r10, "query object");

        $r12 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r11 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_STRING>;

        $r13 = virtualinvoke $r11.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r12, $r13, "query string");

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r14 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_RECEIVE_TIME>;

        $r16 = virtualinvoke $r14.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r15, $r16, "created");

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r17 = <com.yahoo.bullet.result.Meta$Concept: com.yahoo.bullet.result.Meta$Concept QUERY_FINISH_TIME>;

        $r19 = virtualinvoke $r17.<com.yahoo.bullet.result.Meta$Concept: java.lang.String getName()>();

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void enableMetadataInConfig(com.yahoo.bullet.storm.BulletStormConfig,java.lang.String,java.lang.String)>($r18, $r19, "finished");

        $r20 = new com.yahoo.bullet.storm.JoinBolt;

        $r21 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r20.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r21);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r20);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r23 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r22);

        $r27 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = "42";

        $r25 = new com.yahoo.bullet.pubsub.Metadata;

        $r26 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r25.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r26, "foo");

        $r28 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query,com.yahoo.bullet.pubsub.Metadata)>("42", r23, $r25);

        $r24[1] = $r28;

        r29 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r27, $r24);

        $r30 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r30.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r29);

        $r31 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r32 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String)>($r31, "42");

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r33 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r34 = virtualinvoke $r33.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l2 = interfaceinvoke $r34.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, 1L);

        $r35 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r36 = virtualinvoke $r35.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l3 = interfaceinvoke $r36.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 1L);

        $r37 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r38 = virtualinvoke $r37.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.Optional getMthElementFromNthTupleEmittedTo(java.lang.String,int,int)>("default", 1, 1);

        $r39 = virtualinvoke $r38.<java.util.Optional: java.lang.Object get()>();

        r40 = (java.lang.String) $r39;

        $r41 = new com.google.gson.JsonParser;

        specialinvoke $r41.<com.google.gson.JsonParser: void <init>()>();

        $r43 = virtualinvoke $r41.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r40);

        r44 = virtualinvoke $r43.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r45 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r32);

        $r46 = virtualinvoke $r45.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r47 = virtualinvoke $r41.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($r46);

        r48 = virtualinvoke $r47.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r49 = virtualinvoke r44.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("records");

        r50 = virtualinvoke $r49.<com.google.gson.JsonElement: java.lang.String toString()>();

        $r51 = virtualinvoke r48.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("records");

        r52 = virtualinvoke $r51.<com.google.gson.JsonElement: java.lang.String toString()>();

        staticinvoke <com.yahoo.bullet.storm.testing.TestHelpers: void assertJSONEquals(java.lang.String,java.lang.String)>(r50, r52);

        $r53 = virtualinvoke r44.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("meta");

        r54 = virtualinvoke $r53.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r55 = virtualinvoke r54.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("meta");

        r56 = virtualinvoke $r55.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r57 = virtualinvoke r56.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("id");

        r58 = virtualinvoke $r57.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        $r59 = virtualinvoke r56.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("query object");

        r60 = virtualinvoke $r59.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        $r61 = virtualinvoke r56.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("query string");

        r62 = virtualinvoke $r61.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        $r63 = virtualinvoke r56.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("created");

        l4 = virtualinvoke $r63.<com.google.gson.JsonElement: long getAsLong()>();

        $r64 = virtualinvoke r56.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("finished");

        l5 = virtualinvoke $r64.<com.google.gson.JsonElement: long getAsLong()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r58, "42");

        $r65 = virtualinvoke r23.<com.yahoo.bullet.query.Query: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r60, $r65);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r62, "foo");

        $b6 = l4 cmp l5;

        if $b6 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $b7 = l4 cmp l0;

        if $b7 < 0 goto label3;

        $b8 = l4 cmp l1;

        if $b8 > 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testBadBytes()
    {
        com.yahoo.bullet.pubsub.PubSubMessage r0;
        byte[] $r1;
        java.lang.Object[] $r2;
        com.yahoo.bullet.storm.TupleClassifier$Type $r3;
        org.apache.storm.tuple.Tuple r4;
        com.yahoo.bullet.storm.JoinBoltTest r5;
        com.yahoo.bullet.storm.JoinBolt $r6;
        com.yahoo.bullet.storm.testing.CustomCollector $r7, $r9;
        java.util.stream.Stream $r8, $r10;
        long $l0, $l1;

        r5 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", null);

        $r1 = newarray (byte)[0];

        virtualinvoke r0.<com.yahoo.bullet.pubsub.PubSubMessage: void setContent(java.io.Serializable)>($r1);

        $r3 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "42";

        $r2[1] = r0;

        r4 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r3, $r2);

        $r6 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r6.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r4);

        $r7 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r8 = virtualinvoke $r7.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r8.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r9 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r10 = virtualinvoke $r9.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r10.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        return;
    }

    public void testErrorInQueryWithoutMetadata()
    {
        java.lang.Object[] $r0, $r12;
        com.yahoo.bullet.storm.TupleClassifier$Type $r1;
        java.lang.Integer $r2;
        com.yahoo.bullet.query.Query $r3;
        com.yahoo.bullet.pubsub.PubSubMessage $r4;
        org.apache.storm.tuple.Tuple r5, $r16;
        com.yahoo.bullet.storm.JoinBoltTest r6;
        com.yahoo.bullet.storm.JoinBolt $r7;
        com.yahoo.bullet.storm.testing.CustomCollector $r8, $r18, $r22, $r24;
        int $i0, $i3;
        long $l1, $l2, $l4;
        com.yahoo.bullet.common.BulletError r9;
        com.yahoo.bullet.common.BulletError[] $r10;
        com.yahoo.bullet.result.Meta r11;
        com.yahoo.bullet.result.Clip $r13;
        java.lang.String $r14;
        com.yahoo.bullet.pubsub.Metadata $r15;
        java.util.Optional $r19;
        java.lang.Object $r20;
        java.util.List r21;
        java.util.stream.Stream $r23;

        r6 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = "42";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r3 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r2);

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query,com.yahoo.bullet.pubsub.Metadata)>("42", $r3, null);

        $r0[1] = $r4;

        r5 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r1, $r0);

        $r7 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r5);

        $r8 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r8.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        r9 = staticinvoke <com.yahoo.bullet.common.BulletError: com.yahoo.bullet.common.BulletError makeError(java.lang.String,java.lang.String)>("java.lang.NullPointerException", "Error initializing query");

        $r10 = newarray (com.yahoo.bullet.common.BulletError)[1];

        $r10[0] = r9;

        r11 = staticinvoke <com.yahoo.bullet.result.Meta: com.yahoo.bullet.result.Meta of(com.yahoo.bullet.common.BulletError[])>($r10);

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = "42";

        $r13 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(com.yahoo.bullet.result.Meta)>(r11);

        $r14 = virtualinvoke $r13.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r12[1] = $r14;

        $r15 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata FAILED>;

        $r12[2] = $r15;

        $r16 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(java.lang.Object[])>($r12);

        interfaceinvoke $r16.<org.apache.storm.tuple.Tuple: java.util.List getValues()>();

        $r18 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r19 = virtualinvoke $r18.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.Optional getNthTupleEmittedTo(java.lang.String,int)>("default", 1);

        $r20 = virtualinvoke $r19.<java.util.Optional: java.lang.Object get()>();

        r21 = (java.util.List) $r20;

        $r22 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r23 = virtualinvoke $r22.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l2 = interfaceinvoke $r23.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, 1L);

        $r24 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i3 = virtualinvoke $r24.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l4 = (long) $i3;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, 1L);

        return;
    }

    public void testRawQueryDoneButNotTimedOutWithExcessRecords()
    {
        java.lang.Object[] $r0, $r11, $r17;
        com.yahoo.bullet.storm.TupleClassifier$Type $r1, $r12, $r20;
        java.lang.Integer $r2;
        com.yahoo.bullet.query.Query $r3;
        com.yahoo.bullet.pubsub.PubSubMessage $r4;
        org.apache.storm.tuple.Tuple r5;
        com.yahoo.bullet.storm.JoinBoltTest r6;
        com.yahoo.bullet.storm.JoinBolt $r7, $r8;
        java.util.List r9, r10;
        com.yahoo.bullet.result.Clip $r13;
        java.lang.String $r14;
        com.yahoo.bullet.pubsub.Metadata $r15, $r18;
        com.yahoo.bullet.pubsub.Metadata$Signal $r19;
        com.yahoo.bullet.storm.testing.CustomCollector $r22, $r24;
        java.util.stream.Stream $r23, $r25;
        long $l0, $l1;

        r6 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = "42";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r3 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r2);

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r3);

        $r0[1] = $r4;

        r5 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r1, $r0);

        $r7 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r5);

        $r8 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r9 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int,int)>($r8, "42", 5, 3);

        r10 = interfaceinvoke r9.<java.util.List: java.util.List subList(int,int)>(0, 5);

        $r12 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "42";

        $r13 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r10);

        $r14 = virtualinvoke $r13.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r11[1] = $r14;

        $r15 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r11[2] = $r15;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r12, $r11);

        $r20 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "42";

        $r18 = new com.yahoo.bullet.pubsub.Metadata;

        $r19 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r18.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r19, null);

        $r17[1] = $r18;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r20, $r17);

        $r22 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r23 = virtualinvoke $r22.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r23.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r24 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r25 = virtualinvoke $r24.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r25.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testCounting()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.JoinBolt $r3, $r15, $r32, $r33, $r42;
        java.lang.Object[] $r4, $r11, $r23, $r29, $r34;
        java.util.List $r5, $r9, r22;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation $r6;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType $r7;
        com.yahoo.bullet.query.expressions.Operation $r8;
        com.yahoo.bullet.query.Query r10;
        com.yahoo.bullet.storm.TupleClassifier$Type $r12, $r24, $r30, $r37;
        com.yahoo.bullet.pubsub.PubSubMessage $r13;
        org.apache.storm.tuple.Tuple r14, r31;
        java.util.stream.IntStream $r16;
        java.util.function.IntConsumer $r17;
        com.yahoo.bullet.result.RecordBox $r18, $r20;
        java.lang.Long $r19;
        com.yahoo.bullet.record.BulletRecord $r21;
        com.yahoo.bullet.result.Clip $r25;
        java.lang.String $r26;
        com.yahoo.bullet.pubsub.Metadata $r27, $r35;
        com.yahoo.bullet.pubsub.Metadata$Signal $r36;
        com.yahoo.bullet.storm.testing.CustomCollector $r38, $r40;
        java.util.stream.Stream $r39, $r41;
        long $l0, $l1;
        int i2;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r2 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r2, 5, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r1;

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r3);

        $r4 = newarray (java.io.Serializable)[2];

        $r4[0] = "1";

        $r4[1] = "2";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r8 = <com.yahoo.bullet.query.expressions.Operation: com.yahoo.bullet.query.expressions.Operation EQUALS_ANY>;

        $r6 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r7 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r6.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r7, null, "cnt");

        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r6);

        r10 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeGroupAllFieldFilterQuery(java.lang.String,java.util.List,com.yahoo.bullet.query.expressions.Operation,java.util.List)>("timestamp", $r5, $r8, $r9);

        $r12 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "42";

        $r13 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r10);

        $r11[1] = $r13;

        r14 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r12, $r11);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r15.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r14);

        $r16 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(1, 6);

        $r17 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testCounting_4__54: java.util.function.IntConsumer bootstrap$(com.yahoo.bullet.storm.JoinBoltTest)>(r0);

        interfaceinvoke $r16.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r17);

        $r18 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(15L);

        $r20 = virtualinvoke $r18.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("cnt", $r19);

        $r21 = virtualinvoke $r20.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r22 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r21);

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = "42";

        $r25 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r22);

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r23[1] = $r26;

        $r27 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r23[2] = $r27;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r24, $r23);

        $r30 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r29 = newarray (java.lang.Object)[0];

        r31 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r30, $r29);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r32.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r31);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r42 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r42.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r31);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r33 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r33.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r31);

        $r37 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r34 = newarray (java.lang.Object)[2];

        $r34[0] = "42";

        $r35 = new com.yahoo.bullet.pubsub.Metadata;

        $r36 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r35.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r36, null);

        $r34[1] = $r35;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r37, $r34);

        $r38 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r39 = virtualinvoke $r38.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r39.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r40 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r41 = virtualinvoke $r40.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r41.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testCountDistinct()
    {
        com.yahoo.bullet.common.BulletConfig r0;
        java.util.List $r1, $r9, $r23, $r30, r35;
        java.util.Map$Entry[] $r2, $r10;
        java.util.stream.IntStream $r3, $r11;
        java.util.function.IntFunction $r4, $r12;
        java.util.stream.Stream $r5, $r13, $r52, $r54;
        java.util.function.Consumer $r7, $r15;
        byte[] r8, r16;
        com.yahoo.bullet.storm.JoinBoltTest r17;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r18;
        com.yahoo.bullet.storm.BulletStormConfig $r19;
        com.yahoo.bullet.storm.JoinBolt $r20, $r27, $r29, $r45, $r46, $r55;
        java.lang.Object[] $r21, $r36, $r42, $r47;
        com.yahoo.bullet.storm.TupleClassifier$Type $r22, $r37, $r43, $r50;
        com.yahoo.bullet.query.Query $r24;
        com.yahoo.bullet.pubsub.PubSubMessage $r25;
        org.apache.storm.tuple.Tuple r26, r44;
        byte[][] $r28;
        com.yahoo.bullet.result.RecordBox $r31, $r33;
        java.lang.Long $r32;
        com.yahoo.bullet.record.BulletRecord $r34;
        com.yahoo.bullet.result.Clip $r38;
        java.lang.String $r39;
        com.yahoo.bullet.pubsub.Metadata $r40, $r48;
        com.yahoo.bullet.pubsub.Metadata$Signal $r49;
        com.yahoo.bullet.storm.testing.CustomCollector $r51, $r53;
        long $l0, $l1;
        com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy r56, r57;
        int i2;

        r17 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r0 = staticinvoke <com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategyTest: com.yahoo.bullet.common.BulletConfig makeConfiguration(int,int)>(8, 512);

        $r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("field");

        $r2 = newarray (java.util.Map$Entry)[0];

        r56 = staticinvoke <com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy makeCountDistinct(com.yahoo.bullet.common.BulletConfig,java.util.List,java.lang.String,java.util.Map$Entry[])>(r0, $r1, "count", $r2);

        $r3 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, 256);

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testCountDistinct_5__55: java.util.function.IntFunction bootstrap$()>();

        $r5 = interfaceinvoke $r3.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r4);

        virtualinvoke r56.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__61: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy)>(r56);

        interfaceinvoke $r5.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r7);

        r8 = virtualinvoke r56.<com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy: byte[] getData()>();

        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("field");

        $r10 = newarray (java.util.Map$Entry)[0];

        r57 = staticinvoke <com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy makeCountDistinct(com.yahoo.bullet.common.BulletConfig,java.util.List,java.lang.String,java.util.Map$Entry[])>(r0, $r9, "count", $r10);

        $r11 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(128, 256);

        $r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testCountDistinct_6__63: java.util.function.IntFunction bootstrap$()>();

        $r13 = interfaceinvoke $r11.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r12);

        virtualinvoke r57.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__67: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy)>(r57);

        interfaceinvoke $r13.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r15);

        r16 = virtualinvoke r57.<com.yahoo.bullet.querying.aggregations.ThetaSketchingStrategy: byte[] getData()>();

        $r18 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r19 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r18.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r19, 2, 1);

        r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r18;

        $r20 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r17.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r20);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = "42";

        $r23 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("field");

        $r24 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeCountDistinctQuery(java.util.List,java.lang.String)>($r23, "count");

        $r25 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r24);

        $r21[1] = $r25;

        r26 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r21);

        $r27 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r27.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r26);

        $r29 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r28 = newarray (byte[])[2];

        $r28[0] = r8;

        $r28[1] = r16;

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r28);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r29, "42", $r30);

        $r31 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(256L);

        $r33 = virtualinvoke $r31.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("count", $r32);

        $r34 = virtualinvoke $r33.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r35 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r34);

        $r37 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r36 = newarray (java.lang.Object)[3];

        $r36[0] = "42";

        $r38 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r35);

        $r39 = virtualinvoke $r38.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r36[1] = $r39;

        $r40 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r36[2] = $r40;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r37, $r36);

        $r43 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r42 = newarray (java.lang.Object)[0];

        r44 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r43, $r42);

        $r45 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r45.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r44);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r55 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r55.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r44);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r46 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r46.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r44);

        $r50 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r47 = newarray (java.lang.Object)[2];

        $r47[0] = "42";

        $r48 = new com.yahoo.bullet.pubsub.Metadata;

        $r49 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r48.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r49, null);

        $r47[1] = $r48;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r50, $r47);

        $r51 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r52 = virtualinvoke $r51.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r52.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r53 = r17.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r54 = virtualinvoke $r53.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r54.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testGroupBy()
    {
        com.yahoo.bullet.common.BulletConfig r0;
        java.util.Map $r1, $r13, $r39;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation[] $r2, $r14, $r29;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType $r4, $r6, $r16, $r18, $r31, $r33;
        java.util.stream.IntStream $r7, $r19;
        java.util.function.IntFunction $r8, $r20;
        java.util.stream.Stream $r9, $r21;
        java.util.function.Consumer $r11, $r23;
        byte[] r12, r24;
        com.yahoo.bullet.storm.JoinBoltTest r25;
        com.yahoo.bullet.storm.BulletStormConfig $r27;
        com.yahoo.bullet.storm.JoinBolt $r28, $r45, $r47, $r52, $r53, $r64;
        java.util.List r34, $r48;
        com.yahoo.bullet.query.expressions.Operation $r38;
        com.yahoo.bullet.query.Query r40;
        java.lang.Object[] $r41, $r49;
        com.yahoo.bullet.storm.TupleClassifier$Type $r42, $r50;
        com.yahoo.bullet.pubsub.PubSubMessage $r43;
        org.apache.storm.tuple.Tuple r44, r51;
        byte[][] $r46;
        com.yahoo.bullet.storm.testing.CustomCollector $r54, $r55, $r65;
        int $i1, $i3, $i5, i7;
        long $l2, $l4, $l6;
        java.util.Optional $r56;
        java.lang.Object $r57;
        com.google.gson.JsonElement $r60, $r62;
        com.google.gson.JsonObject r61;
        com.google.gson.JsonArray r63;
        com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy r66, r67;
        java.lang.String r68;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation $r69, $r70, $r71, $r72, $r74, $r75;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r73;
        com.yahoo.bullet.query.expressions.FieldExpression $r76;
        com.yahoo.bullet.query.expressions.ValueExpression $r77;
        com.yahoo.bullet.query.expressions.BinaryExpression $r78;
        com.google.gson.JsonParser $r79;
        com.yahoo.bullet.query.expressions.Expression $r80, $r81, $r82;

        r25 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r0 = staticinvoke <com.yahoo.bullet.querying.aggregations.TupleSketchingStrategyTest: com.yahoo.bullet.common.BulletConfig makeConfiguration(int)>(16);

        $r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("fieldA", "A");

        $r2 = newarray (com.yahoo.bullet.querying.aggregations.grouping.GroupOperation)[2];

        $r69 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r4 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r69.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r4, null, "cnt");

        $r2[0] = $r69;

        $r70 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r6 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType SUM>;

        specialinvoke $r70.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r6, "fieldB", "sumB");

        $r2[1] = $r70;

        r66 = staticinvoke <com.yahoo.bullet.querying.aggregations.TupleSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy makeGroupBy(com.yahoo.bullet.common.BulletConfig,java.util.Map,int,com.yahoo.bullet.querying.aggregations.grouping.GroupOperation[])>(r0, $r1, 16, $r2);

        $r7 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, 256);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testGroupBy_7__56: java.util.function.IntFunction bootstrap$()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r8);

        virtualinvoke r66.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__60: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy)>(r66);

        interfaceinvoke $r9.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);

        r12 = virtualinvoke r66.<com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy: byte[] getData()>();

        $r13 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("fieldA", "A");

        $r14 = newarray (com.yahoo.bullet.querying.aggregations.grouping.GroupOperation)[2];

        $r71 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r16 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r71.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r16, null, "cnt");

        $r14[0] = $r71;

        $r72 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r18 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType SUM>;

        specialinvoke $r72.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r18, "fieldB", "sumB");

        $r14[1] = $r72;

        r67 = staticinvoke <com.yahoo.bullet.querying.aggregations.TupleSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy makeGroupBy(com.yahoo.bullet.common.BulletConfig,java.util.Map,int,com.yahoo.bullet.querying.aggregations.grouping.GroupOperation[])>(r0, $r13, 16, $r14);

        $r19 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(256, 1024);

        $r20 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testGroupBy_8__65: java.util.function.IntFunction bootstrap$()>();

        $r21 = interfaceinvoke $r19.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r20);

        virtualinvoke r67.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__71: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy)>(r67);

        interfaceinvoke $r21.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r23);

        r24 = virtualinvoke r67.<com.yahoo.bullet.querying.aggregations.TupleSketchingStrategy: byte[] getData()>();

        $r73 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r27 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r73.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r27, 2, 1);

        r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r73;

        $r28 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r25.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r28);

        $r29 = newarray (com.yahoo.bullet.querying.aggregations.grouping.GroupOperation)[2];

        $r74 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r31 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r74.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r31, null, "cnt");

        $r29[0] = $r74;

        $r75 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r33 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType SUM>;

        specialinvoke $r75.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r33, "fieldB", "sumB");

        $r29[1] = $r75;

        r34 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        $r78 = new com.yahoo.bullet.query.expressions.BinaryExpression;

        $r76 = new com.yahoo.bullet.query.expressions.FieldExpression;

        specialinvoke $r76.<com.yahoo.bullet.query.expressions.FieldExpression: void <init>(java.lang.String)>("ts");

        $r77 = new com.yahoo.bullet.query.expressions.ValueExpression;

        specialinvoke $r77.<com.yahoo.bullet.query.expressions.ValueExpression: void <init>(java.io.Serializable)>("1");

        $r38 = <com.yahoo.bullet.query.expressions.Operation: com.yahoo.bullet.query.expressions.Operation EQUALS>;

        $r80 = (com.yahoo.bullet.query.expressions.Expression) $r76;

        $r81 = (com.yahoo.bullet.query.expressions.Expression) $r77;

        specialinvoke $r78.<com.yahoo.bullet.query.expressions.BinaryExpression: void <init>(com.yahoo.bullet.query.expressions.Expression,com.yahoo.bullet.query.expressions.Expression,com.yahoo.bullet.query.expressions.Operation)>($r80, $r81, $r38);

        $r39 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("fieldA", "A");

        $r82 = (com.yahoo.bullet.query.expressions.Expression) $r78;

        r40 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeGroupByFilterQuery(com.yahoo.bullet.query.expressions.Expression,int,java.util.Map,java.util.List)>($r82, 16, $r39, r34);

        $r42 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = "42";

        $r43 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r40);

        $r41[1] = $r43;

        r44 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r42, $r41);

        $r45 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r45.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r44);

        $r47 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r46 = newarray (byte[])[2];

        $r46[0] = r12;

        $r46[1] = r24;

        $r48 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r46);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r47, "42", $r48);

        $r50 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r49 = newarray (java.lang.Object)[0];

        r51 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r50, $r49);

        $r52 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r52.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r51);

        i7 = 0;

     label1:
        if i7 >= 2 goto label2;

        $r64 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r64.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r51);

        $r65 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i5 = virtualinvoke $r65.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l6 = (long) $i5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l6, 0L);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r53 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r53.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r51);

        $r54 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i1 = virtualinvoke $r54.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l2 = (long) $i1;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, 2L);

        $r55 = r25.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r56 = virtualinvoke $r55.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.Optional getMthElementFromNthTupleEmittedTo(java.lang.String,int,int)>("default", 1, 1);

        $r57 = virtualinvoke $r56.<java.util.Optional: java.lang.Object get()>();

        r68 = (java.lang.String) $r57;

        $r79 = new com.google.gson.JsonParser;

        specialinvoke $r79.<com.google.gson.JsonParser: void <init>()>();

        $r60 = virtualinvoke $r79.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r68);

        r61 = virtualinvoke $r60.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r62 = virtualinvoke r61.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("records");

        r63 = virtualinvoke $r62.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        $i3 = virtualinvoke r63.<com.google.gson.JsonArray: int size()>();

        $l4 = (long) $i3;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, 16L);

        return;
    }

    public void testDistribution()
    {
        com.yahoo.bullet.common.BulletConfig r0;
        com.yahoo.bullet.query.aggregations.DistributionType $r1, $r8, $r22;
        java.util.stream.IntStream $r2, $r9;
        java.util.function.IntFunction $r3, $r10;
        java.util.stream.Stream $r4, $r11, $r76, $r78;
        java.util.function.Consumer $r6, $r13;
        byte[] r7, r14;
        com.yahoo.bullet.storm.JoinBoltTest r15;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r16;
        com.yahoo.bullet.storm.BulletStormConfig $r17;
        com.yahoo.bullet.storm.JoinBolt $r18, $r26, $r28, $r69, $r70, $r79;
        java.lang.Object[] $r19, $r60, $r66, $r71;
        com.yahoo.bullet.storm.TupleClassifier$Type $r20, $r61, $r67, $r74;
        java.lang.Integer $r21;
        com.yahoo.bullet.query.Query $r23;
        com.yahoo.bullet.pubsub.PubSubMessage $r24;
        org.apache.storm.tuple.Tuple r25, r68;
        byte[][] $r27;
        java.util.List $r29, r59;
        com.yahoo.bullet.result.RecordBox $r30, $r31, $r33, $r35, $r37, $r38, $r40, $r42, $r44, $r45, $r47, $r49, $r51, $r52, $r54, $r56;
        java.lang.Double $r32, $r34, $r39, $r41, $r46, $r48, $r53, $r55;
        com.yahoo.bullet.record.BulletRecord r36, r43, r50, r57;
        com.yahoo.bullet.record.BulletRecord[] $r58;
        com.yahoo.bullet.result.Clip $r62;
        java.lang.String $r63;
        com.yahoo.bullet.pubsub.Metadata $r64, $r72;
        com.yahoo.bullet.pubsub.Metadata$Signal $r73;
        com.yahoo.bullet.storm.testing.CustomCollector $r75, $r77;
        long $l0, $l1;
        com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy r80, r81;
        int i2;

        r15 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        r0 = staticinvoke <com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategyTest: com.yahoo.bullet.common.BulletConfig makeConfiguration(int,int)>(10, 128);

        $r1 = <com.yahoo.bullet.query.aggregations.DistributionType: com.yahoo.bullet.query.aggregations.DistributionType PMF>;

        r80 = staticinvoke <com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy makeDistribution(com.yahoo.bullet.common.BulletConfig,int,java.lang.String,com.yahoo.bullet.query.aggregations.DistributionType,int)>(r0, 10, "field", $r1, 3);

        $r2 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, 50);

        $r3 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testDistribution_9__57: java.util.function.IntFunction bootstrap$()>();

        $r4 = interfaceinvoke $r2.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r3);

        virtualinvoke r80.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__68: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy)>(r80);

        interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r6);

        r7 = virtualinvoke r80.<com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy: byte[] getData()>();

        $r8 = <com.yahoo.bullet.query.aggregations.DistributionType: com.yahoo.bullet.query.aggregations.DistributionType PMF>;

        r81 = staticinvoke <com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy makeDistribution(com.yahoo.bullet.common.BulletConfig,int,java.lang.String,com.yahoo.bullet.query.aggregations.DistributionType,int)>(r0, 10, "field", $r8, 3);

        $r9 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(50, 101);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testDistribution_10__73: java.util.function.IntFunction bootstrap$()>();

        $r11 = interfaceinvoke $r9.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r10);

        virtualinvoke r81.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__76: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy)>(r81);

        interfaceinvoke $r11.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r13);

        r14 = virtualinvoke r81.<com.yahoo.bullet.querying.aggregations.QuantileSketchingStrategy: byte[] getData()>();

        $r16 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r17 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r16.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r17, 2, 1);

        r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r16;

        $r18 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r15.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r18);

        $r20 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "42";

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r22 = <com.yahoo.bullet.query.aggregations.DistributionType: com.yahoo.bullet.query.aggregations.DistributionType PMF>;

        $r23 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeDistributionQuery(java.lang.Integer,com.yahoo.bullet.query.aggregations.DistributionType,java.lang.String,int)>($r21, $r22, "field", 3);

        $r24 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r23);

        $r19[1] = $r24;

        r25 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r20, $r19);

        $r26 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r26.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r25);

        $r28 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r27 = newarray (byte[])[2];

        $r27[0] = r7;

        $r27[1] = r14;

        $r29 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r27);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r28, "42", $r29);

        $r30 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r31 = virtualinvoke $r30.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Range", "(-\u221e to 0.0)");

        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r33 = virtualinvoke $r31.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Count", $r32);

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r35 = virtualinvoke $r33.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Probability", $r34);

        r36 = virtualinvoke $r35.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r37 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r38 = virtualinvoke $r37.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Range", "[0.0 to 50.0)");

        $r39 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(50.0);

        $r40 = virtualinvoke $r38.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Count", $r39);

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.49504950495049505);

        $r42 = virtualinvoke $r40.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Probability", $r41);

        r43 = virtualinvoke $r42.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r44 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r45 = virtualinvoke $r44.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Range", "[50.0 to 100.0)");

        $r46 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(50.0);

        $r47 = virtualinvoke $r45.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Count", $r46);

        $r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.49504950495049505);

        $r49 = virtualinvoke $r47.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Probability", $r48);

        r50 = virtualinvoke $r49.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r51 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r52 = virtualinvoke $r51.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Range", "[100.0 to +\u221e)");

        $r53 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

        $r54 = virtualinvoke $r52.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Count", $r53);

        $r55 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.009900990099009901);

        $r56 = virtualinvoke $r54.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("Probability", $r55);

        r57 = virtualinvoke $r56.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r58 = newarray (com.yahoo.bullet.record.BulletRecord)[4];

        $r58[0] = r36;

        $r58[1] = r43;

        $r58[2] = r50;

        $r58[3] = r57;

        r59 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r58);

        $r61 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r60 = newarray (java.lang.Object)[3];

        $r60[0] = "42";

        $r62 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r59);

        $r63 = virtualinvoke $r62.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r60[1] = $r63;

        $r64 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r60[2] = $r64;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r61, $r60);

        $r67 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r66 = newarray (java.lang.Object)[0];

        r68 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r67, $r66);

        $r69 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r69.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r68);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r79 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r79.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r68);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r70 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r70.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r68);

        $r74 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r71 = newarray (java.lang.Object)[2];

        $r71[0] = "42";

        $r72 = new com.yahoo.bullet.pubsub.Metadata;

        $r73 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r72.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r73, null);

        $r71[1] = $r72;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r74, $r71);

        $r75 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r76 = virtualinvoke $r75.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r76.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r77 = r15.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r78 = virtualinvoke $r77.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r78.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testTopK()
    {
        com.yahoo.sketches.frequencies.ErrorType $r0;
        com.yahoo.bullet.common.BulletConfig r1;
        java.util.HashMap $r2;
        java.lang.Long $r6, $r13, $r25, $r38, $r44;
        java.util.stream.IntStream $r7, $r14;
        java.util.function.IntFunction $r8, $r15;
        java.util.stream.Stream $r9, $r16, $r65, $r67;
        java.util.function.Consumer $r11, $r18;
        byte[] r12, r19;
        com.yahoo.bullet.storm.JoinBoltTest r20;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r21;
        com.yahoo.bullet.storm.BulletStormConfig $r22;
        com.yahoo.bullet.storm.JoinBolt $r23, $r31, $r33, $r58, $r59, $r68;
        java.lang.Integer $r24;
        com.yahoo.bullet.query.Query r26;
        java.lang.Object[] $r27, $r49, $r55, $r60;
        com.yahoo.bullet.storm.TupleClassifier$Type $r28, $r50, $r56, $r63;
        com.yahoo.bullet.pubsub.PubSubMessage $r29;
        org.apache.storm.tuple.Tuple r30, r57;
        byte[][] $r32;
        java.util.List $r34, r48;
        com.yahoo.bullet.result.RecordBox $r35, $r36, $r37, $r39, $r41, $r42, $r43, $r45;
        com.yahoo.bullet.record.BulletRecord r40, r46;
        com.yahoo.bullet.record.BulletRecord[] $r47;
        com.yahoo.bullet.result.Clip $r51;
        java.lang.String $r52;
        com.yahoo.bullet.pubsub.Metadata $r53, $r61;
        com.yahoo.bullet.pubsub.Metadata$Signal $r62;
        com.yahoo.bullet.storm.testing.CustomCollector $r64, $r66;
        long $l0, $l1;
        com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy r69, r70;
        int i2;

        r20 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = <com.yahoo.sketches.frequencies.ErrorType: com.yahoo.sketches.frequencies.ErrorType NO_FALSE_NEGATIVES>;

        r1 = staticinvoke <com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategyTest: com.yahoo.bullet.common.BulletConfig makeConfiguration(com.yahoo.sketches.frequencies.ErrorType,int)>($r0, 16);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "foo");

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        r69 = staticinvoke <com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy makeTopK(com.yahoo.bullet.common.BulletConfig,java.util.Map,int,java.lang.String,java.lang.Long,java.util.List)>(r1, $r2, 2, "cnt", $r6, null);

        $r7 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, 32);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testTopK_11__58: java.util.function.IntFunction bootstrap$()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r8);

        virtualinvoke r69.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__64: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy)>(r69);

        interfaceinvoke $r9.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);

        r12 = virtualinvoke r69.<com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy: byte[] getData()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        r70 = staticinvoke <com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategyTest: com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy makeTopK(com.yahoo.bullet.common.BulletConfig,java.util.Map,int,java.lang.String,java.lang.Long,java.util.List)>(r1, $r2, 2, "cnt", $r13, null);

        $r14 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, 8);

        $r15 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$lambda_testTopK_12__69: java.util.function.IntFunction bootstrap$()>();

        $r16 = interfaceinvoke $r14.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>($r15);

        virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest$consume__72: java.util.function.Consumer bootstrap$(com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy)>(r70);

        interfaceinvoke $r16.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r18);

        r19 = virtualinvoke r70.<com.yahoo.bullet.querying.aggregations.FrequentItemsSketchingStrategy: byte[] getData()>();

        $r21 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r22 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r21.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r22, 2, 1);

        r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r21;

        $r23 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r20.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r23);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        r26 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeTopKQuery(java.lang.Integer,java.lang.Long,java.lang.String,java.util.Map)>($r24, $r25, "cnt", $r2);

        $r28 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = "42";

        $r29 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r26);

        $r27[1] = $r29;

        r30 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r28, $r27);

        $r31 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r31.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r30);

        $r33 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r32 = newarray (byte[])[2];

        $r32[0] = r12;

        $r32[1] = r19;

        $r34 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r33, "42", $r34);

        $r35 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r36 = virtualinvoke $r35.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("A", "0");

        $r37 = virtualinvoke $r36.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("foo", "null");

        $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(8L);

        $r39 = virtualinvoke $r37.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("cnt", $r38);

        r40 = virtualinvoke $r39.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r41 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r42 = virtualinvoke $r41.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("A", "1");

        $r43 = virtualinvoke $r42.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("foo", "null");

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(8L);

        $r45 = virtualinvoke $r43.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("cnt", $r44);

        r46 = virtualinvoke $r45.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        $r47 = newarray (com.yahoo.bullet.record.BulletRecord)[2];

        $r47[0] = r40;

        $r47[1] = r46;

        r48 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r47);

        $r50 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r49 = newarray (java.lang.Object)[3];

        $r49[0] = "42";

        $r51 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r48);

        $r52 = virtualinvoke $r51.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r49[1] = $r52;

        $r53 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r49[2] = $r53;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r50, $r49);

        $r56 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r55 = newarray (java.lang.Object)[0];

        r57 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r56, $r55);

        $r58 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r58.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r57);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r68 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r68.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r57);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r59 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r59.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r57);

        $r63 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r60 = newarray (java.lang.Object)[2];

        $r60[0] = "42";

        $r61 = new com.yahoo.bullet.pubsub.Metadata;

        $r62 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r61.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r62, null);

        $r60[1] = $r61;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r63, $r60);

        $r64 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r65 = virtualinvoke $r64.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r65.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r66 = r20.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r67 = virtualinvoke $r66.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r67.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testQueryCountingMetrics()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r5;
        com.yahoo.bullet.storm.JoinBolt $r7, $r28, $r35, $r38, $r55, $r59, $r71, $r84, $r97;
        java.lang.Object[] $r8, $r15, $r46, $r52, $r63;
        java.util.List $r9, $r13, $r37, $r40, r45;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation $r10;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType $r11;
        com.yahoo.bullet.query.expressions.Operation $r12;
        com.yahoo.bullet.query.Query r14;
        com.yahoo.bullet.storm.TupleClassifier$Type $r16, $r47, $r53, $r66;
        com.yahoo.bullet.pubsub.PubSubMessage $r17;
        org.apache.storm.tuple.Tuple r18, r54;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r19, $r22, $r25, $r29, $r32, $r56, $r60, $r72, $r75, $r78, $r81, $r85, $r88, $r91, $r94;
        java.lang.Long $r20, $r21, $r23, $r24, $r26, $r27, $r30, $r31, $r33, $r34, $r42, $r57, $r58, $r61, $r62, $r73, $r74, $r76, $r77, $r79, $r80, $r82, $r83, $r86, $r87, $r89, $r90, $r92, $r93, $r95, $r96;
        byte[] $r36, $r39;
        com.yahoo.bullet.result.RecordBox $r41, $r43;
        com.yahoo.bullet.record.BulletRecord $r44;
        com.yahoo.bullet.result.Clip $r48;
        java.lang.String $r49;
        com.yahoo.bullet.pubsub.Metadata $r50, $r64;
        com.yahoo.bullet.pubsub.Metadata$Signal $r65;
        com.yahoo.bullet.storm.testing.CustomCollector $r67, $r69;
        java.util.stream.Stream $r68, $r70;
        long $l0, $l1;
        int i2;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r5.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r6, 2, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r7);

        $r8 = newarray (java.io.Serializable)[2];

        $r8[0] = "1";

        $r8[1] = "2";

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        $r12 = <com.yahoo.bullet.query.expressions.Operation: com.yahoo.bullet.query.expressions.Operation EQUALS_ANY>;

        $r10 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r11 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r10.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r11, null, "cnt");

        $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        r14 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeGroupAllFieldFilterQuery(java.lang.String,java.util.List,com.yahoo.bullet.query.expressions.Operation,java.util.List)>("timestamp", $r9, $r12, $r13);

        $r16 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "42";

        $r17 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r14);

        $r15[1] = $r17;

        r18 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r16, $r15);

        $r19 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r20 = virtualinvoke $r19.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r22 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r23 = virtualinvoke $r22.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_improper_queries");

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r28.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r30 = virtualinvoke $r29.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r33 = virtualinvoke $r32.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r34);

        $r35 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r36 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: byte[] getGroupDataWithCount(java.lang.String,int)>("cnt", 21);

        $r37 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r36);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r35, "42", $r37);

        $r38 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r39 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: byte[] getGroupDataWithCount(java.lang.String,int)>("cnt", 21);

        $r40 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r39);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r38, "42", $r40);

        $r41 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);

        $r43 = virtualinvoke $r41.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("cnt", $r42);

        $r44 = virtualinvoke $r43.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r45 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r44);

        $r47 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r46 = newarray (java.lang.Object)[3];

        $r46[0] = "42";

        $r48 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r45);

        $r49 = virtualinvoke $r48.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r46[1] = $r49;

        $r50 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r46[2] = $r50;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r47, $r46);

        $r53 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r52 = newarray (java.lang.Object)[0];

        r54 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r53, $r52);

        $r55 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r55.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r54);

        i2 = 0;

     label1:
        if i2 >= 2 goto label2;

        $r97 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r97.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r54);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r56 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r57 = virtualinvoke $r56.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58);

        $r59 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r59.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r54);

        $r60 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r61 = virtualinvoke $r60.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r61, $r62);

        $r66 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r63 = newarray (java.lang.Object)[2];

        $r63[0] = "42";

        $r64 = new com.yahoo.bullet.pubsub.Metadata;

        $r65 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r64.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r65, null);

        $r63[1] = $r64;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r66, $r63);

        $r67 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r68 = virtualinvoke $r67.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l0 = interfaceinvoke $r68.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, 1L);

        $r69 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r70 = virtualinvoke $r69.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l1 = interfaceinvoke $r70.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r71 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r71.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r72 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r73 = virtualinvoke $r72.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r73, $r74);

        $r75 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r76 = virtualinvoke $r75.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r77);

        $r78 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r79 = virtualinvoke $r78.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_improper_queries");

        $r80 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r79, $r80);

        $r81 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r82 = virtualinvoke $r81.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_duplicated_queries");

        $r83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r83);

        $r84 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r84.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r85 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r86 = virtualinvoke $r85.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r87 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r86, $r87);

        $r88 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r89 = virtualinvoke $r88.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r90 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r89, $r90);

        $r91 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r92 = virtualinvoke $r91.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_improper_queries");

        $r93 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r92, $r93);

        $r94 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r95 = virtualinvoke $r94.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_duplicated_queries");

        $r96 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r95, $r96);

        return;
    }

    public void testImproperQueryCountingMetrics()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r4;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBolt $r3, $r19, $r20;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r5, $r8, $r11, $r21, $r24, $r27;
        java.lang.Long $r6, $r7, $r9, $r10, $r12, $r13, $r22, $r23, $r25, $r26, $r28, $r29;
        com.yahoo.bullet.pubsub.PubSubMessage r14;
        byte[] $r15;
        java.lang.Object[] $r16;
        com.yahoo.bullet.storm.TupleClassifier$Type $r17;
        org.apache.storm.tuple.Tuple r18;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = new com.yahoo.bullet.storm.JoinBolt;

        $r4 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r3.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r4);

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r3);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r6 = virtualinvoke $r5.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r9 = virtualinvoke $r8.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r12 = virtualinvoke $r11.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_improper_queries");

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", null);

        $r15 = newarray (byte)[0];

        virtualinvoke r14.<com.yahoo.bullet.pubsub.PubSubMessage: void setContent(java.io.Serializable)>($r15);

        $r17 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "42";

        $r16[1] = r14;

        r18 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r17, $r16);

        $r19 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r19.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r20 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r20.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r21 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r22 = virtualinvoke $r21.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r25 = virtualinvoke $r24.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26);

        $r27 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r28 = virtualinvoke $r27.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_improper_queries");

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29);

        return;
    }

    public void testCustomMetricEmitInterval()
    {
        java.util.HashMap $r0;
        java.lang.Integer $r2, $r4, $r25, $r29, $r33, $r38, $r42, $r64, $r68, $r72, $r76;
        com.yahoo.bullet.storm.JoinBoltTest r6;
        com.yahoo.bullet.storm.BulletStormConfig $r7, $r8, $r11;
        java.lang.Boolean $r9;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r10;
        com.yahoo.bullet.storm.JoinBolt $r12, $r36, $r79;
        java.lang.Object[] $r13, $r20, $r45, $r52, $r58;
        java.util.List $r14, $r18, r80;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation $r15;
        com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType $r16;
        com.yahoo.bullet.query.expressions.Operation $r17;
        com.yahoo.bullet.query.Query r19;
        com.yahoo.bullet.storm.TupleClassifier$Type $r21, $r46, $r53, $r61;
        com.yahoo.bullet.pubsub.PubSubMessage $r22;
        org.apache.storm.tuple.Tuple r23, r47;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r24, $r28, $r32, $r37, $r41, $r63, $r67, $r71, $r75;
        java.lang.Long $r26, $r27, $r30, $r31, $r34, $r35, $r39, $r40, $r43, $r44, $r49, $r65, $r66, $r69, $r70, $r73, $r74, $r77, $r78;
        com.yahoo.bullet.result.RecordBox $r48, $r50;
        com.yahoo.bullet.record.BulletRecord $r51;
        com.yahoo.bullet.result.Clip $r54;
        java.lang.String $r55;
        com.yahoo.bullet.pubsub.Metadata $r56, $r59;
        com.yahoo.bullet.pubsub.Metadata$Signal $r60;
        int i1;

        r6 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bullet_active_queries", $r2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("default", $r4);

        $r7 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.emit.interval.mapping", $r0);

        $r8 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r8.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r9);

        $r10 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r11 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r10.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r11, 3, 1);

        r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r10;

        $r12 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r6.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r12);

        $r13 = newarray (java.io.Serializable)[2];

        $r13[0] = "1";

        $r13[1] = "2";

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        $r17 = <com.yahoo.bullet.query.expressions.Operation: com.yahoo.bullet.query.expressions.Operation EQUALS_ANY>;

        $r15 = new com.yahoo.bullet.querying.aggregations.grouping.GroupOperation;

        $r16 = <com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType: com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType COUNT>;

        specialinvoke $r15.<com.yahoo.bullet.querying.aggregations.grouping.GroupOperation: void <init>(com.yahoo.bullet.querying.aggregations.grouping.GroupOperation$GroupOperationType,java.lang.String,java.lang.String)>($r16, null, "cnt");

        $r18 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r15);

        r19 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeGroupAllFieldFilterQuery(java.lang.String,java.util.List,com.yahoo.bullet.query.expressions.Operation,java.util.List)>("timestamp", $r14, $r17, $r18);

        $r21 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = "42";

        $r22 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r19);

        $r20[1] = $r22;

        r23 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r21, $r20);

        $r24 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r26 = virtualinvoke $r24.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r25, "bullet_created_queries");

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r30 = virtualinvoke $r28.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r29, "bullet_active_queries");

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r34 = virtualinvoke $r32.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r33, "bullet_improper_queries");

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r36 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r36.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r23);

        $r37 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r39 = virtualinvoke $r37.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r38, "bullet_created_queries");

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r39, $r40);

        $r41 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r43 = virtualinvoke $r41.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r42, "bullet_active_queries");

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r44);

        $r46 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r45 = newarray (java.lang.Object)[0];

        r47 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r46, $r45);

        i1 = 0;

     label1:
        if i1 > 6 goto label2;

        $r75 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r77 = virtualinvoke $r75.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r76, "bullet_active_queries");

        $r78 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r77, $r78);

        $r79 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r79.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r47);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r48 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r50 = virtualinvoke $r48.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("cnt", $r49);

        $r51 = virtualinvoke $r50.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        r80 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r51);

        $r53 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r52 = newarray (java.lang.Object)[3];

        $r52[0] = "42";

        $r54 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r80);

        $r55 = virtualinvoke $r54.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r52[1] = $r55;

        $r56 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r52[2] = $r56;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r53, $r52);

        $r61 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r58 = newarray (java.lang.Object)[2];

        $r58[0] = "42";

        $r59 = new com.yahoo.bullet.pubsub.Metadata;

        $r60 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r59.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r60, null);

        $r58[1] = $r59;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r61, $r58);

        $r63 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r65 = virtualinvoke $r63.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r64, "bullet_created_queries");

        $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r65, $r66);

        $r67 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r69 = virtualinvoke $r67.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r68, "bullet_active_queries");

        $r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r69, $r70);

        $r71 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r73 = virtualinvoke $r71.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.Integer,java.lang.String)>($r72, "bullet_improper_queries");

        $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r73, $r74);

        return;
    }

    public void testKillSignal()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBolt $r5, $r12, $r13, $r24;
        java.lang.Object[] $r6, $r19;
        com.yahoo.bullet.storm.TupleClassifier$Type $r7, $r22;
        java.lang.Integer $r8;
        com.yahoo.bullet.query.Query $r9;
        com.yahoo.bullet.pubsub.PubSubMessage $r10;
        org.apache.storm.tuple.Tuple r11, r23;
        com.yahoo.bullet.storm.testing.CustomCollector $r15, $r25;
        int $i0, $i2;
        long $l1, $l3;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r16, $r26;
        java.lang.Long $r17, $r18, $r27, $r28;
        com.yahoo.bullet.pubsub.Metadata $r20;
        com.yahoo.bullet.pubsub.Metadata$Signal $r21;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r5);

        $r7 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "42";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r9);

        $r6[1] = $r10;

        r11 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r7, $r6);

        $r12 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r11);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r13, "42", 4);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type METADATA_TUPLE>;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "42";

        $r20 = new com.yahoo.bullet.pubsub.Metadata;

        $r21 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal KILL>;

        specialinvoke $r20.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r21, null);

        $r19[1] = $r20;

        r23 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r19);

        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r24.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r23);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        return;
    }

    public void testCompleteSignal()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBolt $r5, $r12, $r13, $r24;
        java.lang.Object[] $r6, $r19;
        com.yahoo.bullet.storm.TupleClassifier$Type $r7, $r22;
        java.lang.Integer $r8;
        com.yahoo.bullet.query.Query $r9;
        com.yahoo.bullet.pubsub.PubSubMessage $r10;
        org.apache.storm.tuple.Tuple r11, r23;
        com.yahoo.bullet.storm.testing.CustomCollector $r15, $r25;
        int $i0, $i2;
        long $l1, $l3;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r16, $r26;
        java.lang.Long $r17, $r18, $r27, $r28;
        com.yahoo.bullet.pubsub.Metadata $r20;
        com.yahoo.bullet.pubsub.Metadata$Signal $r21;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r5);

        $r7 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "42";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r9);

        $r6[1] = $r10;

        r11 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r7, $r6);

        $r12 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r11);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r13, "42", 4);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type METADATA_TUPLE>;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "42";

        $r20 = new com.yahoo.bullet.pubsub.Metadata;

        $r21 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r20.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r21, null);

        $r19[1] = $r20;

        r23 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r19);

        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r24.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r23);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        return;
    }

    public void testRateLimitErrorFromUpstream()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBolt $r5, $r12, $r13, $r24;
        java.lang.Object[] $r6, $r21, $r29, $r38;
        com.yahoo.bullet.storm.TupleClassifier$Type $r7, $r22, $r30, $r41;
        java.lang.Integer $r8;
        com.yahoo.bullet.query.Query $r9;
        com.yahoo.bullet.pubsub.PubSubMessage $r10;
        org.apache.storm.tuple.Tuple r11, r23;
        java.util.List r14;
        com.yahoo.bullet.storm.testing.CustomCollector $r15, $r25, $r43, $r45;
        int $i0, $i2;
        long $l1, $l3, $l4, $l5;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r16, $r26;
        java.lang.Long $r17, $r18, $r27, $r28;
        com.yahoo.bullet.querying.RateLimitError $r19;
        com.yahoo.bullet.result.Clip $r31, $r33;
        com.yahoo.bullet.result.Meta $r32;
        java.lang.String $r34;
        com.yahoo.bullet.pubsub.Metadata $r35, $r39;
        com.yahoo.bullet.pubsub.Metadata$Signal $r36, $r40;
        java.util.stream.Stream $r44, $r46;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r5);

        $r7 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "42";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r9);

        $r6[1] = $r10;

        r11 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r7, $r6);

        $r12 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r11);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r13, "42", 4);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r19 = new com.yahoo.bullet.querying.RateLimitError;

        specialinvoke $r19.<com.yahoo.bullet.querying.RateLimitError: void <init>(double,double)>(2000.0, 1000.0);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type ERROR_TUPLE>;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = "42";

        $r21[1] = $r19;

        r23 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r21);

        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r24.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r23);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r30 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r29 = newarray (java.lang.Object)[3];

        $r29[0] = "42";

        $r31 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r14);

        $r32 = virtualinvoke $r19.<com.yahoo.bullet.querying.RateLimitError: com.yahoo.bullet.result.Meta makeMeta()>();

        $r33 = virtualinvoke $r31.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip add(com.yahoo.bullet.result.Meta)>($r32);

        $r34 = virtualinvoke $r33.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r29[1] = $r34;

        $r35 = new com.yahoo.bullet.pubsub.Metadata;

        $r36 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        specialinvoke $r35.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r36, null);

        $r29[2] = $r35;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r30, $r29);

        $r41 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r38 = newarray (java.lang.Object)[2];

        $r38[0] = "42";

        $r39 = new com.yahoo.bullet.pubsub.Metadata;

        $r40 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal KILL>;

        specialinvoke $r39.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r40, null);

        $r38[1] = $r39;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r41, $r38);

        $r43 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r44 = virtualinvoke $r43.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l4 = interfaceinvoke $r44.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, 1L);

        $r45 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r46 = virtualinvoke $r45.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l5 = interfaceinvoke $r46.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 1L);

        return;
    }

    public void testRateLimitErrorFromUpstreamWithoutQuery()
    {
        com.yahoo.bullet.querying.RateLimitError $r0;
        java.lang.Object[] $r2;
        com.yahoo.bullet.storm.TupleClassifier$Type $r3;
        org.apache.storm.tuple.Tuple r4;
        com.yahoo.bullet.storm.JoinBoltTest r5;
        com.yahoo.bullet.storm.JoinBolt $r6;
        com.yahoo.bullet.storm.testing.CustomCollector $r7;
        int $i0;
        long $l1;

        r5 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.querying.RateLimitError;

        specialinvoke $r0.<com.yahoo.bullet.querying.RateLimitError: void <init>(double,double)>(2000.0, 1000.0);

        $r3 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type ERROR_TUPLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "42";

        $r2[1] = $r0;

        r4 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r3, $r2);

        $r6 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r6.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r4);

        $r7 = r5.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r7.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        return;
    }

    public void testRateLimitingWithTicks()
    {
        com.yahoo.bullet.querying.RateLimitError $r0;
        com.yahoo.bullet.storm.JoinBoltTest r2;
        com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt $r3;
        com.yahoo.bullet.storm.BulletStormConfig $r4;
        com.yahoo.bullet.storm.JoinBolt $r5, $r12, $r13, $r19;
        java.lang.Object[] $r6, $r16, $r21, $r30;
        com.yahoo.bullet.storm.TupleClassifier$Type $r7, $r17, $r22, $r33;
        java.lang.Integer $r8;
        com.yahoo.bullet.query.Query $r9;
        com.yahoo.bullet.pubsub.PubSubMessage $r10;
        org.apache.storm.tuple.Tuple r11, r18;
        java.util.List r14;
        com.yahoo.bullet.storm.testing.CustomCollector $r15, $r20;
        int $i0, $i2;
        long $l1, $l3;
        com.yahoo.bullet.result.Clip $r23, $r25;
        com.yahoo.bullet.result.Meta $r24;
        java.lang.String $r26;
        com.yahoo.bullet.pubsub.Metadata $r27, $r31;
        com.yahoo.bullet.pubsub.Metadata$Signal $r28, $r32;

        r2 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.querying.RateLimitError;

        specialinvoke $r0.<com.yahoo.bullet.querying.RateLimitError: void <init>(double,double)>(42.0, 5.0);

        $r3 = new com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt;

        $r4 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r3.<com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt: void <init>(int,com.yahoo.bullet.querying.RateLimitError,com.yahoo.bullet.storm.BulletStormConfig,com.yahoo.bullet.storm.JoinBoltTest$1)>(2, $r0, $r4, null);

        r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r3;

        $r5 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r2.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r5);

        $r7 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "42";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r9 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r9);

        $r6[1] = $r10;

        r11 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r7, $r6);

        $r12 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r11);

        $r13 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r13, "42", 2);

        $r15 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r17 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r16 = newarray (java.lang.Object)[0];

        r18 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r17, $r16);

        $r19 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r19.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r18);

        $r20 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r20.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = "42";

        $r23 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r14);

        $r24 = virtualinvoke $r0.<com.yahoo.bullet.querying.RateLimitError: com.yahoo.bullet.result.Meta makeMeta()>();

        $r25 = virtualinvoke $r23.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip add(com.yahoo.bullet.result.Meta)>($r24);

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r21[1] = $r26;

        $r27 = new com.yahoo.bullet.pubsub.Metadata;

        $r28 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        specialinvoke $r27.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r28, null);

        $r21[2] = $r27;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r21);

        $r33 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = "42";

        $r31 = new com.yahoo.bullet.pubsub.Metadata;

        $r32 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal KILL>;

        specialinvoke $r31.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r32, null);

        $r30[1] = $r31;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r33, $r30);

        return;
    }

    public void testRateLimitingOnCombine()
    {
        com.yahoo.bullet.querying.RateLimitError $r0;
        com.yahoo.bullet.storm.JoinBoltTest r2;
        com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt $r3;
        com.yahoo.bullet.storm.BulletStormConfig $r4;
        com.yahoo.bullet.storm.JoinBolt $r5, $r12, $r13;
        java.lang.Object[] $r6, $r16, $r26;
        com.yahoo.bullet.storm.TupleClassifier$Type $r7, $r17, $r29;
        java.lang.Integer $r8;
        com.yahoo.bullet.query.Query $r9;
        com.yahoo.bullet.pubsub.PubSubMessage $r10;
        org.apache.storm.tuple.Tuple r11;
        java.util.List r14, $r18;
        com.yahoo.bullet.storm.testing.CustomCollector $r15;
        int $i0;
        long $l1;
        com.yahoo.bullet.result.Clip $r19, $r21;
        com.yahoo.bullet.result.Meta $r20;
        java.lang.String $r22;
        com.yahoo.bullet.pubsub.Metadata $r23, $r27;
        com.yahoo.bullet.pubsub.Metadata$Signal $r24, $r28;

        r2 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.querying.RateLimitError;

        specialinvoke $r0.<com.yahoo.bullet.querying.RateLimitError: void <init>(double,double)>(42.0, 5.0);

        $r3 = new com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt;

        $r4 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r3.<com.yahoo.bullet.storm.JoinBoltTest$RateLimitedJoinBolt: void <init>(int,com.yahoo.bullet.querying.RateLimitError,com.yahoo.bullet.storm.BulletStormConfig,com.yahoo.bullet.storm.JoinBoltTest$1)>(2, $r0, $r4, null);

        r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r3;

        $r5 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r2.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r5);

        $r7 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "42";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r9 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r8);

        $r10 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r9);

        $r6[1] = $r10;

        r11 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r7, $r6);

        $r12 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r11);

        $r13 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r13, "42", 4);

        $r15 = r2.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        $r17 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = "42";

        $r18 = interfaceinvoke r14.<java.util.List: java.util.List subList(int,int)>(0, 3);

        $r19 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>($r18);

        $r20 = virtualinvoke $r0.<com.yahoo.bullet.querying.RateLimitError: com.yahoo.bullet.result.Meta makeMeta()>();

        $r21 = virtualinvoke $r19.<com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip add(com.yahoo.bullet.result.Meta)>($r20);

        $r22 = virtualinvoke $r21.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r16[1] = $r22;

        $r23 = new com.yahoo.bullet.pubsub.Metadata;

        $r24 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        specialinvoke $r23.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r24, null);

        $r16[2] = $r23;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r17, $r16);

        $r29 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r26 = newarray (java.lang.Object)[2];

        $r26[0] = "42";

        $r27 = new com.yahoo.bullet.pubsub.Metadata;

        $r28 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal KILL>;

        specialinvoke $r27.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r28, null);

        $r26[1] = $r27;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r29, $r26);

        return;
    }

    public void testDataWithoutQuery()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBolt $r1, $r10, $r11;
        com.yahoo.bullet.storm.testing.CustomCollector $r3, $r13;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object[] $r4, $r14, $r20;
        com.yahoo.bullet.storm.TupleClassifier$Type $r5, $r15, $r23;
        java.lang.Integer $r6;
        com.yahoo.bullet.query.Query $r7;
        com.yahoo.bullet.pubsub.PubSubMessage $r8;
        org.apache.storm.tuple.Tuple r9;
        java.util.List r12;
        com.yahoo.bullet.result.Clip $r16;
        java.lang.String $r17;
        com.yahoo.bullet.pubsub.Metadata $r18, $r21;
        com.yahoo.bullet.pubsub.Metadata$Signal $r22;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r1, "42", 3);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r3.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r5 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "42";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r7 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r6);

        $r8 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r7);

        $r4[1] = $r8;

        r9 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r5, $r4);

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r9);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r11, "42", 5);

        $r13 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r13.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r15 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = "42";

        $r16 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r12);

        $r17 = virtualinvoke $r16.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r14[1] = $r17;

        $r18 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r14[2] = $r18;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r15, $r14);

        $r23 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = "42";

        $r21 = new com.yahoo.bullet.pubsub.Metadata;

        $r22 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r21.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r22, null);

        $r20[1] = $r21;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r23, $r20);

        return;
    }

    public void testMissingMetadataIsEmitted()
    {
        java.lang.Object[] $r0, $r11, $r17;
        com.yahoo.bullet.storm.TupleClassifier$Type $r1, $r12, $r20;
        java.lang.Integer $r2;
        com.yahoo.bullet.query.Query $r3;
        com.yahoo.bullet.pubsub.PubSubMessage $r4;
        org.apache.storm.tuple.Tuple r5;
        com.yahoo.bullet.storm.JoinBoltTest r6;
        com.yahoo.bullet.storm.JoinBolt $r7, $r8;
        java.util.List r9;
        com.yahoo.bullet.storm.testing.CustomCollector $r10;
        int $i0;
        long $l1;
        com.yahoo.bullet.result.Clip $r13;
        java.lang.String $r14;
        com.yahoo.bullet.pubsub.Metadata $r15, $r18;
        com.yahoo.bullet.pubsub.Metadata$Signal $r19;

        r6 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = "42";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r3 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r2);

        $r4 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r3);

        $r0[1] = $r4;

        r5 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r1, $r0);

        $r7 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r7.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r5);

        $r8 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r9 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r8, "42", 5);

        $r10 = r6.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r10.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        $r12 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "42";

        $r13 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r9);

        $r14 = virtualinvoke $r13.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r11[1] = $r14;

        $r15 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r11[2] = $r15;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r12, $r11);

        $r20 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "42";

        $r18 = new com.yahoo.bullet.pubsub.Metadata;

        $r19 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r18.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r19, null);

        $r17[1] = $r18;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r20, $r17);

        return;
    }

    public void testMetadataIsNotReplaced()
    {
        com.yahoo.bullet.pubsub.Metadata $r0, $r12, $r22;
        java.lang.Object[] $r2, $r16, $r21;
        com.yahoo.bullet.storm.TupleClassifier$Type $r3, $r17, $r24;
        java.lang.Integer $r4;
        com.yahoo.bullet.query.Query $r5;
        com.yahoo.bullet.pubsub.PubSubMessage $r6;
        org.apache.storm.tuple.Tuple r7;
        com.yahoo.bullet.storm.JoinBoltTest r8;
        com.yahoo.bullet.storm.JoinBolt $r9, $r10;
        java.util.List r11;
        com.yahoo.bullet.pubsub.Metadata$Signal $r13, $r23;
        com.yahoo.bullet.storm.testing.CustomCollector $r15;
        int $i0;
        long $l1;
        com.yahoo.bullet.result.Clip $r18;
        java.lang.String $r19;

        r8 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r0 = new com.yahoo.bullet.pubsub.Metadata;

        specialinvoke $r0.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>(null, "foo");

        $r3 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "42";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r5 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r4);

        $r6 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query,com.yahoo.bullet.pubsub.Metadata)>("42", $r5, $r0);

        $r2[1] = $r6;

        r7 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r3, $r2);

        $r9 = r8.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r9.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r7);

        $r10 = r8.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r11 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r10, "42", 5);

        $r12 = new com.yahoo.bullet.pubsub.Metadata;

        $r13 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r12.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r13, "foo");

        $r15 = r8.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        $r17 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = "42";

        $r18 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r11);

        $r19 = virtualinvoke $r18.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r16[1] = $r19;

        $r16[2] = $r12;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r17, $r16);

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = "42";

        $r22 = new com.yahoo.bullet.pubsub.Metadata;

        $r23 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r22.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r23, "foo");

        $r21[1] = $r22;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r24, $r21);

        return;
    }

    public void testQueryBeingDelayed()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r5;
        com.yahoo.bullet.storm.JoinBolt $r7, $r18, $r28, $r32, $r40, $r48, $r59;
        java.lang.Integer $r8, $r10, $r12;
        com.yahoo.bullet.query.Window$Unit $r9, $r11;
        com.yahoo.bullet.query.Query r13;
        java.lang.Object[] $r14, $r25, $r35, $r43, $r51;
        com.yahoo.bullet.storm.TupleClassifier$Type $r15, $r26, $r36, $r44, $r52;
        com.yahoo.bullet.pubsub.PubSubMessage $r16;
        org.apache.storm.tuple.Tuple r17, r27;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r19, $r22, $r29, $r56, $r61;
        java.lang.Long $r20, $r21, $r23, $r24, $r30, $r31, $r57, $r58, $r62, $r63;
        java.util.List r33, r41, r49;
        com.yahoo.bullet.storm.testing.CustomCollector $r34, $r42, $r50, $r60;
        int $i0, $i2, $i4, $i6, i8;
        long $l1, $l3, $l5, $l7;
        com.yahoo.bullet.result.Clip $r37, $r45, $r53;
        java.lang.String $r38, $r46, $r54;
        com.yahoo.bullet.pubsub.Metadata $r39, $r47, $r55;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r5.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r6, 5, 0);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r11 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r13 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeSimpleAggregationQuery(java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer)>($r8, $r9, $r10, $r11, $r12);

        $r15 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "42";

        $r16 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r13);

        $r14[1] = $r16;

        r17 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r15, $r14);

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r18.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r17);

        $r19 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r20 = virtualinvoke $r19.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r22 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r23 = virtualinvoke $r22.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24);

        $r26 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r25 = newarray (java.lang.Object)[0];

        r27 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r26, $r25);

        i8 = 0;

     label1:
        if i8 >= 1 goto label2;

        $r59 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r59.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r27);

        $r60 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i6 = virtualinvoke $r60.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, 0L);

        $r61 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r62 = virtualinvoke $r61.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r28 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r28.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r27);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r30 = virtualinvoke $r29.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r33 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendSlidingWindowWithRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r32, "42", 1);

        $r34 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r34.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r36 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r35 = newarray (java.lang.Object)[3];

        $r35[0] = "42";

        $r37 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r33);

        $r38 = virtualinvoke $r37.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r35[1] = $r38;

        $r39 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata EMPTY>;

        $r35[2] = $r39;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r36, $r35);

        $r40 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r41 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendSlidingWindowWithRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r40, "42", 2);

        $r42 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r42.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r44 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r43 = newarray (java.lang.Object)[3];

        $r43[0] = "42";

        $r45 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r41);

        $r46 = virtualinvoke $r45.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r43[1] = $r46;

        $r47 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata EMPTY>;

        $r43[2] = $r47;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r44, $r43);

        $r48 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r49 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendSlidingWindowWithRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r48, "42", 3);

        $r50 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i4 = virtualinvoke $r50.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 3L);

        $r52 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r51 = newarray (java.lang.Object)[3];

        $r51[0] = "42";

        $r53 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r49);

        $r54 = virtualinvoke $r53.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r51[1] = $r54;

        $r55 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata EMPTY>;

        $r51[2] = $r55;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r52, $r51);

        $r56 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r57 = virtualinvoke $r56.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58);

        return;
    }

    public void testQueryClosedWhileFinishedTerminatesTheQuery()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r5;
        com.yahoo.bullet.storm.JoinBolt $r7, $r18, $r22, $r23, $r24, $r29;
        java.lang.Integer $r8, $r10, $r12;
        com.yahoo.bullet.query.Window$Unit $r9, $r11;
        com.yahoo.bullet.query.Query r13;
        java.lang.Object[] $r14, $r19, $r34, $r41;
        com.yahoo.bullet.storm.TupleClassifier$Type $r15, $r20, $r35, $r44;
        com.yahoo.bullet.pubsub.PubSubMessage $r16;
        org.apache.storm.tuple.Tuple r17, r21;
        com.yahoo.bullet.storm.testing.CustomCollector $r25, $r46, $r47, $r49;
        int $i0, $i2;
        long $l1, $l3, $l4, $l5;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r26, $r31;
        java.lang.Long $r27, $r28, $r32, $r33;
        java.util.List r30;
        com.yahoo.bullet.result.Clip $r36;
        java.lang.String $r37;
        com.yahoo.bullet.pubsub.Metadata $r38, $r42;
        com.yahoo.bullet.pubsub.Metadata$Signal $r39, $r43;
        java.util.stream.Stream $r48, $r50;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r5.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r6, 2, 1);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r11 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r13 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeSimpleAggregationQuery(java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer)>($r8, $r9, $r10, $r11, $r12);

        $r15 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "42";

        $r16 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r13);

        $r14[1] = $r16;

        r17 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r15, $r14);

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r18.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r17);

        $r20 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r19 = newarray (java.lang.Object)[0];

        r21 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r20, $r19);

        $r22 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r22.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r21);

        $r23 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r23.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r21);

        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r24.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r21);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r30 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendSlidingWindowWithRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r29, "42", 2);

        $r31 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r32 = virtualinvoke $r31.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33);

        $r35 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r34 = newarray (java.lang.Object)[3];

        $r34[0] = "42";

        $r36 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r30);

        $r37 = virtualinvoke $r36.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r34[1] = $r37;

        $r38 = new com.yahoo.bullet.pubsub.Metadata;

        $r39 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r38.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r39, null);

        $r34[2] = $r38;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r35, $r34);

        $r44 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = "42";

        $r42 = new com.yahoo.bullet.pubsub.Metadata;

        $r43 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r42.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r43, null);

        $r41[1] = $r42;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r44, $r41);

        $r46 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r46.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r47 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r48 = virtualinvoke $r47.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("default");

        $l4 = interfaceinvoke $r48.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, 1L);

        $r49 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r50 = virtualinvoke $r49.<com.yahoo.bullet.storm.testing.CustomCollector: java.util.stream.Stream getAllEmittedTo(java.lang.String)>("feedback");

        $l5 = interfaceinvoke $r50.<java.util.stream.Stream: long count()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 1L);

        return;
    }

    public void testWindowClosedOnTickIsImmediatelyEmitted()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBoltTest$ClosableJoinBolt $r5;
        com.yahoo.bullet.storm.JoinBolt $r7, $r18, $r25, $r29, $r30, $r32, $r42, $r43;
        java.lang.Integer $r8, $r10, $r12;
        com.yahoo.bullet.query.Window$Unit $r9, $r11;
        com.yahoo.bullet.query.Query r13;
        java.lang.Object[] $r14, $r22, $r36;
        com.yahoo.bullet.storm.TupleClassifier$Type $r15, $r23, $r37;
        com.yahoo.bullet.pubsub.PubSubMessage $r16;
        org.apache.storm.tuple.Tuple r17, r24;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r19, $r26, $r44;
        java.lang.Long $r20, $r21, $r27, $r28, $r45, $r46;
        java.util.List r31, r47;
        com.yahoo.bullet.storm.testing.CustomCollector $r33;
        int $i0, i2;
        long $l1;
        java.util.ArrayList $r34;
        com.yahoo.bullet.result.Clip $r38;
        java.lang.String $r39;
        com.yahoo.bullet.pubsub.Metadata $r40;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new com.yahoo.bullet.storm.JoinBoltTest$ClosableJoinBolt;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r5.<com.yahoo.bullet.storm.JoinBoltTest$ClosableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r6, 3, 0);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r9 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit TIME>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100000);

        $r11 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit TIME>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100000);

        r13 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeSimpleAggregationQuery(java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer)>($r8, $r9, $r10, $r11, $r12);

        $r15 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "42";

        $r16 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", r13);

        $r14[1] = $r16;

        r17 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r15, $r14);

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r18.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r17);

        $r19 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r20 = virtualinvoke $r19.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r23 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r22 = newarray (java.lang.Object)[0];

        r24 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r23, $r22);

        i2 = 0;

     label1:
        if i2 >= 1 goto label2;

        $r43 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r43.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r24);

        $r44 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r45 = virtualinvoke $r44.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r46);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r25.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r24);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r27 = virtualinvoke $r26.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r47 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r29, "42", 1);

        $r30 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r31 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r30, "42", 1);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r32.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r24);

        $r33 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r33.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>(java.util.Collection)>(r47);

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>(r31);

        $r37 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r36 = newarray (java.lang.Object)[3];

        $r36[0] = "42";

        $r38 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>($r34);

        $r39 = virtualinvoke $r38.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r36[1] = $r39;

        $r40 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata EMPTY>;

        $r36[2] = $r40;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r37, $r36);

        $r42 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r42.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r24);

        return;
    }

    public void testQueryFinishedWhileBeingDelayed()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r6;
        java.lang.Boolean $r2;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r5;
        com.yahoo.bullet.storm.JoinBolt $r7, $r14, $r24, $r28, $r33, $r47;
        java.lang.Object[] $r8, $r21, $r41;
        com.yahoo.bullet.storm.TupleClassifier$Type $r9, $r22, $r42;
        java.lang.Integer $r10;
        com.yahoo.bullet.query.Query $r11;
        com.yahoo.bullet.pubsub.PubSubMessage $r12;
        org.apache.storm.tuple.Tuple r13, r23;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r15, $r18, $r25, $r30, $r35, $r49;
        java.lang.Long $r16, $r17, $r19, $r20, $r26, $r27, $r31, $r32, $r36, $r37, $r50, $r51;
        java.util.List r29, r34, r52;
        com.yahoo.bullet.storm.testing.CustomCollector $r38, $r48;
        int $i0, $i2, i4;
        long $l1, $l3;
        java.util.ArrayList $r39;
        com.yahoo.bullet.result.Clip $r43;
        java.lang.String $r44;
        com.yahoo.bullet.pubsub.Metadata $r45;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r5 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r5.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r6, 2, 0);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r7);

        $r9 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "42";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r11 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r10);

        $r12 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r11);

        $r8[1] = $r12;

        r13 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r9, $r8);

        $r14 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r14.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r13);

        $r15 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r16 = virtualinvoke $r15.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r18 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r19 = virtualinvoke $r18.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20);

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r21 = newarray (java.lang.Object)[0];

        r23 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r22, $r21);

        i4 = 0;

     label1:
        if i4 >= 1 goto label2;

        $r47 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r47.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r23);

        $r48 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r48.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $r49 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r50 = virtualinvoke $r49.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r24 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r52 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r24, "42", 1);

        $r25 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r26 = virtualinvoke $r25.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r29 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r28, "42", 1);

        $r30 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r31 = virtualinvoke $r30.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32);

        $r33 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r34 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r33, "42", 1);

        $r35 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r36 = virtualinvoke $r35.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37);

        $r38 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r38.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>(java.util.Collection)>(r52);

        interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>(r29);

        interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>(r34);

        $r42 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r41 = newarray (java.lang.Object)[3];

        $r41[0] = "42";

        $r43 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>($r39);

        $r44 = virtualinvoke $r43.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r41[1] = $r44;

        $r45 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r41[2] = $r45;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r42, $r41);

        return;
    }

    public void testQueryGettingDataWhileBeingDelayed()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1, $r3, $r5, $r8;
        java.lang.Integer $r2, $r12;
        java.lang.Boolean $r4;
        com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt $r7;
        com.yahoo.bullet.storm.JoinBolt $r9, $r16, $r26, $r27, $r32, $r36, $r41;
        java.lang.Object[] $r10, $r23, $r46;
        com.yahoo.bullet.storm.TupleClassifier$Type $r11, $r24, $r47;
        com.yahoo.bullet.query.Query $r13;
        com.yahoo.bullet.pubsub.PubSubMessage $r14;
        org.apache.storm.tuple.Tuple r15, r25;
        com.yahoo.bullet.storm.testing.CustomTopologyContext $r17, $r20, $r29, $r33, $r37, $r42;
        java.lang.Long $r18, $r19, $r21, $r22, $r30, $r31, $r34, $r35, $r38, $r39, $r43, $r44;
        java.util.List r28;
        com.yahoo.bullet.storm.testing.CustomCollector $r40, $r45;
        int $i0, $i2;
        long $l1, $l3;
        com.yahoo.bullet.result.Clip $r48;
        java.lang.String $r49;
        com.yahoo.bullet.pubsub.Metadata $r50;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r1.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.join.bolt.query.pre.start.delay.ticks", $r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r3.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.metrics.built.in.enable", $r4);

        $r5 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r5.<com.yahoo.bullet.storm.BulletStormConfig: com.yahoo.bullet.storm.BulletStormConfig validate()>();

        $r7 = new com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt;

        $r8 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r7.<com.yahoo.bullet.storm.JoinBoltTest$DonableJoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig,int,boolean)>($r8, 2, 0);

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r7;

        $r9 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke r0.<com.yahoo.bullet.storm.JoinBoltTest: void setup(com.yahoo.bullet.storm.JoinBolt)>($r9);

        $r11 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = "42";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r13 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeRawQuery(java.lang.Integer)>($r12);

        $r14 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r13);

        $r10[1] = $r14;

        r15 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r11, $r10);

        $r16 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r16.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r15);

        $r17 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r18 = virtualinvoke $r17.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_created_queries");

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r20 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r21 = virtualinvoke $r20.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r23 = newarray (java.lang.Object)[0];

        r25 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r24, $r23);

        $r26 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r26.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r25);

        $r27 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        r28 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: java.util.List sendRawRecordTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,int)>($r27, "42", 1);

        $r29 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r30 = virtualinvoke $r29.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r32.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r25);

        $r33 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r34 = virtualinvoke $r33.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r36 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r36.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r25);

        $r37 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r38 = virtualinvoke $r37.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39);

        $r40 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r40.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r41 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r41.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r25);

        $r42 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomTopologyContext context>;

        $r43 = virtualinvoke $r42.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long getLongMetric(java.lang.String)>("bullet_active_queries");

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r44);

        $r45 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i2 = virtualinvoke $r45.<com.yahoo.bullet.storm.testing.CustomCollector: int getEmittedCount()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 2L);

        $r47 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r46 = newarray (java.lang.Object)[3];

        $r46[0] = "42";

        $r48 = staticinvoke <com.yahoo.bullet.result.Clip: com.yahoo.bullet.result.Clip of(java.util.List)>(r28);

        $r49 = virtualinvoke $r48.<com.yahoo.bullet.result.Clip: java.lang.String asJSON()>();

        $r46[1] = $r49;

        $r50 = <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED>;

        $r46[2] = $r50;

        staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r47, $r46);

        return;
    }

    public void testBatchTuple()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBolt $r1, $r5, $r6, $r10;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.testing.CustomCollector $r3, $r11;
        org.apache.storm.topology.IRichBolt $r4;
        java.lang.Object[] $r7;
        com.yahoo.bullet.storm.TupleClassifier$Type $r8;
        org.apache.storm.tuple.Tuple r9;
        int $i0;
        long $l1;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBolt;

        $r2 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: void <init>(java.lang.String)>("test_config.yaml");

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r4 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(org.apache.storm.topology.IRichBolt,com.yahoo.bullet.storm.testing.CustomCollector)>($r1, $r3);

        $r5 = (com.yahoo.bullet.storm.JoinBolt) $r4;

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r6.<com.yahoo.bullet.storm.JoinBolt: boolean replayCompleted> = 1;

        $r8 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "JoinBolt-18";

        r9 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r8, $r7);

        $r10 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r10.<com.yahoo.bullet.storm.JoinBolt: void execute(org.apache.storm.tuple.Tuple)>(r9);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $i0 = virtualinvoke $r11.<com.yahoo.bullet.storm.testing.CustomCollector: int getAckedCount()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void testBatchInitializeAndRemoveQuery()
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        com.yahoo.bullet.storm.JoinBolt $r1, $r5, $r6, $r7, $r9, $r11, $r12, $r36, $r46, $r47, $r48, $r50, $r52, $r53, $r55, $r61, $r71, $r72, $r74;
        com.yahoo.bullet.storm.BulletStormConfig $r2;
        com.yahoo.bullet.storm.testing.CustomCollector $r3;
        org.apache.storm.topology.IRichBolt $r4;
        int $i0, $i2, $i4, $i6, $i9, $i11, $i13, $i15, $i17, $i20, $i22;
        long $l1, $l3, $l5, $l7, $l8, $l10, $l12, $l14, $l16, $l18, $l19, $l21, $l23;
        java.util.Set $r8, $r13, $r49, $r54, $r73;
        java.util.Map $r10, $r51, $r56, $r75;
        java.util.HashMap $r14;
        java.lang.Integer $r16, $r18, $r20, $r24, $r26, $r28, $r39, $r41, $r64, $r66;
        com.yahoo.bullet.query.Window$Unit $r17, $r19, $r25, $r27;
        com.yahoo.bullet.query.Query $r21, $r29;
        com.yahoo.bullet.pubsub.PubSubMessage $r22, $r30;
        java.lang.Object[] $r32, $r57;
        com.yahoo.bullet.storm.TupleClassifier$Type $r33, $r58;
        java.lang.Long $r34, $r37, $r59, $r62;
        org.mockito.stubbing.OngoingStubbing $r35, $r40, $r44, $r60, $r65, $r69;
        java.lang.Object $r43, $r68;
        org.apache.storm.tuple.Tuple r76, r77;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        $r1 = new com.yahoo.bullet.storm.JoinBolt;

        $r2 = new com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: void <init>(java.lang.String)>("test_config.yaml");

        specialinvoke $r1.<com.yahoo.bullet.storm.JoinBolt: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r2);

        $r3 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.testing.CustomCollector collector>;

        $r4 = staticinvoke <com.yahoo.bullet.storm.testing.ComponentUtils: org.apache.storm.topology.IRichBolt prepare(org.apache.storm.topology.IRichBolt,com.yahoo.bullet.storm.testing.CustomCollector)>($r1, $r3);

        $r5 = (com.yahoo.bullet.storm.JoinBolt) $r4;

        r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt> = $r5;

        $r6 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $i0 = $r6.<com.yahoo.bullet.storm.JoinBolt: int replayedQueriesCount>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 0L);

        $r7 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r8 = $r7.<com.yahoo.bullet.storm.JoinBolt: java.util.Set removedIds>;

        $i2 = interfaceinvoke $r8.<java.util.Set: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 0L);

        $r9 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r10 = virtualinvoke $r9.<com.yahoo.bullet.storm.JoinBolt: java.util.Map getQueries()>();

        $i4 = interfaceinvoke $r10.<java.util.Map: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, 0L);

        $r11 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r11.<com.yahoo.bullet.storm.JoinBolt: void removeQuery(java.lang.String)>("42");

        $r12 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r13 = $r12.<com.yahoo.bullet.storm.JoinBolt: java.util.Set removedIds>;

        $i6 = interfaceinvoke $r13.<java.util.Set: int size()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, 1L);

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r17 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r19 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r21 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeSimpleAggregationFieldFilterQuery(java.io.Serializable,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer)>("b235gf23b", $r16, $r17, $r18, $r19, $r20);

        $r22 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("42", $r21);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("42", $r22);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r25 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r27 = <com.yahoo.bullet.query.Window$Unit: com.yahoo.bullet.query.Window$Unit RECORD>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r29 = staticinvoke <com.yahoo.bullet.query.QueryUtils: com.yahoo.bullet.query.Query makeSimpleAggregationFieldFilterQuery(java.io.Serializable,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer,com.yahoo.bullet.query.Window$Unit,java.lang.Integer)>("b235gf23b", $r24, $r25, $r26, $r27, $r28);

        $r30 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessage makeQueryPubSubMessage(java.lang.String,com.yahoo.bullet.query.Query)>("43", $r29);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("43", $r30);

        $r33 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE>;

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = "JoinBolt-18";

        r76 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r33, $r32);

        $r34 = interfaceinvoke r76.<org.apache.storm.tuple.Tuple: java.lang.Long getLong(int)>(1);

        $r35 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r34);

        $r36 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $l8 = $r36.<com.yahoo.bullet.storm.JoinBolt: long startTimestamp>;

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        interfaceinvoke $r35.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r37);

        $r39 = interfaceinvoke r76.<org.apache.storm.tuple.Tuple: java.lang.Integer getInteger(int)>(2);

        $r40 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r39);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r40.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r41);

        $r43 = interfaceinvoke r76.<org.apache.storm.tuple.Tuple: java.lang.Object getValue(int)>(3);

        $r44 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r43);

        interfaceinvoke $r44.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r14);

        $r46 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r46.<com.yahoo.bullet.storm.JoinBolt: void onBatch(org.apache.storm.tuple.Tuple)>(r76);

        $r47 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $i9 = $r47.<com.yahoo.bullet.storm.JoinBolt: int replayedQueriesCount>;

        $l10 = (long) $i9;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, 1L);

        $r48 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r49 = $r48.<com.yahoo.bullet.storm.JoinBolt: java.util.Set removedIds>;

        $i11 = interfaceinvoke $r49.<java.util.Set: int size()>();

        $l12 = (long) $i11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l12, 0L);

        $r50 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r51 = virtualinvoke $r50.<com.yahoo.bullet.storm.JoinBolt: java.util.Map getQueries()>();

        $i13 = interfaceinvoke $r51.<java.util.Map: int size()>();

        $l14 = (long) $i13;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l14, 1L);

        $r52 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r52.<com.yahoo.bullet.storm.JoinBolt: void removeQuery(java.lang.String)>("43");

        $r53 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r54 = $r53.<com.yahoo.bullet.storm.JoinBolt: java.util.Set removedIds>;

        $i15 = interfaceinvoke $r54.<java.util.Set: int size()>();

        $l16 = (long) $i15;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l16, 1L);

        $r55 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r56 = virtualinvoke $r55.<com.yahoo.bullet.storm.JoinBolt: java.util.Map getQueries()>();

        $i17 = interfaceinvoke $r56.<java.util.Map: int size()>();

        $l18 = (long) $i17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l18, 0L);

        $r58 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE>;

        $r57 = newarray (java.lang.Object)[1];

        $r57[0] = "JoinBolt-18";

        r77 = staticinvoke <com.yahoo.bullet.storm.testing.TupleUtils: org.apache.storm.tuple.Tuple makeIDTuple(com.yahoo.bullet.storm.TupleClassifier$Type,java.lang.Object[])>($r58, $r57);

        $r59 = interfaceinvoke r77.<org.apache.storm.tuple.Tuple: java.lang.Long getLong(int)>(1);

        $r60 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r59);

        $r61 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $l19 = $r61.<com.yahoo.bullet.storm.JoinBolt: long startTimestamp>;

        $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l19);

        interfaceinvoke $r60.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r62);

        $r64 = interfaceinvoke r77.<org.apache.storm.tuple.Tuple: java.lang.Integer getInteger(int)>(2);

        $r65 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r64);

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r65.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r66);

        $r68 = interfaceinvoke r77.<org.apache.storm.tuple.Tuple: java.lang.Object getValue(int)>(3);

        $r69 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r68);

        interfaceinvoke $r69.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(null);

        $r71 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        virtualinvoke $r71.<com.yahoo.bullet.storm.JoinBolt: void onBatch(org.apache.storm.tuple.Tuple)>(r77);

        $r72 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r73 = $r72.<com.yahoo.bullet.storm.JoinBolt: java.util.Set removedIds>;

        $i20 = interfaceinvoke $r73.<java.util.Set: int size()>();

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l21, 0L);

        $r74 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r75 = virtualinvoke $r74.<com.yahoo.bullet.storm.JoinBolt: java.util.Map getQueries()>();

        $i22 = interfaceinvoke $r75.<java.util.Map: int size()>();

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l23, 0L);

        return;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testTopK$12(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0, $i1;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $i1 = i0 % 2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("A", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testTopK$11(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0, $i1;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $i1 = i0 % 8;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("A", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testDistribution$10(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testDistribution$9(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testGroupBy$8(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2, $r4;
        int i0, $i1, $i2;
        java.lang.Integer $r1, $r3;
        com.yahoo.bullet.record.BulletRecord $r5;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $i1 = i0 % 16;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("fieldA", $r1);

        $i2 = i0 / 16;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("fieldB", $r3);

        $r5 = virtualinvoke $r4.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r5;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testGroupBy$7(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2, $r4;
        int i0, $i1, $i2;
        java.lang.Integer $r1, $r3;
        com.yahoo.bullet.record.BulletRecord $r5;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $i1 = i0 % 16;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("fieldA", $r1);

        $i2 = i0 / 16;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("fieldB", $r3);

        $r5 = virtualinvoke $r4.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r5;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testCountDistinct$6(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public static com.yahoo.bullet.record.BulletRecord lambda$testCountDistinct$5(int)
    {
        com.yahoo.bullet.result.RecordBox $r0, $r2;
        int i0;
        java.lang.Integer $r1;
        com.yahoo.bullet.record.BulletRecord $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox add(java.lang.String,java.io.Serializable)>("field", $r1);

        $r3 = virtualinvoke $r2.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        return $r3;
    }

    public void lambda$testCounting$4(int)
    {
        com.yahoo.bullet.storm.JoinBoltTest r0;
        int i0;
        com.yahoo.bullet.storm.JoinBolt $r1;
        byte[] $r2;
        java.util.List $r3;

        r0 := @this: com.yahoo.bullet.storm.JoinBoltTest;

        i0 := @parameter0: int;

        $r1 = r0.<com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.storm.JoinBolt bolt>;

        $r2 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: byte[] getGroupDataWithCount(java.lang.String,int)>("cnt", i0);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: void sendRawByteTuplesTo(org.apache.storm.topology.IRichBolt,java.lang.String,java.util.List)>($r1, "42", $r3);

        return;
    }

    public static boolean lambda$wasMetadataEmittedTo$3(org.apache.storm.tuple.Tuple, com.yahoo.bullet.storm.testing.CustomCollector$Triplet)
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.util.List $r1;
        org.apache.storm.tuple.Tuple r2;
        boolean $z0;

        r2 := @parameter0: org.apache.storm.tuple.Tuple;

        r0 := @parameter1: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r1 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List getTuple()>();

        $z0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: boolean metadataTupleEquals(java.util.List,org.apache.storm.tuple.Tuple)>($r1, r2);

        return $z0;
    }

    public static boolean lambda$wasResultEmitted$2(org.apache.storm.tuple.Tuple, java.util.List)
    {
        java.util.List r0;
        org.apache.storm.tuple.Tuple r1;
        boolean $z0;

        r1 := @parameter0: org.apache.storm.tuple.Tuple;

        r0 := @parameter1: java.util.List;

        $z0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: boolean resultTupleEquals(java.util.List,org.apache.storm.tuple.Tuple)>(r0, r1);

        return $z0;
    }

    public static boolean lambda$wasResultEmittedTo$1(org.apache.storm.tuple.Tuple, com.yahoo.bullet.storm.testing.CustomCollector$Triplet)
    {
        com.yahoo.bullet.storm.testing.CustomCollector$Triplet r0;
        java.util.List $r1;
        org.apache.storm.tuple.Tuple r2;
        boolean $z0;

        r2 := @parameter0: org.apache.storm.tuple.Tuple;

        r0 := @parameter1: com.yahoo.bullet.storm.testing.CustomCollector$Triplet;

        $r1 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomCollector$Triplet: java.util.List getTuple()>();

        $z0 = staticinvoke <com.yahoo.bullet.storm.JoinBoltTest: boolean resultTupleEquals(java.util.List,org.apache.storm.tuple.Tuple)>($r1, r2);

        return $z0;
    }

    public static void lambda$getGroupDataWithCount$0(com.yahoo.bullet.querying.aggregations.grouping.GroupData, int)
    {
        com.yahoo.bullet.querying.aggregations.grouping.GroupData r0;
        com.yahoo.bullet.result.RecordBox $r1;
        com.yahoo.bullet.record.BulletRecord $r2;
        int i0;

        r0 := @parameter0: com.yahoo.bullet.querying.aggregations.grouping.GroupData;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.result.RecordBox get()>();

        $r2 = virtualinvoke $r1.<com.yahoo.bullet.result.RecordBox: com.yahoo.bullet.record.BulletRecord getRecord()>();

        virtualinvoke r0.<com.yahoo.bullet.querying.aggregations.grouping.GroupData: void consume(com.yahoo.bullet.record.BulletRecord)>($r2);

        return;
    }

    static void <clinit>()
    {
        com.yahoo.bullet.pubsub.Metadata$Signal $r2, $r4;
        com.yahoo.bullet.pubsub.Metadata $r7, $r8, $r9;
        com.yahoo.bullet.common.BulletConfig $r10;
        com.yahoo.bullet.pubsub.ByteArrayPubSubMessageSerDe $r11;
        com.yahoo.bullet.pubsub.PubSubMessageSerDe $r12;

        <com.yahoo.bullet.storm.JoinBoltTest: int RAW_MAX_SIZE> = 5;

        $r7 = new com.yahoo.bullet.pubsub.Metadata;

        specialinvoke $r7.<com.yahoo.bullet.pubsub.Metadata: void <init>()>();

        <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata EMPTY> = $r7;

        $r8 = new com.yahoo.bullet.pubsub.Metadata;

        $r2 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal COMPLETE>;

        specialinvoke $r8.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r2, null);

        <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata COMPLETED> = $r8;

        $r9 = new com.yahoo.bullet.pubsub.Metadata;

        $r4 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal FAIL>;

        specialinvoke $r9.<com.yahoo.bullet.pubsub.Metadata: void <init>(com.yahoo.bullet.pubsub.Metadata$Signal,java.io.Serializable)>($r4, null);

        <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.Metadata FAILED> = $r9;

        $r11 = new com.yahoo.bullet.pubsub.ByteArrayPubSubMessageSerDe;

        $r10 = new com.yahoo.bullet.common.BulletConfig;

        specialinvoke $r10.<com.yahoo.bullet.common.BulletConfig: void <init>()>();

        specialinvoke $r11.<com.yahoo.bullet.pubsub.ByteArrayPubSubMessageSerDe: void <init>(com.yahoo.bullet.common.BulletConfig)>($r10);

        $r12 = (com.yahoo.bullet.pubsub.PubSubMessageSerDe) $r11;

        <com.yahoo.bullet.storm.JoinBoltTest: com.yahoo.bullet.pubsub.PubSubMessageSerDe querySerDe> = $r12;

        return;
    }
}
