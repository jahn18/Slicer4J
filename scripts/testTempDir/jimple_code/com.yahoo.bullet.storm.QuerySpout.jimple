public class com.yahoo.bullet.storm.QuerySpout extends com.yahoo.bullet.storm.ConfigComponent implements org.apache.storm.topology.IRichSpout
{
    private static final org.slf4j.Logger log;
    private static final long serialVersionUID;
    private transient com.yahoo.bullet.storm.metric.BulletMetrics metrics;
    private transient com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount;
    private transient com.yahoo.bullet.pubsub.Subscriber subscriber;
    private transient org.apache.storm.spout.SpoutOutputCollector collector;
    private transient java.util.Map replays;

    public void <init>(com.yahoo.bullet.storm.BulletStormConfig)
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        com.yahoo.bullet.storm.BulletStormConfig r1;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r1 := @parameter0: com.yahoo.bullet.storm.BulletStormConfig;

        specialinvoke r0.<com.yahoo.bullet.storm.ConfigComponent: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>(r1);

        return;
    }

    public void open(java.util.Map, org.apache.storm.task.TopologyContext, org.apache.storm.spout.SpoutOutputCollector)
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        java.util.Map r1;
        com.yahoo.bullet.storm.BulletStormConfig $r2, $r4, $r7;
        org.apache.storm.task.TopologyContext r3;
        org.apache.storm.spout.SpoutOutputCollector r5;
        com.yahoo.bullet.storm.metric.BulletMetrics $r6, $r8, $r9;
        boolean $z0;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r10;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r1 := @parameter0: java.util.Map;

        r3 := @parameter1: org.apache.storm.task.TopologyContext;

        r5 := @parameter2: org.apache.storm.spout.SpoutOutputCollector;

        $r2 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r2.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.storm.config", r1);

        $r4 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.BulletStormConfig config>;

        virtualinvoke $r4.<com.yahoo.bullet.storm.BulletStormConfig: void set(java.lang.String,java.lang.Object)>("bullet.topology.storm.context", r3);

        r0.<com.yahoo.bullet.storm.QuerySpout: org.apache.storm.spout.SpoutOutputCollector collector> = r5;

        $r6 = new com.yahoo.bullet.storm.metric.BulletMetrics;

        $r7 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.BulletStormConfig config>;

        specialinvoke $r6.<com.yahoo.bullet.storm.metric.BulletMetrics: void <init>(com.yahoo.bullet.storm.BulletStormConfig)>($r7);

        r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics> = $r6;

        $r8 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $z0 = virtualinvoke $r8.<com.yahoo.bullet.storm.metric.BulletMetrics: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r10 = virtualinvoke $r9.<com.yahoo.bullet.storm.metric.BulletMetrics: com.yahoo.bullet.storm.metric.AbsoluteCountMetric registerAbsoluteCountMetric(java.lang.String,org.apache.storm.task.TopologyContext)>("bullet_active_replays", r3);

        r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount> = $r10;

     label1:
        return;
    }

    public void activate()
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        com.yahoo.bullet.storm.BulletStormConfig $r1;
        com.yahoo.bullet.pubsub.Subscriber $r2, $r3;
        org.slf4j.Logger $r4, $r6;
        java.util.HashMap $r5;
        java.lang.Throwable $r7;
        java.lang.RuntimeException $r8;
        com.yahoo.bullet.pubsub.PubSub r9;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

     label1:
        $r1 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.BulletStormConfig config>;

        r9 = staticinvoke <com.yahoo.bullet.pubsub.PubSub: com.yahoo.bullet.pubsub.PubSub 'from'(com.yahoo.bullet.common.BulletConfig)>($r1);

        $r2 = virtualinvoke r9.<com.yahoo.bullet.pubsub.PubSub: com.yahoo.bullet.pubsub.Subscriber getSubscriber()>();

        r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber> = $r2;

        $r4 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        $r3 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Setup PubSub: {} with Subscriber: {}", r9, $r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot create PubSub instance or a Subscriber for it.", $r7);

        throw $r8;

     label4:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays> = $r5;

        $r6 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("QuerySpout activated");

        return;

        catch com.yahoo.bullet.pubsub.PubSubException from label1 to label2 with label3;
    }

    public void deactivate()
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        com.yahoo.bullet.pubsub.Subscriber $r1;
        java.util.Map $r2;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r3;
        com.yahoo.bullet.storm.metric.BulletMetrics $r4;
        java.lang.Exception $r5;
        org.slf4j.Logger $r7;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

     label1:
        $r1 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        interfaceinvoke $r1.<com.yahoo.bullet.pubsub.Subscriber: void close()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Could not close Subscriber.", $r5);

     label4:
        $r2 = r0.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r4 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r3 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount>;

        virtualinvoke $r4.<com.yahoo.bullet.storm.metric.BulletMetrics: void setCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r3, 0L);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void nextTuple()
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        com.yahoo.bullet.pubsub.Subscriber $r1, $r12, $r22;
        com.yahoo.bullet.pubsub.Metadata r2;
        com.yahoo.bullet.pubsub.Metadata$Signal $r3, $r17;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r5, $r9, $r14;
        org.apache.storm.spout.SpoutOutputCollector $r6, $r10, $r15;
        org.slf4j.Logger $r18, $r21, $r24;
        java.io.Serializable $r19;
        java.lang.Long $r20;
        java.lang.Exception $r23;
        java.lang.String $r25, r28;
        com.yahoo.bullet.pubsub.PubSubMessage r26;
        org.apache.storm.tuple.Values $r29, $r30, $r31;
        java.util.List $r32, $r33, $r34;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r26 = null;

     label01:
        $r1 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        r26 = interfaceinvoke $r1.<com.yahoo.bullet.pubsub.Subscriber: com.yahoo.bullet.pubsub.PubSubMessage receive()>();

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        $r24 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        $r25 = virtualinvoke $r23.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String)>($r25);

     label04:
        if r26 != null goto label05;

        staticinvoke <org.apache.storm.utils.Utils: void sleep(long)>(1L);

        return;

     label05:
        r28 = virtualinvoke r26.<com.yahoo.bullet.pubsub.PubSubMessage: java.lang.String getId()>();

        r2 = virtualinvoke r26.<com.yahoo.bullet.pubsub.PubSubMessage: com.yahoo.bullet.pubsub.Metadata getMetadata()>();

        if r2 != null goto label06;

        $r21 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Received message {} without metadata.", r28);

        $r22 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        interfaceinvoke $r22.<com.yahoo.bullet.pubsub.Subscriber: void commit(java.lang.String)>(r28);

        return;

     label06:
        $r3 = virtualinvoke r2.<com.yahoo.bullet.pubsub.Metadata: com.yahoo.bullet.pubsub.Metadata$Signal getSignal()>();

        $z0 = staticinvoke <com.yahoo.bullet.storm.TopologyConstants: boolean isReplaySignal(com.yahoo.bullet.pubsub.Metadata$Signal)>($r3);

        if $z0 == 0 goto label08;

        $r12 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        interfaceinvoke $r12.<com.yahoo.bullet.pubsub.Subscriber: void commit(java.lang.String)>(r28);

        $z2 = virtualinvoke r2.<com.yahoo.bullet.pubsub.Metadata: boolean hasContent()>();

        if $z2 == 0 goto label07;

        $r19 = virtualinvoke r2.<com.yahoo.bullet.pubsub.Metadata: java.io.Serializable getContent()>();

        $r20 = (java.lang.Long) $r19;

        specialinvoke r0.<com.yahoo.bullet.storm.QuerySpout: void handleReplayRequest(java.lang.String,java.lang.Long)>(r28, $r20);

        goto label10;

     label07:
        $r15 = r0.<com.yahoo.bullet.storm.QuerySpout: org.apache.storm.spout.SpoutOutputCollector collector>;

        $r29 = new org.apache.storm.tuple.Values;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r28;

        $r14[1] = r2;

        specialinvoke $r29.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r14);

        $r32 = (java.util.List) $r29;

        virtualinvoke $r15.<org.apache.storm.spout.SpoutOutputCollector: java.util.List emit(java.lang.String,java.util.List)>("metadata", $r32);

        $r18 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        $r17 = <com.yahoo.bullet.pubsub.Metadata$Signal: com.yahoo.bullet.pubsub.Metadata$Signal REPLAY>;

        interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received {} signal. Relaying to downstream bolts.", $r17);

        goto label10;

     label08:
        $z1 = virtualinvoke r26.<com.yahoo.bullet.pubsub.PubSubMessage: boolean hasContent()>();

        if $z1 == 0 goto label09;

        $r10 = r0.<com.yahoo.bullet.storm.QuerySpout: org.apache.storm.spout.SpoutOutputCollector collector>;

        $r30 = new org.apache.storm.tuple.Values;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r28;

        $r9[1] = r26;

        specialinvoke $r30.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r9);

        $r33 = (java.util.List) $r30;

        virtualinvoke $r10.<org.apache.storm.spout.SpoutOutputCollector: java.util.List emit(java.lang.String,java.util.List,java.lang.Object)>("default", $r33, r28);

        goto label10;

     label09:
        $r6 = r0.<com.yahoo.bullet.storm.QuerySpout: org.apache.storm.spout.SpoutOutputCollector collector>;

        $r31 = new org.apache.storm.tuple.Values;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r28;

        $r5[1] = r2;

        specialinvoke $r31.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r5);

        $r34 = (java.util.List) $r31;

        virtualinvoke $r6.<org.apache.storm.spout.SpoutOutputCollector: java.util.List emit(java.lang.String,java.util.List,java.lang.Object)>("metadata", $r34, r28);

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public void declareOutputFields(org.apache.storm.topology.OutputFieldsDeclarer)
    {
        org.apache.storm.topology.OutputFieldsDeclarer r0;
        org.apache.storm.tuple.Fields $r1, $r3, $r5;
        java.lang.String[] $r2, $r4, $r6;
        com.yahoo.bullet.storm.QuerySpout r7;

        r7 := @this: com.yahoo.bullet.storm.QuerySpout;

        r0 := @parameter0: org.apache.storm.topology.OutputFieldsDeclarer;

        $r1 = new org.apache.storm.tuple.Fields;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "id";

        $r2[1] = "query";

        specialinvoke $r1.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r2);

        interfaceinvoke r0.<org.apache.storm.topology.OutputFieldsDeclarer: void declareStream(java.lang.String,org.apache.storm.tuple.Fields)>("default", $r1);

        $r3 = new org.apache.storm.tuple.Fields;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "id";

        $r4[1] = "metadata";

        specialinvoke $r3.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r4);

        interfaceinvoke r0.<org.apache.storm.topology.OutputFieldsDeclarer: void declareStream(java.lang.String,org.apache.storm.tuple.Fields)>("metadata", $r3);

        $r5 = new org.apache.storm.tuple.Fields;

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "id";

        $r6[1] = "timestamp";

        $r6[2] = "ack";

        specialinvoke $r5.<org.apache.storm.tuple.Fields: void <init>(java.lang.String[])>($r6);

        interfaceinvoke r0.<org.apache.storm.topology.OutputFieldsDeclarer: void declareStream(java.lang.String,org.apache.storm.tuple.Fields)>("replay", $r5);

        return;
    }

    public void ack(java.lang.Object)
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;
        com.yahoo.bullet.storm.QuerySpout$Replay r4;
        java.lang.String $r5;
        com.yahoo.bullet.pubsub.Subscriber $r6;
        org.slf4j.Logger $r7;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.yahoo.bullet.storm.QuerySpout$Replay) $r3;

        if r4 == null goto label1;

        $r7 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received replay loop ack for {}", r1);

        specialinvoke r0.<com.yahoo.bullet.storm.QuerySpout: void emitReplay(com.yahoo.bullet.storm.QuerySpout$Replay,boolean)>(r4, 1);

        return;

     label1:
        $r6 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        $r5 = (java.lang.String) r1;

        interfaceinvoke $r6.<com.yahoo.bullet.pubsub.Subscriber: void commit(java.lang.String)>($r5);

        return;
    }

    public void fail(java.lang.Object)
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;
        com.yahoo.bullet.storm.QuerySpout$Replay r4;
        java.lang.String $r5;
        com.yahoo.bullet.pubsub.Subscriber $r6;
        org.slf4j.Logger $r7;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r8;
        com.yahoo.bullet.storm.metric.BulletMetrics $r9;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.yahoo.bullet.storm.QuerySpout$Replay) $r3;

        if r4 == null goto label1;

        $r7 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received replay loop fail for {}", r1);

        staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: boolean access$002(com.yahoo.bullet.storm.QuerySpout$Replay,boolean)>(r4, 1);

        $r9 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r8 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount>;

        virtualinvoke $r9.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r8, -1L);

        return;

     label1:
        $r6 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        $r5 = (java.lang.String) r1;

        interfaceinvoke $r6.<com.yahoo.bullet.pubsub.Subscriber: void fail(java.lang.String)>($r5);

        return;
    }

    public void close()
    {
        com.yahoo.bullet.storm.QuerySpout r0;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        return;
    }

    private void handleReplayRequest(java.lang.String, java.lang.Long)
    {
        java.lang.String r0;
        org.slf4j.Logger $r1, $r7, $r13, $r14, $r15;
        com.yahoo.bullet.storm.QuerySpout r2;
        java.util.Map $r3, $r17;
        java.lang.Object $r4;
        java.lang.Long r5;
        long $l0, $l1, $l3, $l4, $l7, $l8, $l10, $l12;
        byte $b2, $b5, $b9;
        java.lang.Object[] $r6;
        java.lang.Boolean $r9, $r10;
        boolean $z0, $z1, $z3, $z4;
        com.yahoo.bullet.storm.metric.AbsoluteCountMetric $r11, $r19;
        com.yahoo.bullet.storm.metric.BulletMetrics $r12, $r20;
        com.yahoo.bullet.storm.QuerySpout$Replay $r16, r21;

        r2 := @this: com.yahoo.bullet.storm.QuerySpout;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Long;

        $r1 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received replay request with id {}", r0);

        $r3 = r2.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r21 = (com.yahoo.bullet.storm.QuerySpout$Replay) $r4;

        if r21 != null goto label1;

        $r15 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting message loop for {}", r0);

        $r16 = new com.yahoo.bullet.storm.QuerySpout$Replay;

        $l12 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        specialinvoke $r16.<com.yahoo.bullet.storm.QuerySpout$Replay: void <init>(java.lang.String,long,boolean)>(r0, $l12, 0);

        $r17 = r2.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r16);

        specialinvoke r2.<com.yahoo.bullet.storm.QuerySpout: void emitReplay(com.yahoo.bullet.storm.QuerySpout$Replay,boolean)>($r16, 0);

        $r20 = r2.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r19 = r2.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount>;

        virtualinvoke $r20.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r19, 1L);

        goto label6;

     label1:
        $l0 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l1 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: long access$100(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label2;

        $r14 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Ignoring outdated replay request for {}.", r0);

        goto label6;

     label2:
        $l3 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l4 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: long access$100(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label3;

        $z3 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: boolean access$000(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        if $z3 != 0 goto label3;

        $r13 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Ignoring replay request for {} since replay loop is already in progress.", r0);

        goto label6;

     label3:
        $r7 = <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r0;

        $l7 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l8 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: long access$100(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        $b9 = $l7 cmp $l8;

        if $b9 <= 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r6[1] = $r9;

        $z0 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: boolean access$000(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6[2] = $r10;

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Restarting replay loop for {} (new replay request: {}, replay stopped: {})", $r6);

        $l10 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: long access$102(com.yahoo.bullet.storm.QuerySpout$Replay,long)>(r21, $l10);

        $z1 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: boolean access$000(com.yahoo.bullet.storm.QuerySpout$Replay)>(r21);

        if $z1 == 0 goto label6;

        staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: boolean access$002(com.yahoo.bullet.storm.QuerySpout$Replay,boolean)>(r21, 0);

        specialinvoke r2.<com.yahoo.bullet.storm.QuerySpout: void emitReplay(com.yahoo.bullet.storm.QuerySpout$Replay,boolean)>(r21, 0);

        $r12 = r2.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.BulletMetrics metrics>;

        $r11 = r2.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.storm.metric.AbsoluteCountMetric activeReplaysCount>;

        virtualinvoke $r12.<com.yahoo.bullet.storm.metric.BulletMetrics: void updateCount(com.yahoo.bullet.storm.metric.AbsoluteCountMetric,long)>($r11, 1L);

     label6:
        return;
    }

    private void emitReplay(com.yahoo.bullet.storm.QuerySpout$Replay, boolean)
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        java.lang.Object[] $r2;
        com.yahoo.bullet.storm.QuerySpout$Replay r3;
        org.apache.storm.spout.SpoutOutputCollector $r4;
        java.lang.String $r5, $r8;
        long $l0;
        java.lang.Long $r6;
        boolean z0;
        java.lang.Boolean $r7;
        org.apache.storm.tuple.Values $r10;
        java.util.List $r11;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        r3 := @parameter0: com.yahoo.bullet.storm.QuerySpout$Replay;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.yahoo.bullet.storm.QuerySpout: org.apache.storm.spout.SpoutOutputCollector collector>;

        $r10 = new org.apache.storm.tuple.Values;

        $r2 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: java.lang.String access$200(com.yahoo.bullet.storm.QuerySpout$Replay)>(r3);

        $r2[0] = $r5;

        $l0 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: long access$100(com.yahoo.bullet.storm.QuerySpout$Replay)>(r3);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[1] = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2[2] = $r7;

        specialinvoke $r10.<org.apache.storm.tuple.Values: void <init>(java.lang.Object[])>($r2);

        $r8 = staticinvoke <com.yahoo.bullet.storm.QuerySpout$Replay: java.lang.String access$200(com.yahoo.bullet.storm.QuerySpout$Replay)>(r3);

        $r11 = (java.util.List) $r10;

        virtualinvoke $r4.<org.apache.storm.spout.SpoutOutputCollector: java.util.List emit(java.lang.String,java.util.List,java.lang.Object)>("replay", $r11, $r8);

        return;
    }

    com.yahoo.bullet.pubsub.Subscriber getSubscriber()
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        com.yahoo.bullet.pubsub.Subscriber $r1;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        $r1 = r0.<com.yahoo.bullet.storm.QuerySpout: com.yahoo.bullet.pubsub.Subscriber subscriber>;

        return $r1;
    }

    java.util.Map getReplays()
    {
        com.yahoo.bullet.storm.QuerySpout r0;
        java.util.Map $r1;

        r0 := @this: com.yahoo.bullet.storm.QuerySpout;

        $r1 = r0.<com.yahoo.bullet.storm.QuerySpout: java.util.Map replays>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.yahoo.bullet.storm.QuerySpout: long serialVersionUID> = 504190523090872490L;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/yahoo/bullet/storm/QuerySpout;");

        <com.yahoo.bullet.storm.QuerySpout: org.slf4j.Logger log> = $r0;

        return;
    }
}
