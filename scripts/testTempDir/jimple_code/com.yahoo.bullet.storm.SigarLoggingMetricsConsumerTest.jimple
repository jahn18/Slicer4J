public class com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest extends java.lang.Object
{

    public void <init>()
    {
        com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest r0;

        r0 := @this: com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testDefaults()
    {
        com.yahoo.bullet.storm.SigarLoggingMetricsConsumer $r0;
        java.util.HashMap $r2;
        boolean $z0;
        com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest r4;

        r4 := @this: com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest;

        $r0 = new com.yahoo.bullet.storm.SigarLoggingMetricsConsumer;

        specialinvoke $r0.<com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        virtualinvoke $r0.<com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: void prepare(java.util.Map,java.lang.Object,org.apache.storm.task.TopologyContext,org.apache.storm.task.IErrorReporter)>($r2, null, null, null);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    public void testRegister()
    {
        org.apache.storm.Config $r0;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r9, $r11;
        java.util.Map r7, $r8, r12;
        java.util.List r10;
        int $i0;
        long $l1;
        java.util.HashMap $r13;
        java.lang.Class $r15;
        java.lang.String $r16;
        java.lang.Long $r18;
        com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest r21;

        r21 := @this: com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest;

        $r0 = new org.apache.storm.Config;

        specialinvoke $r0.<org.apache.storm.Config: void <init>()>();

        $r2 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.worker.metrics");

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.metrics.consumer.register");

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r3);

        staticinvoke <com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: void register(org.apache.storm.Config,com.yahoo.bullet.storm.BulletStormConfig)>($r0, null);

        $r4 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.worker.metrics");

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.metrics.consumer.register");

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.worker.metrics");

        r7 = (java.util.Map) $r6;

        $r8 = <com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: java.util.Map METRICS>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r8);

        $r9 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.metrics.consumer.register");

        r10 = (java.util.List) $r9;

        $i0 = interfaceinvoke r10.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r11 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        r12 = (java.util.Map) $r11;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r15 = class "Lorg/apache/storm/metric/LoggingMetricsConsumer;";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("class", $r16);

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parallelism.hint", $r18);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("argument", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r12, $r13);

        return;
    }

    public void testMetricsAdditionNotReplacement()
    {
        org.apache.storm.Config $r0;
        java.util.HashMap $r2;
        java.lang.Object $r6, $r7, $r15;
        java.util.Map r8, $r10, $r13;
        java.util.Set $r9, $r11;
        boolean $z0, $z1;
        java.util.Collection $r12, $r14;
        com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest r16;

        r16 := @this: com.yahoo.bullet.storm.SigarLoggingMetricsConsumerTest;

        $r0 = new org.apache.storm.Config;

        specialinvoke $r0.<org.apache.storm.Config: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo", "foo.bar.baz");

        virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object put(java.lang.Object,java.lang.Object)>("topology.worker.metrics", $r2);

        staticinvoke <com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: void register(org.apache.storm.Config,com.yahoo.bullet.storm.BulletStormConfig)>($r0, null);

        $r6 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.worker.metrics");

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r0.<org.apache.storm.Config: java.lang.Object get(java.lang.Object)>("topology.worker.metrics");

        r8 = (java.util.Map) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = <com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: java.util.Map METRICS>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean containsAll(java.util.Collection)>($r11);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r12 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>();

        $r13 = <com.yahoo.bullet.storm.SigarLoggingMetricsConsumer: java.util.Map METRICS>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $z1 = interfaceinvoke $r12.<java.util.Collection: boolean containsAll(java.util.Collection)>($r14);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r15 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, "foo.bar.baz");

        return;
    }
}
