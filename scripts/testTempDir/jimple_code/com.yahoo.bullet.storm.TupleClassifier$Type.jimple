public final enum class com.yahoo.bullet.storm.TupleClassifier$Type extends java.lang.Enum
{
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type METADATA_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type RECORD_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type ERROR_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type REPLAY_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE;
    public static final enum com.yahoo.bullet.storm.TupleClassifier$Type UNKNOWN_TUPLE;
    private java.lang.String stream;
    private java.lang.String component;
    private static final com.yahoo.bullet.storm.TupleClassifier$Type[] $VALUES;

    public static com.yahoo.bullet.storm.TupleClassifier$Type[] values()
    {
        com.yahoo.bullet.storm.TupleClassifier$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.yahoo.bullet.storm.TupleClassifier$Type[]) $r1;

        return $r2;
    }

    public static com.yahoo.bullet.storm.TupleClassifier$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.yahoo.bullet.storm.TupleClassifier$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/yahoo/bullet/storm/TupleClassifier$Type;", r0);

        $r2 = (com.yahoo.bullet.storm.TupleClassifier$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.yahoo.bullet.storm.TupleClassifier$Type r0;
        java.lang.String r1, r2, r3;
        int i0;

        r0 := @this: com.yahoo.bullet.storm.TupleClassifier$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String component> = r2;

        r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String stream> = r3;

        return;
    }

    public boolean isMe(org.apache.storm.tuple.Tuple)
    {
        com.yahoo.bullet.storm.TupleClassifier$Type r0;
        org.apache.storm.tuple.Tuple r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.yahoo.bullet.storm.TupleClassifier$Type;

        r1 := @parameter0: org.apache.storm.tuple.Tuple;

        $r2 = r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String component>;

        $r3 = interfaceinvoke r1.<org.apache.storm.tuple.Tuple: java.lang.String getSourceComponent()>();

        $z0 = specialinvoke r0.<com.yahoo.bullet.storm.TupleClassifier$Type: boolean isEqualIfSet(java.lang.String,java.lang.String)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String stream>;

        $r5 = interfaceinvoke r1.<org.apache.storm.tuple.Tuple: java.lang.String getSourceStreamId()>();

        $z1 = specialinvoke r0.<com.yahoo.bullet.storm.TupleClassifier$Type: boolean isEqualIfSet(java.lang.String,java.lang.String)>($r4, $r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private boolean isEqualIfSet(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1;
        com.yahoo.bullet.storm.TupleClassifier$Type r2;

        r2 := @this: com.yahoo.bullet.storm.TupleClassifier$Type;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String getStream()
    {
        com.yahoo.bullet.storm.TupleClassifier$Type r0;
        java.lang.String $r1;

        r0 := @this: com.yahoo.bullet.storm.TupleClassifier$Type;

        $r1 = r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String stream>;

        return $r1;
    }

    public java.lang.String getComponent()
    {
        com.yahoo.bullet.storm.TupleClassifier$Type r0;
        java.lang.String $r1;

        r0 := @this: com.yahoo.bullet.storm.TupleClassifier$Type;

        $r1 = r0.<com.yahoo.bullet.storm.TupleClassifier$Type: java.lang.String component>;

        return $r1;
    }

    static void <clinit>()
    {
        com.yahoo.bullet.storm.TupleClassifier$Type $r0, $r2, $r4, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        java.lang.String $r1, $r3, $r5, $r8, $r10, $r12, $r14, $r16, $r18;
        com.yahoo.bullet.storm.TupleClassifier$Type[] $r20;

        $r0 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r1 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String TICK_COMPONENT>;

        specialinvoke $r0.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("TICK_TUPLE", 0, $r1, "default");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE> = $r0;

        $r2 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r3 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String QUERY_COMPONENT>;

        specialinvoke $r2.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("QUERY_TUPLE", 1, $r3, "default");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE> = $r2;

        $r4 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r5 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String QUERY_COMPONENT>;

        specialinvoke $r4.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("METADATA_TUPLE", 2, $r5, "metadata");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type METADATA_TUPLE> = $r4;

        $r6 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        specialinvoke $r6.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("RECORD_TUPLE", 3, null, "default");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RECORD_TUPLE> = $r6;

        $r7 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r8 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String FILTER_COMPONENT>;

        specialinvoke $r7.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("ERROR_TUPLE", 4, $r8, "error");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type ERROR_TUPLE> = $r7;

        $r9 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r10 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String FILTER_COMPONENT>;

        specialinvoke $r9.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("DATA_TUPLE", 5, $r10, "default");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE> = $r9;

        $r11 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r12 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String JOIN_COMPONENT>;

        specialinvoke $r11.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("RESULT_TUPLE", 6, $r12, "default");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE> = $r11;

        $r13 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r14 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String JOIN_COMPONENT>;

        specialinvoke $r13.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("FEEDBACK_TUPLE", 7, $r14, "feedback");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE> = $r13;

        $r15 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r16 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String QUERY_COMPONENT>;

        specialinvoke $r15.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("REPLAY_TUPLE", 8, $r16, "replay");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type REPLAY_TUPLE> = $r15;

        $r17 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        $r18 = <com.yahoo.bullet.storm.TopologyConstants: java.lang.String REPLAY_COMPONENT>;

        specialinvoke $r17.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("BATCH_TUPLE", 9, $r18, "replay");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE> = $r17;

        $r19 = new com.yahoo.bullet.storm.TupleClassifier$Type;

        specialinvoke $r19.<com.yahoo.bullet.storm.TupleClassifier$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>("UNKNOWN_TUPLE", 10, "", "");

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type UNKNOWN_TUPLE> = $r19;

        $r20 = newarray (com.yahoo.bullet.storm.TupleClassifier$Type)[11];

        $r21 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type TICK_TUPLE>;

        $r20[0] = $r21;

        $r22 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type QUERY_TUPLE>;

        $r20[1] = $r22;

        $r23 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type METADATA_TUPLE>;

        $r20[2] = $r23;

        $r24 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RECORD_TUPLE>;

        $r20[3] = $r24;

        $r25 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type ERROR_TUPLE>;

        $r20[4] = $r25;

        $r26 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type DATA_TUPLE>;

        $r20[5] = $r26;

        $r27 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type RESULT_TUPLE>;

        $r20[6] = $r27;

        $r28 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type FEEDBACK_TUPLE>;

        $r20[7] = $r28;

        $r29 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type REPLAY_TUPLE>;

        $r20[8] = $r29;

        $r30 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type BATCH_TUPLE>;

        $r20[9] = $r30;

        $r31 = <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type UNKNOWN_TUPLE>;

        $r20[10] = $r31;

        <com.yahoo.bullet.storm.TupleClassifier$Type: com.yahoo.bullet.storm.TupleClassifier$Type[] $VALUES> = $r20;

        return;
    }
}
