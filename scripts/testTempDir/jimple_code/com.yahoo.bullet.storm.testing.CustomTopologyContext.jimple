public class com.yahoo.bullet.storm.testing.CustomTopologyContext extends org.apache.storm.task.TopologyContext
{
    private java.util.Map registeredMetrics;
    private java.util.List componentTasks;
    private java.lang.String componentID;
    private int taskIndex;
    private int taskID;

    public void <init>(java.util.List, java.lang.String, int, int)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.util.HashMap $r1, $r2;
        java.util.List r3;
        java.lang.String r4;
        int i0, i1;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r3 := @parameter0: java.util.List;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.storm.task.TopologyContext: void <init>(org.apache.storm.generated.StormTopology,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.concurrent.atomic.AtomicBoolean,org.apache.storm.metrics2.StormMetricRegistry)>(null, $r1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.Map registeredMetrics> = $r2;

        r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.List componentTasks> = r3;

        r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.String componentID> = r4;

        r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: int taskIndex> = i0;

        r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: int taskID> = i1;

        return;
    }

    public void <init>(java.util.List, java.lang.String, int)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.util.List r1;
        java.lang.String r2;
        int i0;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: void <init>(java.util.List,java.lang.String,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>()
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: void <init>(java.util.List,java.lang.String,int)>(null, null, 0);

        return;
    }

    public org.apache.storm.metric.api.IMetric registerMetric(java.lang.String, org.apache.storm.metric.api.IMetric, int)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        int i0;
        java.util.Map $r1, r5, $r9;
        java.lang.Integer $r2, $r10;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.String r6;
        org.apache.storm.metric.api.IMetric r7;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.storm.metric.api.IMetric;

        i0 := @parameter2: int;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.Map registeredMetrics>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, $r3);

        r5 = (java.util.Map) $r4;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7);

        $r9 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.Map registeredMetrics>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r10, r5);

        return r7;
    }

    public org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.stream.Stream $r3, $r5, $r8;
        java.util.function.Function $r4;
        java.lang.String r6;
        java.util.function.Predicate $r7;
        java.util.Optional r9;
        boolean $z0;
        java.lang.Object $r10, $r12;
        java.util.Map$Entry $r11;
        org.apache.storm.metric.api.IMetric $r13;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.Map registeredMetrics>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.stream.Stream stream()>();

        $r4 = staticinvoke <com.yahoo.bullet.storm.testing.CustomTopologyContext$lambda_getRegisteredMetricByName_0__105: java.util.function.Function bootstrap$()>();

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>($r4);

        $r7 = staticinvoke <com.yahoo.bullet.storm.testing.CustomTopologyContext$lambda_getRegisteredMetricByName_1__107: java.util.function.Predicate bootstrap$(java.lang.String)>(r6);

        $r8 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);

        r9 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $z0 = virtualinvoke r9.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r9.<java.util.Optional: java.lang.Object get()>();

        $r11 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.storm.metric.api.IMetric) $r12;

        goto label2;

     label1:
        $r13 = null;

     label2:
        return $r13;
    }

    public org.apache.storm.metric.api.IMetric getRegisteredMetricInTimeBucket(java.lang.Integer, java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.Integer r1;
        java.util.Map $r2, $r3, $r5;
        java.lang.Object $r4, $r12, $r14;
        java.util.Set $r6;
        java.util.stream.Stream $r7, $r10;
        java.lang.String r8;
        java.util.function.Predicate $r9;
        java.util.Optional r11;
        boolean $z0;
        java.util.Map$Entry $r13;
        org.apache.storm.metric.api.IMetric $r15;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.Integer;

        r8 := @parameter1: java.lang.String;

        $r2 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.Map registeredMetrics>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r1, $r3);

        $r5 = (java.util.Map) $r4;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.stream.Stream stream()>();

        $r9 = staticinvoke <com.yahoo.bullet.storm.testing.CustomTopologyContext$lambda_getRegisteredMetricInTimeBucket_2__106: java.util.function.Predicate bootstrap$(java.lang.String)>(r8);

        $r10 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r9);

        r11 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $z0 = virtualinvoke r11.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r11.<java.util.Optional: java.lang.Object get()>();

        $r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (org.apache.storm.metric.api.IMetric) $r14;

        goto label2;

     label1:
        $r15 = null;

     label2:
        return $r15;
    }

    private java.lang.Number fetchResult(org.apache.storm.metric.api.IMetric)
    {
        org.apache.storm.metric.api.IMetric r0;
        java.lang.Object $r1;
        com.yahoo.bullet.storm.testing.CustomTopologyContext r2;
        java.lang.Number $r3;

        r2 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r0 := @parameter0: org.apache.storm.metric.api.IMetric;

        if r0 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.storm.metric.api.IMetric: java.lang.Object getValueAndReset()>();

        $r3 = (java.lang.Number) $r1;

     label2:
        return $r3;
    }

    private java.lang.Long fetchDimensionResult(com.yahoo.bullet.storm.metric.MapCountMetric, java.lang.String)
    {
        com.yahoo.bullet.storm.metric.MapCountMetric r0;
        java.lang.Object $r1, $r4;
        java.lang.String r2;
        java.util.Map $r3;
        com.yahoo.bullet.storm.testing.CustomTopologyContext r5;
        java.lang.Long $r6;

        r5 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r0 := @parameter0: com.yahoo.bullet.storm.metric.MapCountMetric;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.yahoo.bullet.storm.metric.MapCountMetric: java.lang.Object getValueAndReset()>();

        $r3 = (java.util.Map) $r1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (java.lang.Long) $r4;

     label2:
        return $r6;
    }

    public java.lang.Double getDoubleMetric(java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.String r1;
        org.apache.storm.metric.api.IMetric $r2;
        java.lang.Number $r3;
        java.lang.Double $r4;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Number fetchResult(org.apache.storm.metric.api.IMetric)>($r2);

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public java.lang.Double getDoubleMetric(java.lang.Integer, java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.Integer r1;
        java.lang.String r2;
        org.apache.storm.metric.api.IMetric $r3;
        java.lang.Number $r4;
        java.lang.Double $r5;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricInTimeBucket(java.lang.Integer,java.lang.String)>(r1, r2);

        $r4 = specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Number fetchResult(org.apache.storm.metric.api.IMetric)>($r3);

        $r5 = (java.lang.Double) $r4;

        return $r5;
    }

    public java.lang.Long getLongMetric(java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.String r1;
        org.apache.storm.metric.api.IMetric $r2;
        java.lang.Number $r3;
        java.lang.Long $r4;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Number fetchResult(org.apache.storm.metric.api.IMetric)>($r2);

        $r4 = (java.lang.Long) $r3;

        return $r4;
    }

    public java.lang.Long getLongMetric(java.lang.Integer, java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.Integer r1;
        java.lang.String r2;
        org.apache.storm.metric.api.IMetric $r3;
        java.lang.Number $r4;
        java.lang.Long $r5;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricInTimeBucket(java.lang.Integer,java.lang.String)>(r1, r2);

        $r4 = specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Number fetchResult(org.apache.storm.metric.api.IMetric)>($r3);

        $r5 = (java.lang.Long) $r4;

        return $r5;
    }

    public java.lang.Long getDimensionLongMetric(java.lang.String, java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.String r1, r3;
        org.apache.storm.metric.api.IMetric $r2;
        com.yahoo.bullet.storm.metric.MapCountMetric $r4;
        java.lang.Long $r5;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: org.apache.storm.metric.api.IMetric getRegisteredMetricByName(java.lang.String)>(r1);

        $r4 = (com.yahoo.bullet.storm.metric.MapCountMetric) $r2;

        $r5 = specialinvoke r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.Long fetchDimensionResult(com.yahoo.bullet.storm.metric.MapCountMetric,java.lang.String)>($r4, r3);

        return $r5;
    }

    public java.util.List getComponentTasks(java.lang.String)
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.util.List $r1;
        java.lang.String r2;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.util.List componentTasks>;

        return $r1;
    }

    public java.lang.String getThisComponentId()
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        java.lang.String $r1;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        $r1 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: java.lang.String componentID>;

        return $r1;
    }

    public int getThisTaskIndex()
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        int $i0;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        $i0 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: int taskIndex>;

        return $i0;
    }

    public int getThisTaskId()
    {
        com.yahoo.bullet.storm.testing.CustomTopologyContext r0;
        int $i0;

        r0 := @this: com.yahoo.bullet.storm.testing.CustomTopologyContext;

        $i0 = r0.<com.yahoo.bullet.storm.testing.CustomTopologyContext: int taskID>;

        return $i0;
    }

    public static boolean lambda$getRegisteredMetricInTimeBucket$2(java.lang.String, java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        return $z0;
    }

    public static boolean lambda$getRegisteredMetricByName$1(java.lang.String, java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        return $z0;
    }

    public static java.util.stream.Stream lambda$getRegisteredMetricByName$0(java.util.Map)
    {
        java.util.Map r0;
        java.util.Set $r1;
        java.util.stream.Stream $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.stream.Stream stream()>();

        return $r2;
    }
}
